{
	"info": {
		"_postman_id": "57157f71-c2cd-4366-8519-c52c5ff0d358",
		"name": "NLB-48H-TPS",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "VOD_조회",
			"item": [
				{
					"name": "getNXContInfo",
					"item": [
						{
							"name": "getNXContInfo_TC1_슈퍼앨범ID_정상카테고리ID_001:시리즈없음_IPV6=Y_일반편성_예고편=Y_AB=NULL_일반사용자 Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"if(pm.globals.get(\"mode\") == 1) console.log('==================== [ getNXContInfo TC  1 ] ====================');\r",
											"\r",
											"pm.test(\"(1) 정상 응답 여부 확인\", function () {\r",
											"    var arrString = \"\";\r",
											"    var words1 = [];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"\r",
											"    words1 = newline[0].split('|');\r",
											"\r",
											"    if(pm.globals.get(\"mode\") == 1) console.log('1) 정상 응답 여부 확인 : '+ words1[0]);\r",
											"    pm.expect(words1[0]).to.equal('0');\r",
											"})\r",
											"\r",
											"pm.test(\"(2) 이미지URL 정보 제공 확인\", function () {\r",
											"    var arrString = \"\";\r",
											"    var words1 = [];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"\r",
											"    words1 = newline[0].split('|');\r",
											"\r",
											"    if(pm.globals.get(\"mode\") == 1) console.log('2) 이미지URL 정보 제공 확인 : ', words1[2], words1[3], words1[4], words1[5]);\r",
											"    pm.expect(words1[2]).to.not.null;\r",
											"    pm.expect(words1[3]).to.not.null;\r",
											"    pm.expect(words1[4]).to.not.null;\r",
											"    pm.expect(words1[5]).to.not.null;\r",
											"})\r",
											"\r",
											"pm.test(\"(3) 예고편 재생 URL 정보 제공 확인\", function () {\r",
											"    var arrString = \"\";\r",
											"    var words1 = [];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"\r",
											"    words1 = newline[0].split('|');\r",
											"\r",
											"    if(pm.globals.get(\"mode\") == 1) console.log('3) 예고편 재생 URL 정보 제공 확인 : ', words1[6], words1[7], words1[8], words1[9], words1[10], words1[11]);\r",
											"    pm.expect(words1[6]).to.not.null;\r",
											"    pm.expect(words1[7]).to.not.null;\r",
											"    pm.expect(words1[8]).to.not.null;\r",
											"    pm.expect(words1[9]).to.not.null;\r",
											"    pm.expect(words1[10]).to.not.null;\r",
											"    pm.expect(words1[11]).to.not.null;\r",
											"})\r",
											"\r",
											"pm.test(\"(4) IPV6 URL 정보 확인\", function () {\r",
											"    var arrString = \"\";\r",
											"    var words1 = [];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"\r",
											"    words1 = newline[0].split('|');\r",
											"\r",
											"    if(pm.globals.get(\"mode\") == 1) console.log('4) IPV6 URL 정보 확인 : ', words1[14], words1[15], words1[16]);\r",
											"    pm.expect(words1[14]).to.not.null;\r",
											"    pm.expect(words1[15]).to.not.null;\r",
											"    pm.expect(words1[16]).to.not.null;\r",
											"})\r",
											"\r",
											"pm.test(\"(5) 슈퍼앨범ID 확인\", function () {\r",
											"    var arrString = \"\";\r",
											"    var words1 = [];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"\r",
											"    words1 = newline[0].split('|');\r",
											"\r",
											"    var requestParam = pm.request.url.query.get('PARAM');\r",
											"    var param = requestParam.split('|');\r",
											"    var value = param[2].split('=')[1]; \r",
											"\r",
											"    if(pm.globals.get(\"mode\") == 1) console.log('5) 슈퍼앨범ID 확인 : ', words1[13]);\r",
											"    pm.expect(words1[13]).to.equal(value);\r",
											"})\r",
											"\r",
											"pm.test(\"(6) 예고편 정보 확인\", function () {\r",
											"    var arrString = \"\";\r",
											"    var words1 = [];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    var loop_cnt = 0;\r",
											"    var lineCnt = 0;\r",
											"    var comp_line = 0;\r",
											"    \r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"    lineCnt = newline.length;\r",
											"\r",
											"    for(loop_cnt = 0; loop_cnt < lineCnt; loop_cnt++) {\r",
											"        comp_line = loop_cnt + 1;\r",
											"        words1 = newline[comp_line].split('|');\r",
											"\r",
											"        if(words1[0] == 'P'){\r",
											"            if(pm.globals.get(\"mode\") == 1) console.log('6) 예고편 정보 확인 : loop cnt = '+ loop_cnt,'comp line = '+ comp_line, words1[0]);\r",
											"            pm.expect(words1[0]).to.equal('P');\r",
											"            break;\r",
											"        }\r",
											"    }\r",
											"})\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Host",
										"value": "vodlookup.fleta.com",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://{{imcs}}/servlets/CommSvl?CMD=getNXContInfo&PARAM=SA_ID=M14090300006|STB_MAC=9893.cc25.bc23|ALBUM_ID=SUA022065A00000|CAT_ID=AL002|CAT_GB=I30|DEFIN_FLAG=1|NET_TYP=02|FX_TYPE=T|APP_TYPE=RUTA|STB_UX_VERSION=001|IPV6_FLAG=Y|TEST_ID=|VARIATION_ID=|",
									"protocol": "http",
									"host": [
										"{{imcs}}"
									],
									"path": [
										"servlets",
										"CommSvl"
									],
									"query": [
										{
											"key": "CMD",
											"value": "getNXContInfo"
										},
										{
											"key": "PARAM",
											"value": "SA_ID=M14090300006|STB_MAC=9893.cc25.bc23|ALBUM_ID=SUA022065A00000|CAT_ID=AL002|CAT_GB=I30|DEFIN_FLAG=1|NET_TYP=02|FX_TYPE=T|APP_TYPE=RUTA|STB_UX_VERSION=001|IPV6_FLAG=Y|TEST_ID=|VARIATION_ID=|"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "getNXContInfo_TC8_존재하지않는앨범ID_정상카테고리ID_001:시리즈없음_IPV6=Y_일반편성_예고편=N_AB=NULL_일반사용자 Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"if(pm.globals.get(\"mode\") == 1) console.log('==================== [ getNXContInfo TC  8 ] ====================');\r",
											"\r",
											"pm.test(\"(1) 오류 응답 여부 확인\", function () {\r",
											"    var arrString =\"\";\r",
											"    var words1 =[];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"    \r",
											"    words1 = newline[0].split('|');\r",
											"    \r",
											"    if(pm.globals.get(\"mode\") == 1) console.log('1) 오류 응답 여부 확인 : '+ words1[0]);\r",
											"    pm.expect(words1[0]).to.equal('1');\r",
											"})\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Host",
										"value": "vodlookup.fleta.com",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://{{imcs}}/servlets/CommSvl?CMD=getNXContInfo&PARAM=SA_ID=M14090300006|STB_MAC=9893.cc25.bc23|ALBUM_ID=M0110BUA38PPV01|CAT_ID=A401M|CAT_GB=I30|DEFIN_FLAG=1|NET_TYP=02|FX_TYPE=T|APP_TYPE=RUTA|STB_UX_VERSION=001|IPV6_FLAG=Y|TEST_ID=|VARIATION_ID=|",
									"protocol": "http",
									"host": [
										"{{imcs}}"
									],
									"path": [
										"servlets",
										"CommSvl"
									],
									"query": [
										{
											"key": "CMD",
											"value": "getNXContInfo"
										},
										{
											"key": "PARAM",
											"value": "SA_ID=M14090300006|STB_MAC=9893.cc25.bc23|ALBUM_ID=M0110BUA38PPV01|CAT_ID=A401M|CAT_GB=I30|DEFIN_FLAG=1|NET_TYP=02|FX_TYPE=T|APP_TYPE=RUTA|STB_UX_VERSION=001|IPV6_FLAG=Y|TEST_ID=|VARIATION_ID=|"
										},
										{
											"key": "",
											"value": "",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "getNXContInfo_TC41_일반앨범ID (슈퍼앨범ID無)_정상카테고리ID_IPV6=Y_일반편성_AB=NULL_일반사용자 Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"if(pm.globals.get(\"mode\") == 1) console.log('==================== [ getNXContInfo TC 41 ] ====================');\r",
											"\r",
											"var comp_line = 0;\r",
											"var next_flag = 0;\r",
											"\r",
											"pm.test(\"(1) 정상 응답 여부 확인\", function () {\r",
											"    var arrString = \"\";\r",
											"    var words1 = [];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"\r",
											"    words1 = newline[0].split('|');\r",
											"\r",
											"    if(pm.globals.get(\"mode\") == 1) console.log('1) 정상 응답 여부 확인 : '+ words1[0]);\r",
											"    pm.expect(words1[0]).to.equal('0');\r",
											"})\r",
											"\r",
											"pm.test(\"(2) 이미지URL 정보 제공 확인\", function () {\r",
											"    var arrString = \"\";\r",
											"    var words1 = [];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"\r",
											"    words1 = newline[0].split('|');\r",
											"\r",
											"    if(pm.globals.get(\"mode\") == 1) console.log('2) 이미지URL 정보 제공 확인 : ', words1[2], words1[3], words1[4], words1[5]);\r",
											"    pm.expect(words1[2]).to.not.null;\r",
											"    pm.expect(words1[3]).to.not.null;\r",
											"    pm.expect(words1[4]).to.not.null;\r",
											"    pm.expect(words1[5]).to.not.null;\r",
											"})\r",
											"\r",
											"pm.test(\"(3) 슈퍼앨범ID 확인\", function () {\r",
											"    var arrString = \"\";\r",
											"    var words1 = [];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"\r",
											"    words1 = newline[0].split('|');\r",
											"\r",
											"    var requestParam = pm.request.url.query.get('PARAM');\r",
											"    var param = requestParam.split('|');\r",
											"    var value = param[2].split('=')[1]; \r",
											"\r",
											"    if(pm.globals.get(\"mode\") == 1) console.log('3) 슈퍼앨범ID 확인 : ', words1[13]);\r",
											"    pm.expect(words1[13]).to.not.equal('');\r",
											"})\r",
											"\r",
											"pm.test(\"(4) 예고편 및 URL 확인\", function () {\r",
											"    var arrString =\"\";\r",
											"    var words1 =[];\r",
											"    var words2 =[];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    var loop_cnt = 0;\r",
											"    var lineCnt = 0;\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"    lineCnt = newline.length;\r",
											"\r",
											"    words1 = newline[1].split('|');\r",
											"    \r",
											"    for(loop_cnt = 0; loop_cnt < lineCnt; loop_cnt++) {\r",
											"        comp_line = loop_cnt + 1;\r",
											"        words2 = newline[comp_line].split('|');\r",
											"\r",
											"        if(words2[0] == 'M'){\r",
											"            next_flag = 0;\r",
											"            continue;\r",
											"        }\r",
											"        else if(words2[0] == 'P'){\r",
											"            next_flag = 1;\r",
											"            break;\r",
											"        }\r",
											"        else{\r",
											"            next_flag = 0;\r",
											"            break;\r",
											"        }\r",
											"    }\r",
											"    \r",
											"    if(next_flag){\r",
											"        words1 = newline[0].split('|');\r",
											"\r",
											"        if(pm.globals.get(\"mode\") == 1) console.log('4) 예고편 및 URL 있음 : ', words1[6], words1[7], words1[8], words1[9], words1[10], words1[11]);\r",
											"        pm.expect(words1[6]).to.not.equal('');\r",
											"        pm.expect(words1[7]).to.not.equal('');\r",
											"        pm.expect(words1[8]).to.not.equal('');\r",
											"        pm.expect(words1[9]).to.not.equal('');\r",
											"        pm.expect(words1[10]).to.not.equal('');\r",
											"        pm.expect(words1[11]).to.not.equal('');\r",
											"    }\r",
											"    else{\r",
											"        if(pm.globals.get(\"mode\") == 1) console.log('4) 예고편 없음 : ', words2[0]);\r",
											"        pm.expect(words2[0]).to.oneOf(['', '\\n']);\r",
											"    }\r",
											"})\r",
											"\r",
											"pm.test(\"(5) 대표앨범ID 확인\", function () {\r",
											"    var arrString =\"\";\r",
											"    var words1 =[];\r",
											"    var words2 =[];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"    \r",
											"    words1 = newline[1].split('|');\r",
											"    \r",
											"    if(pm.globals.get(\"mode\") == 1) console.log('5) 대표앨범ID 확인 : '+ words1[1]);\r",
											"    pm.expect(words1[1][0]).to.equal('M');\r",
											"})\r",
											"\r",
											"pm.test(\"(6) 앨범제목 확인\", function () {\r",
											"    var arrString =\"\";\r",
											"    var words1 =[];\r",
											"    var words2 =[];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"    \r",
											"    words1 = newline[1].split('|');\r",
											"    \r",
											"    if(pm.globals.get(\"mode\") == 1) console.log('6) 앨범제목 확인 : '+ words1[2]);\r",
											"    //pm.expect(words1[2]).to.not.equal('');\r",
											"})\r",
											"\r",
											"pm.test(\"(7) 줄거리 정보 확인\", function () {\r",
											"    var arrString =\"\";\r",
											"    var words1 =[];\r",
											"    var words2 =[];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"    \r",
											"    words1 = newline[1].split('|');\r",
											"    \r",
											"    if(pm.globals.get(\"mode\") == 1) console.log('7) 줄거리 정보 확인 : '+ words1[27]);\r",
											"    pm.expect(words1[27]).to.not.equal('');\r",
											"})\r",
											"\r",
											"pm.test(\"(8) 이미지 정보 확인\", function () {\r",
											"    var arrString =\"\";\r",
											"    var words1 =[];\r",
											"    var words2 =[];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"    \r",
											"    words1 = newline[1].split('|');\r",
											"    \r",
											"    if(pm.globals.get(\"mode\") == 1) console.log('8) 이미지 정보 확인 : ', words1[44], words1[45], words1[46], words1[47]);\r",
											"    pm.expect(words1[44]).to.not.equal('');\r",
											"    pm.expect(words1[45]).to.not.equal('');\r",
											"    pm.expect(words1[46]).to.not.equal('');\r",
											"    pm.expect(words1[47]).to.not.equal('');\r",
											"})\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Host",
										"value": "vodlookup.fleta.com",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://{{imcs}}/servlets/CommSvl?CMD=getNXContInfo&PARAM=SA_ID=M14090300006|STB_MAC=9893.cc25.bc23|ALBUM_ID=M01218V456PPV00|CAT_ID=A7008|CAT_GB=I30|DEFIN_FLAG=1|NET_TYP=02|FX_TYPE=T|APP_TYPE=RUTA|STB_UX_VERSION=001|IPV6_FLAG=Y|TEST_ID=|VARIATION_ID=|",
									"protocol": "http",
									"host": [
										"{{imcs}}"
									],
									"path": [
										"servlets",
										"CommSvl"
									],
									"query": [
										{
											"key": "CMD",
											"value": "getNXContInfo"
										},
										{
											"key": "PARAM",
											"value": "SA_ID=M14090300006|STB_MAC=9893.cc25.bc23|ALBUM_ID=M01218V456PPV00|CAT_ID=A7008|CAT_GB=I30|DEFIN_FLAG=1|NET_TYP=02|FX_TYPE=T|APP_TYPE=RUTA|STB_UX_VERSION=001|IPV6_FLAG=Y|TEST_ID=|VARIATION_ID=|"
										},
										{
											"key": "",
											"value": "",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "getNXContInfo_TC2_슈퍼앨범ID_정상카테고리ID_001:시리즈있음_IPV6=Y_일반편성_예고편=Y_AB=NULL_일반사용자 Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"if(pm.globals.get(\"mode\") == 1) console.log('==================== [ getNXContInfo TC  2 ] ====================');\r",
											"\r",
											"pm.test(\"(1) 대표 앨범 ID 확인\", function () {\r",
											"    var arrString =\"\";\r",
											"    var words1 =[];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"    \r",
											"    words1 = newline[1].split('|');\r",
											"    \r",
											"    if(pm.globals.get(\"mode\") == 1) console.log('1) 대표 앨범 ID 확인 : '+ words1[1][0]);\r",
											"    pm.expect(words1[1][0]).to.equal('M');\r",
											"})\r",
											"\r",
											"pm.test(\"(2) 앨범제목 확인\", function () {\r",
											"    var arrString =\"\";\r",
											"    var words1 =[];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"    \r",
											"    words1 = newline[1].split('|');\r",
											"\r",
											"    if(pm.globals.get(\"mode\") == 1) console.log('2) 앨범제목 확인 : '+ words1[2]);\r",
											"    pm.expect(words1[2]).to.not.null;\r",
											"})\r",
											"\r",
											"pm.test(\"(3) 이벤트안내문구 확인\", function () {\r",
											"    var arrString =\"\";\r",
											"    var words1 =[];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"    \r",
											"    words1 = newline[1].split('|');\r",
											"\r",
											"    if(pm.globals.get(\"mode\") == 1) console.log('3) 이벤트안내문구 확인 : '+ words1[5]);\r",
											"    pm.expect(words1[5]).to.not.equal('');\r",
											"})\r",
											"\r",
											"pm.test(\"(4) 출연자 정보 확인\", function () {\r",
											"    var arrString =\"\";\r",
											"    var words1 =[];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"    \r",
											"    words1 = newline[1].split('|');\r",
											"\r",
											"    if(pm.globals.get(\"mode\") == 1) console.log('4) 출연자 정보 확인 : '+ words1[17]);\r",
											"    pm.expect(words1[17]).to.not.null;\r",
											"})\r",
											"\r",
											"pm.test(\"(5) 줄거리 정보 확인\", function () {\r",
											"    var arrString =\"\";\r",
											"    var words1 =[];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"    \r",
											"    words1 = newline[1].split('|');\r",
											"\r",
											"    if(pm.globals.get(\"mode\") == 1) console.log('5) 줄거리 정보 확인 : '+ words1[27]);\r",
											"    pm.expect(words1[27]).to.not.null;\r",
											"})\r",
											"\r",
											"pm.test(\"(6) 이미지 정보 확인\", function () {\r",
											"    var arrString =\"\";\r",
											"    var words1 =[];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"    \r",
											"    words1 = newline[1].split('|');\r",
											"\r",
											"    if(pm.globals.get(\"mode\") == 1) console.log('6) 이미지 정보 확인 : ', words1[44], words1[45], words1[46], words1[47]);\r",
											"    pm.expect(words1[44]).to.not.null;\r",
											"    pm.expect(words1[45]).to.not.null;\r",
											"    pm.expect(words1[46]).to.not.null;\r",
											"    pm.expect(words1[47]).to.not.null;\r",
											"})\r",
											"\r",
											"pm.test(\"(7) 슈퍼앨범 기준 아이콘 정보 확인\", function () {\r",
											"    var arrString =\"\";\r",
											"    var words1 =[];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"    \r",
											"    words1 = newline[1].split('|');\r",
											"\r",
											"    if(pm.globals.get(\"mode\") == 1) console.log('7) 슈퍼앨범 기준 아이콘 정보 확인 : ', words1[50], words1[51], words1[52]);\r",
											"    pm.expect(words1[50]).to.not.null;\r",
											"    pm.expect(words1[51]).to.not.null;\r",
											"    pm.expect(words1[52]).to.not.null;\r",
											"})\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Host",
										"value": "vodlookup.fleta.com",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://{{imcs}}/servlets/CommSvl?CMD=getNXContInfo&PARAM=SA_ID=M14090300006|STB_MAC=9893.cc25.bc23|ALBUM_ID=SUA022086002000|CAT_ID=AL007|CAT_GB=I30|DEFIN_FLAG=1|NET_TYP=02|FX_TYPE=T|APP_TYPE=RUTA|STB_UX_VERSION=001|IPV6_FLAG=Y|TEST_ID=|VARIATION_ID=|",
									"protocol": "http",
									"host": [
										"{{imcs}}"
									],
									"path": [
										"servlets",
										"CommSvl"
									],
									"query": [
										{
											"key": "CMD",
											"value": "getNXContInfo"
										},
										{
											"key": "PARAM",
											"value": "SA_ID=M14090300006|STB_MAC=9893.cc25.bc23|ALBUM_ID=SUA022086002000|CAT_ID=AL007|CAT_GB=I30|DEFIN_FLAG=1|NET_TYP=02|FX_TYPE=T|APP_TYPE=RUTA|STB_UX_VERSION=001|IPV6_FLAG=Y|TEST_ID=|VARIATION_ID=|"
										},
										{
											"key": "",
											"value": "",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "getNXContInfo_TC29_일반앨범ID(슈퍼앨범ID有)_정상카테고리ID_001:시리즈없음_IPV6=Y_일반편성_예고편=Y_AB=ALB(데이터有)_일반사용자 Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"if(pm.globals.get(\"mode\") == 1) console.log('==================== [ getNXContInfo TC 29 ] ====================');\r",
											"\r",
											"pm.test(\"(1) 정상 응답 여부 확인\", function () {\r",
											"    var arrString =\"\";\r",
											"    var words1 =[];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"    \r",
											"    words1 = newline[0].split('|');\r",
											"    \r",
											"    if(pm.globals.get(\"mode\") == 1) console.log('1) 정상 응답 여부 확인 : '+ words1[0]);\r",
											"    pm.expect(words1[0]).to.equal('0');\r",
											"})\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Host",
										"value": "vodlookup.fleta.com",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://{{imcs}}/servlets/CommSvl?CMD=getNXContInfo&PARAM=SA_ID=M14090300006|STB_MAC=9893.cc25.bc23|ALBUM_ID=M0120CI239PPV00|CAT_ID=A401M|CAT_GB=I30|DEFIN_FLAG=1|NET_TYP=02|FX_TYPE=T|APP_TYPE=RUTA|STB_UX_VERSION=001|IPV6_FLAG=Y|TEST_ID=ABTEST002|VARIATION_ID=V002|",
									"protocol": "http",
									"host": [
										"{{imcs}}"
									],
									"path": [
										"servlets",
										"CommSvl"
									],
									"query": [
										{
											"key": "CMD",
											"value": "getNXContInfo"
										},
										{
											"key": "PARAM",
											"value": "SA_ID=M14090300006|STB_MAC=9893.cc25.bc23|ALBUM_ID=M0120CI239PPV00|CAT_ID=A401M|CAT_GB=I30|DEFIN_FLAG=1|NET_TYP=02|FX_TYPE=T|APP_TYPE=RUTA|STB_UX_VERSION=001|IPV6_FLAG=Y|TEST_ID=ABTEST002|VARIATION_ID=V002|"
										},
										{
											"key": "",
											"value": "",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "getNXContInfo_TC6_일반앨범ID(슈퍼앨범ID無)_정상카테고리ID_001:시리즈없음_IPV6=Y_일반편성_예고편=Y_AB=NULL_일반사용자 Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"if(pm.globals.get(\"mode\") == 1) console.log('==================== [ getNXContInfo TC  6 ] ====================');\r",
											"\r",
											"pm.test(\"(1) 대표 앨범 ID 확인\", function () {\r",
											"    var arrString =\"\";\r",
											"    var words1 =[];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"    \r",
											"    words1 = newline[1].split('|');\r",
											"\r",
											"    if(pm.globals.get(\"mode\") == 1) console.log('1) 대표 앨범 ID 확인 : '+ words1[1][0]);\r",
											"    pm.expect(words1[1][0]).to.equal('M');\r",
											"})\r",
											"\r",
											"pm.test(\"(2) 앨범제목 확인\", function () {\r",
											"    var arrString =\"\";\r",
											"    var words1 =[];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"    \r",
											"    words1 = newline[1].split('|');\r",
											"\r",
											"    if(pm.globals.get(\"mode\") == 1) console.log('2) 앨범제목 확인 : '+ words1[2]);\r",
											"    //pm.expect(words1[2]).to.not.null;\r",
											"    pm.expect(words1[2]).to.not.equal('');\r",
											"})\r",
											"\r",
											"pm.test(\"(3) 이벤트안내문구 확인\", function () {\r",
											"    var arrString =\"\";\r",
											"    var words1 =[];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"    \r",
											"    words1 = newline[1].split('|');\r",
											"\r",
											"    if(pm.globals.get(\"mode\") == 1) console.log('3) 이벤트안내문구 확인 : '+ words1[5]);\r",
											"    pm.expect(words1[5]).to.not.null;\r",
											"})\r",
											"\r",
											"pm.test(\"(4) 출연자 정보 확인\", function () {\r",
											"    var arrString =\"\";\r",
											"    var words1 =[];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"    \r",
											"    words1 = newline[1].split('|');\r",
											"\r",
											"    if(pm.globals.get(\"mode\") == 1) console.log('4) 출연자 정보 확인 : '+ words1[17]);\r",
											"    pm.expect(words1[17]).to.not.null;\r",
											"})\r",
											"\r",
											"pm.test(\"(5) 줄거리 정보 확인\", function () {\r",
											"    var arrString =\"\";\r",
											"    var words1 =[];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"    \r",
											"    words1 = newline[1].split('|');\r",
											"\r",
											"    if(pm.globals.get(\"mode\") == 1) console.log('5) 줄거리 정보 확인 : '+ words1[27]);\r",
											"    pm.expect(words1[27]).to.not.null;\r",
											"})\r",
											"\r",
											"pm.test(\"(6) 이미지 정보 확인\", function () {\r",
											"    var arrString =\"\";\r",
											"    var words1 =[];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"    \r",
											"    words1 = newline[1].split('|');\r",
											"\r",
											"    if(pm.globals.get(\"mode\") == 1) console.log('6) 이미지 정보 확인 : ', words1[44], words1[45], words1[46], words1[47]);\r",
											"    pm.expect(words1[44]).to.not.null;\r",
											"    pm.expect(words1[45]).to.not.null;\r",
											"    pm.expect(words1[46]).to.not.null;\r",
											"    pm.expect(words1[47]).to.not.null;\r",
											"})\r",
											"\r",
											"pm.test(\"(7) 슈퍼앨범 기준 아이콘 정보 확인\", function () {\r",
											"    var arrString =\"\";\r",
											"    var words1 =[];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"    \r",
											"    words1 = newline[1].split('|');\r",
											"\r",
											"    if(pm.globals.get(\"mode\") == 1) console.log('7) 슈퍼앨범 기준 아이콘 정보 확인 : ', words1[50], words1[51], words1[52]);\r",
											"    pm.expect(words1[50]).to.not.null;\r",
											"    pm.expect(words1[51]).to.not.null;\r",
											"    pm.expect(words1[52]).to.not.null;\r",
											"})\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Host",
										"value": "vodlookup.fleta.com",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://{{imcs}}/servlets/CommSvl?CMD=getNXContInfo&PARAM=SA_ID=M14090300006|STB_MAC=9893.cc25.bc23|ALBUM_ID=M01218Q275PPV00|CAT_ID=A401M|CAT_GB=I30|DEFIN_FLAG=1|NET_TYP=02|FX_TYPE=T|APP_TYPE=RUTA|STB_UX_VERSION=001|IPV6_FLAG=Y|TEST_ID=|VARIATION_ID=|",
									"protocol": "http",
									"host": [
										"{{imcs}}"
									],
									"path": [
										"servlets",
										"CommSvl"
									],
									"query": [
										{
											"key": "CMD",
											"value": "getNXContInfo"
										},
										{
											"key": "PARAM",
											"value": "SA_ID=M14090300006|STB_MAC=9893.cc25.bc23|ALBUM_ID=M01218Q275PPV00|CAT_ID=A401M|CAT_GB=I30|DEFIN_FLAG=1|NET_TYP=02|FX_TYPE=T|APP_TYPE=RUTA|STB_UX_VERSION=001|IPV6_FLAG=Y|TEST_ID=|VARIATION_ID=|"
										},
										{
											"key": "",
											"value": "",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "getNXContInfo_TC7_존재하지않는슈퍼앨범ID_정상카테고리ID_001:시리즈없음_IPV6=Y_일반편성_예고편=N_AB=NULL_일반사용자 Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"if(pm.globals.get(\"mode\") == 1) console.log('==================== [ getNXContInfo TC  7 ] ====================');\r",
											"\r",
											"pm.test(\"(1) 오류 응답 여부 확인\", function () {\r",
											"    var arrString =\"\";\r",
											"    var words1 =[];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"    \r",
											"    words1 = newline[0].split('|');\r",
											"    \r",
											"    if(pm.globals.get(\"mode\") == 1) console.log('1) 오류 응답 여부 확인 : '+ words1[0]);\r",
											"    pm.expect(words1[0]).to.equal('1');\r",
											"})\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Host",
										"value": "vodlookup.fleta.com",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://{{imcs}}/servlets/CommSvl?CMD=getNXContInfo&PARAM=SA_ID=M14090300006|STB_MAC=9893.cc25.bc23|ALBUM_ID=SUA022065A00011|CAT_ID=A401M|CAT_GB=I30|DEFIN_FLAG=1|NET_TYP=02|FX_TYPE=T|APP_TYPE=RUTA|STB_UX_VERSION=001|IPV6_FLAG=Y|TEST_ID=|VARIATION_ID=|",
									"protocol": "http",
									"host": [
										"{{imcs}}"
									],
									"path": [
										"servlets",
										"CommSvl"
									],
									"query": [
										{
											"key": "CMD",
											"value": "getNXContInfo"
										},
										{
											"key": "PARAM",
											"value": "SA_ID=M14090300006|STB_MAC=9893.cc25.bc23|ALBUM_ID=SUA022065A00011|CAT_ID=A401M|CAT_GB=I30|DEFIN_FLAG=1|NET_TYP=02|FX_TYPE=T|APP_TYPE=RUTA|STB_UX_VERSION=001|IPV6_FLAG=Y|TEST_ID=|VARIATION_ID=|"
										},
										{
											"key": "",
											"value": "",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "getNXContInfo_TC8_존재하지않는앨범ID_정상카테고리ID_001:시리즈없음_IPV6=Y_일반편성_예고편=N_AB=NULL_일반사용자",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"if(pm.globals.get(\"mode\") == 1) console.log('==================== [ getNXContInfo TC  8 ] ====================');\r",
											"\r",
											"pm.test(\"(1) 오류 응답 여부 확인\", function () {\r",
											"    var arrString =\"\";\r",
											"    var words1 =[];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"    \r",
											"    words1 = newline[0].split('|');\r",
											"    \r",
											"    if(pm.globals.get(\"mode\") == 1) console.log('1) 오류 응답 여부 확인 : '+ words1[0]);\r",
											"    pm.expect(words1[0]).to.equal('1');\r",
											"})\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Host",
										"value": "vodlookup.fleta.com",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://{{imcs}}/servlets/CommSvl?CMD=getNXContInfo&PARAM=SA_ID=M14090300006|STB_MAC=9893.cc25.bc23|ALBUM_ID=M0110BUA38PPV01|CAT_ID=A401M|CAT_GB=I30|DEFIN_FLAG=1|NET_TYP=02|FX_TYPE=T|APP_TYPE=RUTA|STB_UX_VERSION=001|IPV6_FLAG=Y|TEST_ID=|VARIATION_ID=|",
									"protocol": "http",
									"host": [
										"{{imcs}}"
									],
									"path": [
										"servlets",
										"CommSvl"
									],
									"query": [
										{
											"key": "CMD",
											"value": "getNXContInfo"
										},
										{
											"key": "PARAM",
											"value": "SA_ID=M14090300006|STB_MAC=9893.cc25.bc23|ALBUM_ID=M0110BUA38PPV01|CAT_ID=A401M|CAT_GB=I30|DEFIN_FLAG=1|NET_TYP=02|FX_TYPE=T|APP_TYPE=RUTA|STB_UX_VERSION=001|IPV6_FLAG=Y|TEST_ID=|VARIATION_ID=|"
										}
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"// 공통",
									"",
									"// WAS 정상응답 체크 (200여부)",
									"pm.test(\"[공통]WAS 정상응답 체크 (200여부)\", function () {",
									"    pm.response.to.have.status(200);   ",
									"});",
									"",
									"// 응답속도 체크(0.5초미만) 여부",
									"pm.test(\"[공통]응답속도 체크(0.5초미만)\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(500);",
									"});"
								]
							}
						}
					]
				},
				{
					"name": "getNXContSub",
					"item": [
						{
							"name": "getNXContSub_TC6_일반사용자_슈퍼앨범 있는 앨범ID_AB:메타(ALB)(데이터無) Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"if(pm.globals.get(\"mode\") == 1) console.log('==================== [ getNXContSub TC  6 ] ====================');\r",
											"\r",
											"pm.test(\"(2) AB 줄거리 데이터 제공\", function () {\r",
											"    var arrString =\"\";\r",
											"    var words1 =[];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"    \r",
											"    words1 = newline[1].split('|');\r",
											"\r",
											"    if(pm.globals.get(\"mode\") == 1) console.log('2) AB 줄거리 데이터 제공 : '+ words1[5]);\r",
											"    pm.expect(words1[5]).to.not.null;\r",
											"})\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Host",
										"value": "vodlookup.fleta.com",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://{{imcs}}/servlets/CommSvl?CMD=getNXContSub&PARAM=SA_ID=M14090300006|STB_MAC=9893.cc25.bc23|ALBUM_ID=M0120C7301PPV00|TEST_ID=ABTEST002|VARIATION_ID=V002|",
									"protocol": "http",
									"host": [
										"{{imcs}}"
									],
									"path": [
										"servlets",
										"CommSvl"
									],
									"query": [
										{
											"key": "CMD",
											"value": "getNXContSub"
										},
										{
											"key": "PARAM",
											"value": "SA_ID=M14090300006|STB_MAC=9893.cc25.bc23|ALBUM_ID=M0120C7301PPV00|TEST_ID=ABTEST002|VARIATION_ID=V002|"
										},
										{
											"key": "",
											"value": "",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "getNXContSub_TC6_일반사용자_슈퍼앨범 있는 앨범ID_AB:메타(ALB)(데이터無) Copy 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"if(pm.globals.get(\"mode\") == 1) console.log('==================== [ getNXContSub TC  6 ] ====================');\r",
											"\r",
											"pm.test(\"(2) AB 줄거리 데이터 제공\", function () {\r",
											"    var arrString =\"\";\r",
											"    var words1 =[];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"    \r",
											"    words1 = newline[1].split('|');\r",
											"\r",
											"    if(pm.globals.get(\"mode\") == 1) console.log('2) AB 줄거리 데이터 제공 : '+ words1[5]);\r",
											"    pm.expect(words1[5]).to.not.null;\r",
											"})\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Host",
										"value": "vodlookup.fleta.com",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://{{imcs}}/servlets/CommSvl?CMD=getNXContSub&PARAM=SA_ID=M14090300006|STB_MAC=9893.cc25.bc23|ALBUM_ID=M0120C7301PPV00|TEST_ID=ABTEST002|VARIATION_ID=V002|",
									"protocol": "http",
									"host": [
										"{{imcs}}"
									],
									"path": [
										"servlets",
										"CommSvl"
									],
									"query": [
										{
											"key": "CMD",
											"value": "getNXContSub"
										},
										{
											"key": "PARAM",
											"value": "SA_ID=M14090300006|STB_MAC=9893.cc25.bc23|ALBUM_ID=M0120C7301PPV00|TEST_ID=ABTEST002|VARIATION_ID=V002|"
										},
										{
											"key": "",
											"value": "",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "getNXContSub_TC3_일반사용자_슈퍼앨범 있는 앨범ID_AB:유효하지않음 Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"if(pm.globals.get(\"mode\") == 1) console.log('==================== [ getNXContSub TC  3 ] ====================');\r",
											"\r",
											"pm.test(\"(2) 정상 응답 여부 확인\", function () {\r",
											"    var arrString =\"\";\r",
											"    var words1 =[];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"    \r",
											"    words1 = newline[0].split('|');\r",
											"    \r",
											"    if(pm.globals.get(\"mode\") == 1) console.log('2) 정상 응답 여부 확인 : '+ words1[0]);\r",
											"    pm.expect(words1[0]).to.equal('0');\r",
											"})\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Host",
										"value": "vodlookup.fleta.com",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://{{imcs}}/servlets/CommSvl?CMD=getNXContSub&PARAM=SA_ID=M14090300006|STB_MAC=9893.cc25.bc23|ALBUM_ID=M01162H190PPV00|TEST_ID=XXXXX|VARIATION_ID=XXXXX|",
									"protocol": "http",
									"host": [
										"{{imcs}}"
									],
									"path": [
										"servlets",
										"CommSvl"
									],
									"query": [
										{
											"key": "CMD",
											"value": "getNXContSub"
										},
										{
											"key": "PARAM",
											"value": "SA_ID=M14090300006|STB_MAC=9893.cc25.bc23|ALBUM_ID=M01162H190PPV00|TEST_ID=XXXXX|VARIATION_ID=XXXXX|"
										},
										{
											"key": "",
											"value": "",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "getNXContSub_TC10_일반사용자_슈퍼앨범 있는 앨범ID : 우리말검수_AB:null Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"if(pm.globals.get(\"mode\") == 1) console.log('==================== [ getNXContSub TC 10 ] ====================');\r",
											"\r",
											"pm.test(\"(1) 검수 편성 기준 자막 정보 미제공\", function () {\r",
											"    var arrString =\"\";\r",
											"    var words1 =[];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"    \r",
											"    words1 = newline[1].split('|');\r",
											"\r",
											"    if(pm.globals.get(\"mode\") == 1) console.log('1) 검수 편성 기준 자막 정보 미제공 : '+ words1[9]);\r",
											"    pm.expect(words1[9]).to.be.oneOf(['','N']);\r",
											"})\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Host",
										"value": "vodlookup.fleta.com",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://{{imcs}}/servlets/CommSvl?CMD=getNXContSub&PARAM=SA_ID=M14090300006|STB_MAC=9893.cc25.bc23|ALBUM_ID=M0119AV063PPV00|TEST_ID=|VARIATION_ID=|",
									"protocol": "http",
									"host": [
										"{{imcs}}"
									],
									"path": [
										"servlets",
										"CommSvl"
									],
									"query": [
										{
											"key": "CMD",
											"value": "getNXContSub"
										},
										{
											"key": "PARAM",
											"value": "SA_ID=M14090300006|STB_MAC=9893.cc25.bc23|ALBUM_ID=M0119AV063PPV00|TEST_ID=|VARIATION_ID=|"
										},
										{
											"key": "",
											"value": "",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "getNXContSub_TC4_일반사용자_슈퍼앨범 있는 앨범ID_AB:편성(CAT) Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"if(pm.globals.get(\"mode\") == 1) console.log('==================== [ getNXContSub TC  4 ] ====================');\r",
											"\r",
											"pm.test(\"(2) 정상 응답 여부 확인\", function () {\r",
											"    var arrString =\"\";\r",
											"    var words1 =[];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"    \r",
											"    words1 = newline[0].split('|');\r",
											"    \r",
											"    if(pm.globals.get(\"mode\") == 1) console.log('2) 정상 응답 여부 확인 : '+ words1[0]);\r",
											"    pm.expect(words1[0]).to.equal('0');\r",
											"})\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Host",
										"value": "vodlookup.fleta.com",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://{{imcs}}/servlets/CommSvl?CMD=getNXContSub&PARAM=SA_ID=M14090300006|STB_MAC=9893.cc25.bc23|ALBUM_ID=M0119CQ121PPV00|TEST_ID=ABTEST001|VARIATION_ID=V001|",
									"protocol": "http",
									"host": [
										"{{imcs}}"
									],
									"path": [
										"servlets",
										"CommSvl"
									],
									"query": [
										{
											"key": "CMD",
											"value": "getNXContSub"
										},
										{
											"key": "PARAM",
											"value": "SA_ID=M14090300006|STB_MAC=9893.cc25.bc23|ALBUM_ID=M0119CQ121PPV00|TEST_ID=ABTEST001|VARIATION_ID=V001|"
										},
										{
											"key": "",
											"value": "",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "getNXContSub_TC7_일반사용자_슈퍼앨범 없는 앨범ID : 자막일반_AB:null Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"if(pm.globals.get(\"mode\") == 1) console.log('==================== [ getNXContSub TC  7 ] ====================');\r",
											"\r",
											"pm.test(\"(1) 슈퍼앨범이 없기 때문에 바디 10번째 자막 지원 여부 'Y', 바디 11번째 우리말 지원 여부 'N' or ''\", function () {\r",
											"    var arrString =\"\";\r",
											"    var words1 =[];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"    \r",
											"    words1 = newline[1].split('|');\r",
											"\r",
											"    if(pm.globals.get(\"mode\") == 1) console.log('1) 슈퍼앨범없음, 자막 지원 Y 우리말 지원 N', words1[9], words1[10]);\r",
											"    pm.expect(words1[9]).to.equal('Y');\r",
											"    pm.expect(words1[10]).to.be.oneOf(['','N']);\r",
											"})\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Host",
										"value": "vodlookup.fleta.com",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://{{imcs}}/servlets/CommSvl?CMD=getNXContSub&PARAM=SA_ID=M14090300006|STB_MAC=9893.cc25.bc23|ALBUM_ID=M0120C4334PPV00|TEST_ID=|VARIATION_ID=|",
									"protocol": "http",
									"host": [
										"{{imcs}}"
									],
									"path": [
										"servlets",
										"CommSvl"
									],
									"query": [
										{
											"key": "CMD",
											"value": "getNXContSub"
										},
										{
											"key": "PARAM",
											"value": "SA_ID=M14090300006|STB_MAC=9893.cc25.bc23|ALBUM_ID=M0120C4334PPV00|TEST_ID=|VARIATION_ID=|"
										},
										{
											"key": "",
											"value": "",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "getNXContSub_TC8_일반사용자_슈퍼앨범 있는 앨범ID : 자막일반_AB:null Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"if(pm.globals.get(\"mode\") == 1) console.log('==================== [ getNXContSub TC  8 ] ====================');\r",
											"\r",
											"pm.test(\"(1) 슈퍼앨범이 없기 때문에 바디 10번째 자막 지원 여부 'Y', 바디 11번째 우리말 지원 여부 'Y'\", function () {\r",
											"    var arrString =\"\";\r",
											"    var words1 =[];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"    \r",
											"    words1 = newline[1].split('|');\r",
											"\r",
											"    if(pm.globals.get(\"mode\") == 1) console.log('1) 슈퍼앨범없음, 자막 지원 Y 우리말 지원 Y', words1[9], words1[10]);\r",
											"    pm.expect(words1[9]).to.equal('Y');\r",
											"    pm.expect(words1[10]).to.equal('Y');\r",
											"})\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Host",
										"value": "vodlookup.fleta.com",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://{{imcs}}/servlets/CommSvl?CMD=getNXContSub&PARAM=SA_ID=M14090300006|STB_MAC=9893.cc25.bc23|ALBUM_ID=M011535452PPV00|TEST_ID=|VARIATION_ID=|",
									"protocol": "http",
									"host": [
										"{{imcs}}"
									],
									"path": [
										"servlets",
										"CommSvl"
									],
									"query": [
										{
											"key": "CMD",
											"value": "getNXContSub"
										},
										{
											"key": "PARAM",
											"value": "SA_ID=M14090300006|STB_MAC=9893.cc25.bc23|ALBUM_ID=M011535452PPV00|TEST_ID=|VARIATION_ID=|"
										},
										{
											"key": "",
											"value": "",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "getNXContSub_TC9_검수사용자_슈퍼앨범 있는 앨범ID : 우리말검수_AB:null Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"if(pm.globals.get(\"mode\") == 1) console.log('==================== [ getNXContSub TC  9 ] ====================');\r",
											"\r",
											"pm.test(\"(1) 검수 편성 기준 자막 정보 제공\", function () {\r",
											"    var arrString =\"\";\r",
											"    var words1 =[];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"    \r",
											"    words1 = newline[1].split('|');\r",
											"    \r",
											"    if(pm.globals.get(\"mode\") == 1) console.log('1) 검수 편성 기준 자막 정보 제공 : '+ words1[9]);\r",
											"    pm.expect(words1[9]).to.equal('Y');\r",
											"})\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Host",
										"value": "vodlookup.fleta.com",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://{{imcs}}/servlets/CommSvl?CMD=getNXContSub&PARAM=SA_ID=M14090300009|STB_MAC=9893.cc25.bc22|ALBUM_ID=M0119AV063PPV00|TEST_ID=|VARIATION_ID=|",
									"protocol": "http",
									"host": [
										"{{imcs}}"
									],
									"path": [
										"servlets",
										"CommSvl"
									],
									"query": [
										{
											"key": "CMD",
											"value": "getNXContSub"
										},
										{
											"key": "PARAM",
											"value": "SA_ID=M14090300009|STB_MAC=9893.cc25.bc22|ALBUM_ID=M0119AV063PPV00|TEST_ID=|VARIATION_ID=|"
										},
										{
											"key": "",
											"value": "",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "getNXContSub_TC5_일반사용자_슈퍼앨범 없는 앨범ID_AB:메타(ALB)(데이터有) Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"if(pm.globals.get(\"mode\") == 1) console.log('==================== [ getNXContSub TC  5 ] ====================');\r",
											"\r",
											"pm.test(\"(2) AB 줄거리 데이터 제공\", function () {\r",
											"    var arrString =\"\";\r",
											"    var words1 =[];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"    \r",
											"    words1 = newline[1].split('|');\r",
											"\r",
											"    if(pm.globals.get(\"mode\") == 1) console.log('2) AB 줄거리 데이터 제공 : '+ words1[5]);\r",
											"    pm.expect(words1[5]).to.not.null;\r",
											"})\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Host",
										"value": "vodlookup.fleta.com",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://{{imcs}}/servlets/CommSvl?CMD=getNXContSub&PARAM=SA_ID=M14090300006|STB_MAC=9893.cc25.bc23|ALBUM_ID=M0120CI239PPV00|TEST_ID=ABTEST002|VARIATION_ID=V002|",
									"protocol": "http",
									"host": [
										"{{imcs}}"
									],
									"path": [
										"servlets",
										"CommSvl"
									],
									"query": [
										{
											"key": "CMD",
											"value": "getNXContSub"
										},
										{
											"key": "PARAM",
											"value": "SA_ID=M14090300006|STB_MAC=9893.cc25.bc23|ALBUM_ID=M0120CI239PPV00|TEST_ID=ABTEST002|VARIATION_ID=V002|"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "getNXContSub_TC11_일반사용자_유효하지 않은 앨범 Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"if(pm.globals.get(\"mode\") == 1) console.log('==================== [ getNXContSub TC 11 ] ====================');\r",
											"\r",
											"pm.test(\"(1) 오류 응답정보 제공 확인\", function () {\r",
											"    var arrString =\"\";\r",
											"    var words1 =[];\r",
											"    var words2 =[];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"    \r",
											"    words1 = newline[0].split('|');\r",
											"    \r",
											"    if(pm.globals.get(\"mode\") == 1) console.log('1) 오류 응답 정보 제공 : '+ words1[0]);\r",
											"    pm.expect(words1[0]).to.equal('1');\r",
											"})\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Host",
										"value": "vodlookup.fleta.com",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://{{imcs}}/servlets/CommSvl?CMD=getNXContSub&PARAM=SA_ID=M14090300006|STB_MAC=9893.cc25.bc23|ALBUM_ID=M0119AV063PPV01|TEST_ID=|VARIATION_ID=|",
									"protocol": "http",
									"host": [
										"{{imcs}}"
									],
									"path": [
										"servlets",
										"CommSvl"
									],
									"query": [
										{
											"key": "CMD",
											"value": "getNXContSub"
										},
										{
											"key": "PARAM",
											"value": "SA_ID=M14090300006|STB_MAC=9893.cc25.bc23|ALBUM_ID=M0119AV063PPV01|TEST_ID=|VARIATION_ID=|"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "getNXContSub_TC1_일반사용자_슈퍼앨범 없는 앨범ID_AB:null Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"if(pm.globals.get(\"mode\") == 1) console.log('==================== [ getNXContSub TC  1 ] ====================');\r",
											"\r",
											"pm.test(\"(1) 정상 응답 여부 확인\", function () {\r",
											"    var arrString =\"\";\r",
											"    var words1 =[];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"    \r",
											"    words1 = newline[0].split('|');\r",
											"    \r",
											"    if(pm.globals.get(\"mode\") == 1) console.log('1) 정상 응답 여부 확인 : '+ words1[0]);\r",
											"    pm.expect(words1[0]).to.equal('0');\r",
											"})\r",
											"\r",
											"pm.test(\"(2) 이벤트 안내 문구 제공 확인\", function () {\r",
											"    var arrString =\"\";\r",
											"    var words1 =[];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"    \r",
											"    words1 = newline[1].split('|');\r",
											"\r",
											"    if(pm.globals.get(\"mode\") == 1) console.log('2) 이벤트 안내 문구 제공 확인 : '+ words1[2]);\r",
											"    pm.expect(words1[2]).to.not.equal('');\r",
											"})\r",
											"\r",
											"pm.test(\"(3) 줄거리 제공 확인\", function () {\r",
											"    var arrString =\"\";\r",
											"    var words1 =[];\r",
											"\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"    \r",
											"    words1 = newline[1].split('|');\r",
											"\r",
											"    if(pm.globals.get(\"mode\") == 1) console.log('3) 줄거리 제공 확인 : '+ words1[5]);\r",
											"    pm.expect(words1[5]).to.not.equal('');\r",
											"})\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Host",
										"value": "vodlookup.fleta.com",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://{{imcs}}/servlets/CommSvl?CMD=getNXContSub&PARAM=SA_ID=M14090300006|STB_MAC=9893.cc25.bc23|ALBUM_ID=M012193380PPV00|TEST_ID=|VARIATION_ID=|",
									"protocol": "http",
									"host": [
										"{{imcs}}"
									],
									"path": [
										"servlets",
										"CommSvl"
									],
									"query": [
										{
											"key": "CMD",
											"value": "getNXContSub"
										},
										{
											"key": "PARAM",
											"value": "SA_ID=M14090300006|STB_MAC=9893.cc25.bc23|ALBUM_ID=M012193380PPV00|TEST_ID=|VARIATION_ID=|"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "getNXContSub_TC2_일반사용자_슈퍼앨범 있는 앨범ID_AB:null Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"if(pm.globals.get(\"mode\") == 1) console.log('==================== [ getNXContSub TC  2 ] ====================');\r",
											"\r",
											"pm.test(\"(2) 정상 응답 여부 확인\", function () {\r",
											"    var arrString =\"\";\r",
											"    var words1 =[];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"    \r",
											"    words1 = newline[0].split('|');\r",
											"    \r",
											"    if(pm.globals.get(\"mode\") == 1) console.log('2) 정상 응답 여부 확인 : '+ words1[0]);\r",
											"    pm.expect(words1[0]).to.equal('0');\r",
											"})\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Host",
										"value": "vodlookup.fleta.com",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://{{imcs}}/servlets/CommSvl?CMD=getNXContSub&PARAM=SA_ID=M14090300006|STB_MAC=9893.cc25.bc23|ALBUM_ID=M0118BR299PPV00|TEST_ID=|VARIATION_ID=|",
									"protocol": "http",
									"host": [
										"{{imcs}}"
									],
									"path": [
										"servlets",
										"CommSvl"
									],
									"query": [
										{
											"key": "CMD",
											"value": "getNXContSub"
										},
										{
											"key": "PARAM",
											"value": "SA_ID=M14090300006|STB_MAC=9893.cc25.bc23|ALBUM_ID=M0118BR299PPV00|TEST_ID=|VARIATION_ID=|"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "getNXContSub_TC1_일반사용자_슈퍼앨범 없는 앨범ID_AB:null Copy 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"if(pm.globals.get(\"mode\") == 1) console.log('==================== [ getNXContSub TC  1 ] ====================');\r",
											"\r",
											"pm.test(\"(1) 정상 응답 여부 확인\", function () {\r",
											"    var arrString =\"\";\r",
											"    var words1 =[];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"    \r",
											"    words1 = newline[0].split('|');\r",
											"    \r",
											"    if(pm.globals.get(\"mode\") == 1) console.log('1) 정상 응답 여부 확인 : '+ words1[0]);\r",
											"    pm.expect(words1[0]).to.equal('0');\r",
											"})\r",
											"\r",
											"pm.test(\"(2) 이벤트 안내 문구 제공 확인\", function () {\r",
											"    var arrString =\"\";\r",
											"    var words1 =[];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"    \r",
											"    words1 = newline[1].split('|');\r",
											"\r",
											"    if(pm.globals.get(\"mode\") == 1) console.log('2) 이벤트 안내 문구 제공 확인 : '+ words1[2]);\r",
											"    pm.expect(words1[2]).to.not.equal('');\r",
											"})\r",
											"\r",
											"pm.test(\"(3) 줄거리 제공 확인\", function () {\r",
											"    var arrString =\"\";\r",
											"    var words1 =[];\r",
											"\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"    \r",
											"    words1 = newline[1].split('|');\r",
											"\r",
											"    if(pm.globals.get(\"mode\") == 1) console.log('3) 줄거리 제공 확인 : '+ words1[5]);\r",
											"    pm.expect(words1[5]).to.not.equal('');\r",
											"})\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Host",
										"value": "vodlookup.fleta.com",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://{{imcs}}/servlets/CommSvl?CMD=getNXContSub&PARAM=SA_ID=M14090300006|STB_MAC=9893.cc25.bc23|ALBUM_ID=M012193380PPV00|TEST_ID=|VARIATION_ID=|",
									"protocol": "http",
									"host": [
										"{{imcs}}"
									],
									"path": [
										"servlets",
										"CommSvl"
									],
									"query": [
										{
											"key": "CMD",
											"value": "getNXContSub"
										},
										{
											"key": "PARAM",
											"value": "SA_ID=M14090300006|STB_MAC=9893.cc25.bc23|ALBUM_ID=M012193380PPV00|TEST_ID=|VARIATION_ID=|"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "getNXContSub_TC2_일반사용자_슈퍼앨범 있는 앨범ID_AB:null Copy 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"if(pm.globals.get(\"mode\") == 1) console.log('==================== [ getNXContSub TC  2 ] ====================');\r",
											"\r",
											"pm.test(\"(2) 정상 응답 여부 확인\", function () {\r",
											"    var arrString =\"\";\r",
											"    var words1 =[];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"    \r",
											"    words1 = newline[0].split('|');\r",
											"    \r",
											"    if(pm.globals.get(\"mode\") == 1) console.log('2) 정상 응답 여부 확인 : '+ words1[0]);\r",
											"    pm.expect(words1[0]).to.equal('0');\r",
											"})\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Host",
										"value": "vodlookup.fleta.com",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://{{imcs}}/servlets/CommSvl?CMD=getNXContSub&PARAM=SA_ID=M14090300006|STB_MAC=9893.cc25.bc23|ALBUM_ID=M0118BR299PPV00|TEST_ID=|VARIATION_ID=|",
									"protocol": "http",
									"host": [
										"{{imcs}}"
									],
									"path": [
										"servlets",
										"CommSvl"
									],
									"query": [
										{
											"key": "CMD",
											"value": "getNXContSub"
										},
										{
											"key": "PARAM",
											"value": "SA_ID=M14090300006|STB_MAC=9893.cc25.bc23|ALBUM_ID=M0118BR299PPV00|TEST_ID=|VARIATION_ID=|"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "getNXContSub_TC3_일반사용자_슈퍼앨범 있는 앨범ID_AB:유효하지않음 Copy 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"if(pm.globals.get(\"mode\") == 1) console.log('==================== [ getNXContSub TC  3 ] ====================');\r",
											"\r",
											"pm.test(\"(2) 정상 응답 여부 확인\", function () {\r",
											"    var arrString =\"\";\r",
											"    var words1 =[];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"    \r",
											"    words1 = newline[0].split('|');\r",
											"    \r",
											"    if(pm.globals.get(\"mode\") == 1) console.log('2) 정상 응답 여부 확인 : '+ words1[0]);\r",
											"    pm.expect(words1[0]).to.equal('0');\r",
											"})\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Host",
										"value": "vodlookup.fleta.com",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://{{imcs}}/servlets/CommSvl?CMD=getNXContSub&PARAM=SA_ID=M14090300006|STB_MAC=9893.cc25.bc23|ALBUM_ID=M01162H190PPV00|TEST_ID=XXXXX|VARIATION_ID=XXXXX|",
									"protocol": "http",
									"host": [
										"{{imcs}}"
									],
									"path": [
										"servlets",
										"CommSvl"
									],
									"query": [
										{
											"key": "CMD",
											"value": "getNXContSub"
										},
										{
											"key": "PARAM",
											"value": "SA_ID=M14090300006|STB_MAC=9893.cc25.bc23|ALBUM_ID=M01162H190PPV00|TEST_ID=XXXXX|VARIATION_ID=XXXXX|"
										},
										{
											"key": "",
											"value": "",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "getNXContSub_TC4_일반사용자_슈퍼앨범 있는 앨범ID_AB:편성(CAT) Copy 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"if(pm.globals.get(\"mode\") == 1) console.log('==================== [ getNXContSub TC  4 ] ====================');\r",
											"\r",
											"pm.test(\"(2) 정상 응답 여부 확인\", function () {\r",
											"    var arrString =\"\";\r",
											"    var words1 =[];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"    \r",
											"    words1 = newline[0].split('|');\r",
											"    \r",
											"    if(pm.globals.get(\"mode\") == 1) console.log('2) 정상 응답 여부 확인 : '+ words1[0]);\r",
											"    pm.expect(words1[0]).to.equal('0');\r",
											"})\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Host",
										"value": "vodlookup.fleta.com",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://{{imcs}}/servlets/CommSvl?CMD=getNXContSub&PARAM=SA_ID=M14090300006|STB_MAC=9893.cc25.bc23|ALBUM_ID=M0119CQ121PPV00|TEST_ID=ABTEST001|VARIATION_ID=V001|",
									"protocol": "http",
									"host": [
										"{{imcs}}"
									],
									"path": [
										"servlets",
										"CommSvl"
									],
									"query": [
										{
											"key": "CMD",
											"value": "getNXContSub"
										},
										{
											"key": "PARAM",
											"value": "SA_ID=M14090300006|STB_MAC=9893.cc25.bc23|ALBUM_ID=M0119CQ121PPV00|TEST_ID=ABTEST001|VARIATION_ID=V001|"
										},
										{
											"key": "",
											"value": "",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "getNXContSub_TC5_일반사용자_슈퍼앨범 없는 앨범ID_AB:메타(ALB)(데이터有) Copy 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"if(pm.globals.get(\"mode\") == 1) console.log('==================== [ getNXContSub TC  5 ] ====================');\r",
											"\r",
											"pm.test(\"(2) AB 줄거리 데이터 제공\", function () {\r",
											"    var arrString =\"\";\r",
											"    var words1 =[];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"    \r",
											"    words1 = newline[1].split('|');\r",
											"\r",
											"    if(pm.globals.get(\"mode\") == 1) console.log('2) AB 줄거리 데이터 제공 : '+ words1[5]);\r",
											"    pm.expect(words1[5]).to.not.null;\r",
											"})\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Host",
										"value": "vodlookup.fleta.com",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://{{imcs}}/servlets/CommSvl?CMD=getNXContSub&PARAM=SA_ID=M14090300006|STB_MAC=9893.cc25.bc23|ALBUM_ID=M0120CI239PPV00|TEST_ID=ABTEST002|VARIATION_ID=V002|",
									"protocol": "http",
									"host": [
										"{{imcs}}"
									],
									"path": [
										"servlets",
										"CommSvl"
									],
									"query": [
										{
											"key": "CMD",
											"value": "getNXContSub"
										},
										{
											"key": "PARAM",
											"value": "SA_ID=M14090300006|STB_MAC=9893.cc25.bc23|ALBUM_ID=M0120CI239PPV00|TEST_ID=ABTEST002|VARIATION_ID=V002|"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "getNXContSub_TC6_일반사용자_슈퍼앨범 있는 앨범ID_AB:메타(ALB)(데이터無) Copy 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"if(pm.globals.get(\"mode\") == 1) console.log('==================== [ getNXContSub TC  6 ] ====================');\r",
											"\r",
											"pm.test(\"(2) AB 줄거리 데이터 제공\", function () {\r",
											"    var arrString =\"\";\r",
											"    var words1 =[];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"    \r",
											"    words1 = newline[1].split('|');\r",
											"\r",
											"    if(pm.globals.get(\"mode\") == 1) console.log('2) AB 줄거리 데이터 제공 : '+ words1[5]);\r",
											"    pm.expect(words1[5]).to.not.null;\r",
											"})\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Host",
										"value": "vodlookup.fleta.com",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://{{imcs}}/servlets/CommSvl?CMD=getNXContSub&PARAM=SA_ID=M14090300006|STB_MAC=9893.cc25.bc23|ALBUM_ID=M0120C7301PPV00|TEST_ID=ABTEST002|VARIATION_ID=V002|",
									"protocol": "http",
									"host": [
										"{{imcs}}"
									],
									"path": [
										"servlets",
										"CommSvl"
									],
									"query": [
										{
											"key": "CMD",
											"value": "getNXContSub"
										},
										{
											"key": "PARAM",
											"value": "SA_ID=M14090300006|STB_MAC=9893.cc25.bc23|ALBUM_ID=M0120C7301PPV00|TEST_ID=ABTEST002|VARIATION_ID=V002|"
										},
										{
											"key": "",
											"value": "",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "getNXContSub_TC7_일반사용자_슈퍼앨범 없는 앨범ID : 자막일반_AB:null Copy 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"if(pm.globals.get(\"mode\") == 1) console.log('==================== [ getNXContSub TC  7 ] ====================');\r",
											"\r",
											"pm.test(\"(1) 슈퍼앨범이 없기 때문에 바디 10번째 자막 지원 여부 'Y', 바디 11번째 우리말 지원 여부 'N' or ''\", function () {\r",
											"    var arrString =\"\";\r",
											"    var words1 =[];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"    \r",
											"    words1 = newline[1].split('|');\r",
											"\r",
											"    if(pm.globals.get(\"mode\") == 1) console.log('1) 슈퍼앨범없음, 자막 지원 Y 우리말 지원 N', words1[9], words1[10]);\r",
											"    pm.expect(words1[9]).to.equal('Y');\r",
											"    pm.expect(words1[10]).to.be.oneOf(['','N']);\r",
											"})\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Host",
										"value": "vodlookup.fleta.com",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://{{imcs}}/servlets/CommSvl?CMD=getNXContSub&PARAM=SA_ID=M14090300006|STB_MAC=9893.cc25.bc23|ALBUM_ID=M0120C4334PPV00|TEST_ID=|VARIATION_ID=|",
									"protocol": "http",
									"host": [
										"{{imcs}}"
									],
									"path": [
										"servlets",
										"CommSvl"
									],
									"query": [
										{
											"key": "CMD",
											"value": "getNXContSub"
										},
										{
											"key": "PARAM",
											"value": "SA_ID=M14090300006|STB_MAC=9893.cc25.bc23|ALBUM_ID=M0120C4334PPV00|TEST_ID=|VARIATION_ID=|"
										},
										{
											"key": "",
											"value": "",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "getNXContSub_TC8_일반사용자_슈퍼앨범 있는 앨범ID : 자막일반_AB:null Copy 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"if(pm.globals.get(\"mode\") == 1) console.log('==================== [ getNXContSub TC  8 ] ====================');\r",
											"\r",
											"pm.test(\"(1) 슈퍼앨범이 없기 때문에 바디 10번째 자막 지원 여부 'Y', 바디 11번째 우리말 지원 여부 'Y'\", function () {\r",
											"    var arrString =\"\";\r",
											"    var words1 =[];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"    \r",
											"    words1 = newline[1].split('|');\r",
											"\r",
											"    if(pm.globals.get(\"mode\") == 1) console.log('1) 슈퍼앨범없음, 자막 지원 Y 우리말 지원 Y', words1[9], words1[10]);\r",
											"    pm.expect(words1[9]).to.equal('Y');\r",
											"    pm.expect(words1[10]).to.equal('Y');\r",
											"})\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Host",
										"value": "vodlookup.fleta.com",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://{{imcs}}/servlets/CommSvl?CMD=getNXContSub&PARAM=SA_ID=M14090300006|STB_MAC=9893.cc25.bc23|ALBUM_ID=M011535452PPV00|TEST_ID=|VARIATION_ID=|",
									"protocol": "http",
									"host": [
										"{{imcs}}"
									],
									"path": [
										"servlets",
										"CommSvl"
									],
									"query": [
										{
											"key": "CMD",
											"value": "getNXContSub"
										},
										{
											"key": "PARAM",
											"value": "SA_ID=M14090300006|STB_MAC=9893.cc25.bc23|ALBUM_ID=M011535452PPV00|TEST_ID=|VARIATION_ID=|"
										},
										{
											"key": "",
											"value": "",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "getNXContSub_TC9_검수사용자_슈퍼앨범 있는 앨범ID : 우리말검수_AB:null Copy 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"if(pm.globals.get(\"mode\") == 1) console.log('==================== [ getNXContSub TC  9 ] ====================');\r",
											"\r",
											"pm.test(\"(1) 검수 편성 기준 자막 정보 제공\", function () {\r",
											"    var arrString =\"\";\r",
											"    var words1 =[];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"    \r",
											"    words1 = newline[1].split('|');\r",
											"    \r",
											"    if(pm.globals.get(\"mode\") == 1) console.log('1) 검수 편성 기준 자막 정보 제공 : '+ words1[9]);\r",
											"    pm.expect(words1[9]).to.equal('Y');\r",
											"})\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Host",
										"value": "vodlookup.fleta.com",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://{{imcs}}/servlets/CommSvl?CMD=getNXContSub&PARAM=SA_ID=M14090300009|STB_MAC=9893.cc25.bc22|ALBUM_ID=M0119AV063PPV00|TEST_ID=|VARIATION_ID=|",
									"protocol": "http",
									"host": [
										"{{imcs}}"
									],
									"path": [
										"servlets",
										"CommSvl"
									],
									"query": [
										{
											"key": "CMD",
											"value": "getNXContSub"
										},
										{
											"key": "PARAM",
											"value": "SA_ID=M14090300009|STB_MAC=9893.cc25.bc22|ALBUM_ID=M0119AV063PPV00|TEST_ID=|VARIATION_ID=|"
										},
										{
											"key": "",
											"value": "",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "getNXContSub_TC10_일반사용자_슈퍼앨범 있는 앨범ID : 우리말검수_AB:null Copy 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"if(pm.globals.get(\"mode\") == 1) console.log('==================== [ getNXContSub TC 10 ] ====================');\r",
											"\r",
											"pm.test(\"(1) 검수 편성 기준 자막 정보 미제공\", function () {\r",
											"    var arrString =\"\";\r",
											"    var words1 =[];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"    \r",
											"    words1 = newline[1].split('|');\r",
											"\r",
											"    if(pm.globals.get(\"mode\") == 1) console.log('1) 검수 편성 기준 자막 정보 미제공 : '+ words1[9]);\r",
											"    pm.expect(words1[9]).to.be.oneOf(['','N']);\r",
											"})\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Host",
										"value": "vodlookup.fleta.com",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://{{imcs}}/servlets/CommSvl?CMD=getNXContSub&PARAM=SA_ID=M14090300006|STB_MAC=9893.cc25.bc23|ALBUM_ID=M0119AV063PPV00|TEST_ID=|VARIATION_ID=|",
									"protocol": "http",
									"host": [
										"{{imcs}}"
									],
									"path": [
										"servlets",
										"CommSvl"
									],
									"query": [
										{
											"key": "CMD",
											"value": "getNXContSub"
										},
										{
											"key": "PARAM",
											"value": "SA_ID=M14090300006|STB_MAC=9893.cc25.bc23|ALBUM_ID=M0119AV063PPV00|TEST_ID=|VARIATION_ID=|"
										},
										{
											"key": "",
											"value": "",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "getNXContSub_TC11_일반사용자_유효하지 않은 앨범 Copy 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"if(pm.globals.get(\"mode\") == 1) console.log('==================== [ getNXContSub TC 11 ] ====================');\r",
											"\r",
											"pm.test(\"(1) 오류 응답정보 제공 확인\", function () {\r",
											"    var arrString =\"\";\r",
											"    var words1 =[];\r",
											"    var words2 =[];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"    \r",
											"    words1 = newline[0].split('|');\r",
											"    \r",
											"    if(pm.globals.get(\"mode\") == 1) console.log('1) 오류 응답 정보 제공 : '+ words1[0]);\r",
											"    pm.expect(words1[0]).to.equal('1');\r",
											"})\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Host",
										"value": "vodlookup.fleta.com",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://{{imcs}}/servlets/CommSvl?CMD=getNXContSub&PARAM=SA_ID=M14090300006|STB_MAC=9893.cc25.bc23|ALBUM_ID=M0119AV063PPV01|TEST_ID=|VARIATION_ID=|",
									"protocol": "http",
									"host": [
										"{{imcs}}"
									],
									"path": [
										"servlets",
										"CommSvl"
									],
									"query": [
										{
											"key": "CMD",
											"value": "getNXContSub"
										},
										{
											"key": "PARAM",
											"value": "SA_ID=M14090300006|STB_MAC=9893.cc25.bc23|ALBUM_ID=M0119AV063PPV01|TEST_ID=|VARIATION_ID=|"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "getNXContSub_TC1_일반사용자_슈퍼앨범 없는 앨범ID_AB:null Copy 3",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"if(pm.globals.get(\"mode\") == 1) console.log('==================== [ getNXContSub TC  1 ] ====================');\r",
											"\r",
											"pm.test(\"(1) 정상 응답 여부 확인\", function () {\r",
											"    var arrString =\"\";\r",
											"    var words1 =[];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"    \r",
											"    words1 = newline[0].split('|');\r",
											"    \r",
											"    if(pm.globals.get(\"mode\") == 1) console.log('1) 정상 응답 여부 확인 : '+ words1[0]);\r",
											"    pm.expect(words1[0]).to.equal('0');\r",
											"})\r",
											"\r",
											"pm.test(\"(2) 이벤트 안내 문구 제공 확인\", function () {\r",
											"    var arrString =\"\";\r",
											"    var words1 =[];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"    \r",
											"    words1 = newline[1].split('|');\r",
											"\r",
											"    if(pm.globals.get(\"mode\") == 1) console.log('2) 이벤트 안내 문구 제공 확인 : '+ words1[2]);\r",
											"    pm.expect(words1[2]).to.not.equal('');\r",
											"})\r",
											"\r",
											"pm.test(\"(3) 줄거리 제공 확인\", function () {\r",
											"    var arrString =\"\";\r",
											"    var words1 =[];\r",
											"\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"    \r",
											"    words1 = newline[1].split('|');\r",
											"\r",
											"    if(pm.globals.get(\"mode\") == 1) console.log('3) 줄거리 제공 확인 : '+ words1[5]);\r",
											"    pm.expect(words1[5]).to.not.equal('');\r",
											"})\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Host",
										"value": "vodlookup.fleta.com",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://{{imcs}}/servlets/CommSvl?CMD=getNXContSub&PARAM=SA_ID=M14090300006|STB_MAC=9893.cc25.bc23|ALBUM_ID=M012193380PPV00|TEST_ID=|VARIATION_ID=|",
									"protocol": "http",
									"host": [
										"{{imcs}}"
									],
									"path": [
										"servlets",
										"CommSvl"
									],
									"query": [
										{
											"key": "CMD",
											"value": "getNXContSub"
										},
										{
											"key": "PARAM",
											"value": "SA_ID=M14090300006|STB_MAC=9893.cc25.bc23|ALBUM_ID=M012193380PPV00|TEST_ID=|VARIATION_ID=|"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "getNXContSub_TC2_일반사용자_슈퍼앨범 있는 앨범ID_AB:null Copy 3",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"if(pm.globals.get(\"mode\") == 1) console.log('==================== [ getNXContSub TC  2 ] ====================');\r",
											"\r",
											"pm.test(\"(2) 정상 응답 여부 확인\", function () {\r",
											"    var arrString =\"\";\r",
											"    var words1 =[];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"    \r",
											"    words1 = newline[0].split('|');\r",
											"    \r",
											"    if(pm.globals.get(\"mode\") == 1) console.log('2) 정상 응답 여부 확인 : '+ words1[0]);\r",
											"    pm.expect(words1[0]).to.equal('0');\r",
											"})\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Host",
										"value": "vodlookup.fleta.com",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://{{imcs}}/servlets/CommSvl?CMD=getNXContSub&PARAM=SA_ID=M14090300006|STB_MAC=9893.cc25.bc23|ALBUM_ID=M0118BR299PPV00|TEST_ID=|VARIATION_ID=|",
									"protocol": "http",
									"host": [
										"{{imcs}}"
									],
									"path": [
										"servlets",
										"CommSvl"
									],
									"query": [
										{
											"key": "CMD",
											"value": "getNXContSub"
										},
										{
											"key": "PARAM",
											"value": "SA_ID=M14090300006|STB_MAC=9893.cc25.bc23|ALBUM_ID=M0118BR299PPV00|TEST_ID=|VARIATION_ID=|"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "getNXContSub_TC3_일반사용자_슈퍼앨범 있는 앨범ID_AB:유효하지않음 Copy 3",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"if(pm.globals.get(\"mode\") == 1) console.log('==================== [ getNXContSub TC  3 ] ====================');\r",
											"\r",
											"pm.test(\"(2) 정상 응답 여부 확인\", function () {\r",
											"    var arrString =\"\";\r",
											"    var words1 =[];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"    \r",
											"    words1 = newline[0].split('|');\r",
											"    \r",
											"    if(pm.globals.get(\"mode\") == 1) console.log('2) 정상 응답 여부 확인 : '+ words1[0]);\r",
											"    pm.expect(words1[0]).to.equal('0');\r",
											"})\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Host",
										"value": "vodlookup.fleta.com",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://{{imcs}}/servlets/CommSvl?CMD=getNXContSub&PARAM=SA_ID=M14090300006|STB_MAC=9893.cc25.bc23|ALBUM_ID=M01162H190PPV00|TEST_ID=XXXXX|VARIATION_ID=XXXXX|",
									"protocol": "http",
									"host": [
										"{{imcs}}"
									],
									"path": [
										"servlets",
										"CommSvl"
									],
									"query": [
										{
											"key": "CMD",
											"value": "getNXContSub"
										},
										{
											"key": "PARAM",
											"value": "SA_ID=M14090300006|STB_MAC=9893.cc25.bc23|ALBUM_ID=M01162H190PPV00|TEST_ID=XXXXX|VARIATION_ID=XXXXX|"
										},
										{
											"key": "",
											"value": "",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "getNXContSub_TC4_일반사용자_슈퍼앨범 있는 앨범ID_AB:편성(CAT) Copy 3",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"if(pm.globals.get(\"mode\") == 1) console.log('==================== [ getNXContSub TC  4 ] ====================');\r",
											"\r",
											"pm.test(\"(2) 정상 응답 여부 확인\", function () {\r",
											"    var arrString =\"\";\r",
											"    var words1 =[];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"    \r",
											"    words1 = newline[0].split('|');\r",
											"    \r",
											"    if(pm.globals.get(\"mode\") == 1) console.log('2) 정상 응답 여부 확인 : '+ words1[0]);\r",
											"    pm.expect(words1[0]).to.equal('0');\r",
											"})\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Host",
										"value": "vodlookup.fleta.com",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://{{imcs}}/servlets/CommSvl?CMD=getNXContSub&PARAM=SA_ID=M14090300006|STB_MAC=9893.cc25.bc23|ALBUM_ID=M0119CQ121PPV00|TEST_ID=ABTEST001|VARIATION_ID=V001|",
									"protocol": "http",
									"host": [
										"{{imcs}}"
									],
									"path": [
										"servlets",
										"CommSvl"
									],
									"query": [
										{
											"key": "CMD",
											"value": "getNXContSub"
										},
										{
											"key": "PARAM",
											"value": "SA_ID=M14090300006|STB_MAC=9893.cc25.bc23|ALBUM_ID=M0119CQ121PPV00|TEST_ID=ABTEST001|VARIATION_ID=V001|"
										},
										{
											"key": "",
											"value": "",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "getNXContSub_TC5_일반사용자_슈퍼앨범 없는 앨범ID_AB:메타(ALB)(데이터有) Copy 3",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"if(pm.globals.get(\"mode\") == 1) console.log('==================== [ getNXContSub TC  5 ] ====================');\r",
											"\r",
											"pm.test(\"(2) AB 줄거리 데이터 제공\", function () {\r",
											"    var arrString =\"\";\r",
											"    var words1 =[];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"    \r",
											"    words1 = newline[1].split('|');\r",
											"\r",
											"    if(pm.globals.get(\"mode\") == 1) console.log('2) AB 줄거리 데이터 제공 : '+ words1[5]);\r",
											"    pm.expect(words1[5]).to.not.null;\r",
											"})\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Host",
										"value": "vodlookup.fleta.com",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://{{imcs}}/servlets/CommSvl?CMD=getNXContSub&PARAM=SA_ID=M14090300006|STB_MAC=9893.cc25.bc23|ALBUM_ID=M0120CI239PPV00|TEST_ID=ABTEST002|VARIATION_ID=V002|",
									"protocol": "http",
									"host": [
										"{{imcs}}"
									],
									"path": [
										"servlets",
										"CommSvl"
									],
									"query": [
										{
											"key": "CMD",
											"value": "getNXContSub"
										},
										{
											"key": "PARAM",
											"value": "SA_ID=M14090300006|STB_MAC=9893.cc25.bc23|ALBUM_ID=M0120CI239PPV00|TEST_ID=ABTEST002|VARIATION_ID=V002|"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "getNXContSub_TC6_일반사용자_슈퍼앨범 있는 앨범ID_AB:메타(ALB)(데이터無) Copy 3",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"if(pm.globals.get(\"mode\") == 1) console.log('==================== [ getNXContSub TC  6 ] ====================');\r",
											"\r",
											"pm.test(\"(2) AB 줄거리 데이터 제공\", function () {\r",
											"    var arrString =\"\";\r",
											"    var words1 =[];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"    \r",
											"    words1 = newline[1].split('|');\r",
											"\r",
											"    if(pm.globals.get(\"mode\") == 1) console.log('2) AB 줄거리 데이터 제공 : '+ words1[5]);\r",
											"    pm.expect(words1[5]).to.not.null;\r",
											"})\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Host",
										"value": "vodlookup.fleta.com",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://{{imcs}}/servlets/CommSvl?CMD=getNXContSub&PARAM=SA_ID=M14090300006|STB_MAC=9893.cc25.bc23|ALBUM_ID=M0120C7301PPV00|TEST_ID=ABTEST002|VARIATION_ID=V002|",
									"protocol": "http",
									"host": [
										"{{imcs}}"
									],
									"path": [
										"servlets",
										"CommSvl"
									],
									"query": [
										{
											"key": "CMD",
											"value": "getNXContSub"
										},
										{
											"key": "PARAM",
											"value": "SA_ID=M14090300006|STB_MAC=9893.cc25.bc23|ALBUM_ID=M0120C7301PPV00|TEST_ID=ABTEST002|VARIATION_ID=V002|"
										},
										{
											"key": "",
											"value": "",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "getNXContSub_TC7_일반사용자_슈퍼앨범 없는 앨범ID : 자막일반_AB:null Copy 3",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"if(pm.globals.get(\"mode\") == 1) console.log('==================== [ getNXContSub TC  7 ] ====================');\r",
											"\r",
											"pm.test(\"(1) 슈퍼앨범이 없기 때문에 바디 10번째 자막 지원 여부 'Y', 바디 11번째 우리말 지원 여부 'N' or ''\", function () {\r",
											"    var arrString =\"\";\r",
											"    var words1 =[];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"    \r",
											"    words1 = newline[1].split('|');\r",
											"\r",
											"    if(pm.globals.get(\"mode\") == 1) console.log('1) 슈퍼앨범없음, 자막 지원 Y 우리말 지원 N', words1[9], words1[10]);\r",
											"    pm.expect(words1[9]).to.equal('Y');\r",
											"    pm.expect(words1[10]).to.be.oneOf(['','N']);\r",
											"})\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Host",
										"value": "vodlookup.fleta.com",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://{{imcs}}/servlets/CommSvl?CMD=getNXContSub&PARAM=SA_ID=M14090300006|STB_MAC=9893.cc25.bc23|ALBUM_ID=M0120C4334PPV00|TEST_ID=|VARIATION_ID=|",
									"protocol": "http",
									"host": [
										"{{imcs}}"
									],
									"path": [
										"servlets",
										"CommSvl"
									],
									"query": [
										{
											"key": "CMD",
											"value": "getNXContSub"
										},
										{
											"key": "PARAM",
											"value": "SA_ID=M14090300006|STB_MAC=9893.cc25.bc23|ALBUM_ID=M0120C4334PPV00|TEST_ID=|VARIATION_ID=|"
										},
										{
											"key": "",
											"value": "",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "getNXContSub_TC8_일반사용자_슈퍼앨범 있는 앨범ID : 자막일반_AB:null Copy 3",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"if(pm.globals.get(\"mode\") == 1) console.log('==================== [ getNXContSub TC  8 ] ====================');\r",
											"\r",
											"pm.test(\"(1) 슈퍼앨범이 없기 때문에 바디 10번째 자막 지원 여부 'Y', 바디 11번째 우리말 지원 여부 'Y'\", function () {\r",
											"    var arrString =\"\";\r",
											"    var words1 =[];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"    \r",
											"    words1 = newline[1].split('|');\r",
											"\r",
											"    if(pm.globals.get(\"mode\") == 1) console.log('1) 슈퍼앨범없음, 자막 지원 Y 우리말 지원 Y', words1[9], words1[10]);\r",
											"    pm.expect(words1[9]).to.equal('Y');\r",
											"    pm.expect(words1[10]).to.equal('Y');\r",
											"})\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Host",
										"value": "vodlookup.fleta.com",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://{{imcs}}/servlets/CommSvl?CMD=getNXContSub&PARAM=SA_ID=M14090300006|STB_MAC=9893.cc25.bc23|ALBUM_ID=M011535452PPV00|TEST_ID=|VARIATION_ID=|",
									"protocol": "http",
									"host": [
										"{{imcs}}"
									],
									"path": [
										"servlets",
										"CommSvl"
									],
									"query": [
										{
											"key": "CMD",
											"value": "getNXContSub"
										},
										{
											"key": "PARAM",
											"value": "SA_ID=M14090300006|STB_MAC=9893.cc25.bc23|ALBUM_ID=M011535452PPV00|TEST_ID=|VARIATION_ID=|"
										},
										{
											"key": "",
											"value": "",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "getNXContSub_TC9_검수사용자_슈퍼앨범 있는 앨범ID : 우리말검수_AB:null Copy 3",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"if(pm.globals.get(\"mode\") == 1) console.log('==================== [ getNXContSub TC  9 ] ====================');\r",
											"\r",
											"pm.test(\"(1) 검수 편성 기준 자막 정보 제공\", function () {\r",
											"    var arrString =\"\";\r",
											"    var words1 =[];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"    \r",
											"    words1 = newline[1].split('|');\r",
											"    \r",
											"    if(pm.globals.get(\"mode\") == 1) console.log('1) 검수 편성 기준 자막 정보 제공 : '+ words1[9]);\r",
											"    pm.expect(words1[9]).to.equal('Y');\r",
											"})\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Host",
										"value": "vodlookup.fleta.com",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://{{imcs}}/servlets/CommSvl?CMD=getNXContSub&PARAM=SA_ID=M14090300009|STB_MAC=9893.cc25.bc22|ALBUM_ID=M0119AV063PPV00|TEST_ID=|VARIATION_ID=|",
									"protocol": "http",
									"host": [
										"{{imcs}}"
									],
									"path": [
										"servlets",
										"CommSvl"
									],
									"query": [
										{
											"key": "CMD",
											"value": "getNXContSub"
										},
										{
											"key": "PARAM",
											"value": "SA_ID=M14090300009|STB_MAC=9893.cc25.bc22|ALBUM_ID=M0119AV063PPV00|TEST_ID=|VARIATION_ID=|"
										},
										{
											"key": "",
											"value": "",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "getNXContSub_TC10_일반사용자_슈퍼앨범 있는 앨범ID : 우리말검수_AB:null Copy 3",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"if(pm.globals.get(\"mode\") == 1) console.log('==================== [ getNXContSub TC 10 ] ====================');\r",
											"\r",
											"pm.test(\"(1) 검수 편성 기준 자막 정보 미제공\", function () {\r",
											"    var arrString =\"\";\r",
											"    var words1 =[];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"    \r",
											"    words1 = newline[1].split('|');\r",
											"\r",
											"    if(pm.globals.get(\"mode\") == 1) console.log('1) 검수 편성 기준 자막 정보 미제공 : '+ words1[9]);\r",
											"    pm.expect(words1[9]).to.be.oneOf(['','N']);\r",
											"})\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Host",
										"value": "vodlookup.fleta.com",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://{{imcs}}/servlets/CommSvl?CMD=getNXContSub&PARAM=SA_ID=M14090300006|STB_MAC=9893.cc25.bc23|ALBUM_ID=M0119AV063PPV00|TEST_ID=|VARIATION_ID=|",
									"protocol": "http",
									"host": [
										"{{imcs}}"
									],
									"path": [
										"servlets",
										"CommSvl"
									],
									"query": [
										{
											"key": "CMD",
											"value": "getNXContSub"
										},
										{
											"key": "PARAM",
											"value": "SA_ID=M14090300006|STB_MAC=9893.cc25.bc23|ALBUM_ID=M0119AV063PPV00|TEST_ID=|VARIATION_ID=|"
										},
										{
											"key": "",
											"value": "",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "getNXContSub_TC11_일반사용자_유효하지 않은 앨범 Copy 3",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"if(pm.globals.get(\"mode\") == 1) console.log('==================== [ getNXContSub TC 11 ] ====================');\r",
											"\r",
											"pm.test(\"(1) 오류 응답정보 제공 확인\", function () {\r",
											"    var arrString =\"\";\r",
											"    var words1 =[];\r",
											"    var words2 =[];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"    \r",
											"    words1 = newline[0].split('|');\r",
											"    \r",
											"    if(pm.globals.get(\"mode\") == 1) console.log('1) 오류 응답 정보 제공 : '+ words1[0]);\r",
											"    pm.expect(words1[0]).to.equal('1');\r",
											"})\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Host",
										"value": "vodlookup.fleta.com",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://{{imcs}}/servlets/CommSvl?CMD=getNXContSub&PARAM=SA_ID=M14090300006|STB_MAC=9893.cc25.bc23|ALBUM_ID=M0119AV063PPV01|TEST_ID=|VARIATION_ID=|",
									"protocol": "http",
									"host": [
										"{{imcs}}"
									],
									"path": [
										"servlets",
										"CommSvl"
									],
									"query": [
										{
											"key": "CMD",
											"value": "getNXContSub"
										},
										{
											"key": "PARAM",
											"value": "SA_ID=M14090300006|STB_MAC=9893.cc25.bc23|ALBUM_ID=M0119AV063PPV01|TEST_ID=|VARIATION_ID=|"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "getNXContSub_TC1_일반사용자_슈퍼앨범 없는 앨범ID_AB:null Copy 4",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"if(pm.globals.get(\"mode\") == 1) console.log('==================== [ getNXContSub TC  1 ] ====================');\r",
											"\r",
											"pm.test(\"(1) 정상 응답 여부 확인\", function () {\r",
											"    var arrString =\"\";\r",
											"    var words1 =[];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"    \r",
											"    words1 = newline[0].split('|');\r",
											"    \r",
											"    if(pm.globals.get(\"mode\") == 1) console.log('1) 정상 응답 여부 확인 : '+ words1[0]);\r",
											"    pm.expect(words1[0]).to.equal('0');\r",
											"})\r",
											"\r",
											"pm.test(\"(2) 이벤트 안내 문구 제공 확인\", function () {\r",
											"    var arrString =\"\";\r",
											"    var words1 =[];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"    \r",
											"    words1 = newline[1].split('|');\r",
											"\r",
											"    if(pm.globals.get(\"mode\") == 1) console.log('2) 이벤트 안내 문구 제공 확인 : '+ words1[2]);\r",
											"    pm.expect(words1[2]).to.not.equal('');\r",
											"})\r",
											"\r",
											"pm.test(\"(3) 줄거리 제공 확인\", function () {\r",
											"    var arrString =\"\";\r",
											"    var words1 =[];\r",
											"\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"    \r",
											"    words1 = newline[1].split('|');\r",
											"\r",
											"    if(pm.globals.get(\"mode\") == 1) console.log('3) 줄거리 제공 확인 : '+ words1[5]);\r",
											"    pm.expect(words1[5]).to.not.equal('');\r",
											"})\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Host",
										"value": "vodlookup.fleta.com",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://{{imcs}}/servlets/CommSvl?CMD=getNXContSub&PARAM=SA_ID=M14090300006|STB_MAC=9893.cc25.bc23|ALBUM_ID=M012193380PPV00|TEST_ID=|VARIATION_ID=|",
									"protocol": "http",
									"host": [
										"{{imcs}}"
									],
									"path": [
										"servlets",
										"CommSvl"
									],
									"query": [
										{
											"key": "CMD",
											"value": "getNXContSub"
										},
										{
											"key": "PARAM",
											"value": "SA_ID=M14090300006|STB_MAC=9893.cc25.bc23|ALBUM_ID=M012193380PPV00|TEST_ID=|VARIATION_ID=|"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "getNXContSub_TC2_일반사용자_슈퍼앨범 있는 앨범ID_AB:null Copy 4",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"if(pm.globals.get(\"mode\") == 1) console.log('==================== [ getNXContSub TC  2 ] ====================');\r",
											"\r",
											"pm.test(\"(2) 정상 응답 여부 확인\", function () {\r",
											"    var arrString =\"\";\r",
											"    var words1 =[];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"    \r",
											"    words1 = newline[0].split('|');\r",
											"    \r",
											"    if(pm.globals.get(\"mode\") == 1) console.log('2) 정상 응답 여부 확인 : '+ words1[0]);\r",
											"    pm.expect(words1[0]).to.equal('0');\r",
											"})\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Host",
										"value": "vodlookup.fleta.com",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://{{imcs}}/servlets/CommSvl?CMD=getNXContSub&PARAM=SA_ID=M14090300006|STB_MAC=9893.cc25.bc23|ALBUM_ID=M0118BR299PPV00|TEST_ID=|VARIATION_ID=|",
									"protocol": "http",
									"host": [
										"{{imcs}}"
									],
									"path": [
										"servlets",
										"CommSvl"
									],
									"query": [
										{
											"key": "CMD",
											"value": "getNXContSub"
										},
										{
											"key": "PARAM",
											"value": "SA_ID=M14090300006|STB_MAC=9893.cc25.bc23|ALBUM_ID=M0118BR299PPV00|TEST_ID=|VARIATION_ID=|"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "getNXContSub_TC3_일반사용자_슈퍼앨범 있는 앨범ID_AB:유효하지않음 Copy 4",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"if(pm.globals.get(\"mode\") == 1) console.log('==================== [ getNXContSub TC  3 ] ====================');\r",
											"\r",
											"pm.test(\"(2) 정상 응답 여부 확인\", function () {\r",
											"    var arrString =\"\";\r",
											"    var words1 =[];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"    \r",
											"    words1 = newline[0].split('|');\r",
											"    \r",
											"    if(pm.globals.get(\"mode\") == 1) console.log('2) 정상 응답 여부 확인 : '+ words1[0]);\r",
											"    pm.expect(words1[0]).to.equal('0');\r",
											"})\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Host",
										"value": "vodlookup.fleta.com",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://{{imcs}}/servlets/CommSvl?CMD=getNXContSub&PARAM=SA_ID=M14090300006|STB_MAC=9893.cc25.bc23|ALBUM_ID=M01162H190PPV00|TEST_ID=XXXXX|VARIATION_ID=XXXXX|",
									"protocol": "http",
									"host": [
										"{{imcs}}"
									],
									"path": [
										"servlets",
										"CommSvl"
									],
									"query": [
										{
											"key": "CMD",
											"value": "getNXContSub"
										},
										{
											"key": "PARAM",
											"value": "SA_ID=M14090300006|STB_MAC=9893.cc25.bc23|ALBUM_ID=M01162H190PPV00|TEST_ID=XXXXX|VARIATION_ID=XXXXX|"
										},
										{
											"key": "",
											"value": "",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "getNXContSub_TC4_일반사용자_슈퍼앨범 있는 앨범ID_AB:편성(CAT) Copy 4",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"if(pm.globals.get(\"mode\") == 1) console.log('==================== [ getNXContSub TC  4 ] ====================');\r",
											"\r",
											"pm.test(\"(2) 정상 응답 여부 확인\", function () {\r",
											"    var arrString =\"\";\r",
											"    var words1 =[];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"    \r",
											"    words1 = newline[0].split('|');\r",
											"    \r",
											"    if(pm.globals.get(\"mode\") == 1) console.log('2) 정상 응답 여부 확인 : '+ words1[0]);\r",
											"    pm.expect(words1[0]).to.equal('0');\r",
											"})\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Host",
										"value": "vodlookup.fleta.com",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://{{imcs}}/servlets/CommSvl?CMD=getNXContSub&PARAM=SA_ID=M14090300006|STB_MAC=9893.cc25.bc23|ALBUM_ID=M0119CQ121PPV00|TEST_ID=ABTEST001|VARIATION_ID=V001|",
									"protocol": "http",
									"host": [
										"{{imcs}}"
									],
									"path": [
										"servlets",
										"CommSvl"
									],
									"query": [
										{
											"key": "CMD",
											"value": "getNXContSub"
										},
										{
											"key": "PARAM",
											"value": "SA_ID=M14090300006|STB_MAC=9893.cc25.bc23|ALBUM_ID=M0119CQ121PPV00|TEST_ID=ABTEST001|VARIATION_ID=V001|"
										},
										{
											"key": "",
											"value": "",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "getNXContSub_TC5_일반사용자_슈퍼앨범 없는 앨범ID_AB:메타(ALB)(데이터有) Copy 4",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"if(pm.globals.get(\"mode\") == 1) console.log('==================== [ getNXContSub TC  5 ] ====================');\r",
											"\r",
											"pm.test(\"(2) AB 줄거리 데이터 제공\", function () {\r",
											"    var arrString =\"\";\r",
											"    var words1 =[];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"    \r",
											"    words1 = newline[1].split('|');\r",
											"\r",
											"    if(pm.globals.get(\"mode\") == 1) console.log('2) AB 줄거리 데이터 제공 : '+ words1[5]);\r",
											"    pm.expect(words1[5]).to.not.null;\r",
											"})\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Host",
										"value": "vodlookup.fleta.com",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://{{imcs}}/servlets/CommSvl?CMD=getNXContSub&PARAM=SA_ID=M14090300006|STB_MAC=9893.cc25.bc23|ALBUM_ID=M0120CI239PPV00|TEST_ID=ABTEST002|VARIATION_ID=V002|",
									"protocol": "http",
									"host": [
										"{{imcs}}"
									],
									"path": [
										"servlets",
										"CommSvl"
									],
									"query": [
										{
											"key": "CMD",
											"value": "getNXContSub"
										},
										{
											"key": "PARAM",
											"value": "SA_ID=M14090300006|STB_MAC=9893.cc25.bc23|ALBUM_ID=M0120CI239PPV00|TEST_ID=ABTEST002|VARIATION_ID=V002|"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "getNXContSub_TC6_일반사용자_슈퍼앨범 있는 앨범ID_AB:메타(ALB)(데이터無) Copy 4",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"if(pm.globals.get(\"mode\") == 1) console.log('==================== [ getNXContSub TC  6 ] ====================');\r",
											"\r",
											"pm.test(\"(2) AB 줄거리 데이터 제공\", function () {\r",
											"    var arrString =\"\";\r",
											"    var words1 =[];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"    \r",
											"    words1 = newline[1].split('|');\r",
											"\r",
											"    if(pm.globals.get(\"mode\") == 1) console.log('2) AB 줄거리 데이터 제공 : '+ words1[5]);\r",
											"    pm.expect(words1[5]).to.not.null;\r",
											"})\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Host",
										"value": "vodlookup.fleta.com",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://{{imcs}}/servlets/CommSvl?CMD=getNXContSub&PARAM=SA_ID=M14090300006|STB_MAC=9893.cc25.bc23|ALBUM_ID=M0120C7301PPV00|TEST_ID=ABTEST002|VARIATION_ID=V002|",
									"protocol": "http",
									"host": [
										"{{imcs}}"
									],
									"path": [
										"servlets",
										"CommSvl"
									],
									"query": [
										{
											"key": "CMD",
											"value": "getNXContSub"
										},
										{
											"key": "PARAM",
											"value": "SA_ID=M14090300006|STB_MAC=9893.cc25.bc23|ALBUM_ID=M0120C7301PPV00|TEST_ID=ABTEST002|VARIATION_ID=V002|"
										},
										{
											"key": "",
											"value": "",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "getNXContSub_TC7_일반사용자_슈퍼앨범 없는 앨범ID : 자막일반_AB:null Copy 4",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"if(pm.globals.get(\"mode\") == 1) console.log('==================== [ getNXContSub TC  7 ] ====================');\r",
											"\r",
											"pm.test(\"(1) 슈퍼앨범이 없기 때문에 바디 10번째 자막 지원 여부 'Y', 바디 11번째 우리말 지원 여부 'N' or ''\", function () {\r",
											"    var arrString =\"\";\r",
											"    var words1 =[];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"    \r",
											"    words1 = newline[1].split('|');\r",
											"\r",
											"    if(pm.globals.get(\"mode\") == 1) console.log('1) 슈퍼앨범없음, 자막 지원 Y 우리말 지원 N', words1[9], words1[10]);\r",
											"    pm.expect(words1[9]).to.equal('Y');\r",
											"    pm.expect(words1[10]).to.be.oneOf(['','N']);\r",
											"})\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Host",
										"value": "vodlookup.fleta.com",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://{{imcs}}/servlets/CommSvl?CMD=getNXContSub&PARAM=SA_ID=M14090300006|STB_MAC=9893.cc25.bc23|ALBUM_ID=M0120C4334PPV00|TEST_ID=|VARIATION_ID=|",
									"protocol": "http",
									"host": [
										"{{imcs}}"
									],
									"path": [
										"servlets",
										"CommSvl"
									],
									"query": [
										{
											"key": "CMD",
											"value": "getNXContSub"
										},
										{
											"key": "PARAM",
											"value": "SA_ID=M14090300006|STB_MAC=9893.cc25.bc23|ALBUM_ID=M0120C4334PPV00|TEST_ID=|VARIATION_ID=|"
										},
										{
											"key": "",
											"value": "",
											"disabled": true
										}
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"// 공통",
									"",
									"// WAS 정상응답 체크 (200여부)",
									"pm.test(\"[공통]WAS 정상응답 체크 (200여부)\", function () {",
									"    pm.response.to.have.status(200);   ",
									"});",
									"",
									"// 응답속도 체크(0.5초미만) 여부",
									"pm.test(\"[공통]응답속도 체크(0.5초미만)\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(500);",
									"});"
								]
							}
						}
					]
				},
				{
					"name": "getNXSeriesList",
					"item": [
						{
							"name": "getNXSeriesList_TC1_일반 시리즈 카테고리 ID (해외드라마)_최초진입 : 시청정보無_종영_일반STB_AB=NULL_시즌있음_일반사용자_일반편성_기본 Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"if(pm.globals.get(\"mode\") == 1) console.log('==================== [ getNXSeriesList TC  1 ] ====================');\r",
											"\r",
											"var comp_line = 0;\r",
											"var next_flag = 0;\r",
											"\r",
											"pm.test(\"(1) 정상 응답 여부 확인\", function () {\r",
											"    var arrString =\"\";\r",
											"    var words1 =[];\r",
											"    var words2 =[];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"    \r",
											"    words1 = newline[0].split('|');\r",
											"    \r",
											"    if(pm.globals.get(\"mode\") == 1) console.log('1) 정상 응답 여부 확인 : '+ words1[0]);\r",
											"    pm.expect(words1[0]).to.equal('0');\r",
											"})\r",
											"    \r",
											"pm.test(\"(2) 전체 건수 확인\", function () {\r",
											"    var arrString =\"\";\r",
											"    var words1 =[];\r",
											"    var words2 =[];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    var loop_cnt = 0;\r",
											"    var lineCnt = 0;\r",
											"    var comp_line = 0;\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"    lineCnt = newline.length;\r",
											"    \r",
											"    words1 = newline[0].split('|');\r",
											"\r",
											"    for(loop_cnt = 0; loop_cnt < lineCnt; loop_cnt++) {\r",
											"        comp_line = loop_cnt + 1;\r",
											"        words2 = newline[comp_line].split('|');\r",
											"\r",
											"        if(words2[0] == 'M'){\r",
											"            continue;\r",
											"        }\r",
											"        else{\r",
											"            break;\r",
											"        }\r",
											"    }\r",
											"\r",
											"    if(words1[2] == loop_cnt){\r",
											"        if(pm.globals.get(\"mode\") == 1) console.log('2) 전체 건수 확인 : '+ words1[2], loop_cnt);\r",
											"        pm.expect(words1[2]).to.equal(loop_cnt.toString());\r",
											"    }\r",
											"})\r",
											"\r",
											"pm.test(\"(3) 시리즈 줄거리 확인\", function () {\r",
											"    var arrString =\"\";\r",
											"    var words1 =[];\r",
											"    var words2 =[];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"    \r",
											"    words1 = newline[0].split('|');\r",
											"    \r",
											"    if(pm.globals.get(\"mode\") == 1) console.log('3) 시리즈 줄거리 확인 : '+ words1[5]);\r",
											"    pm.expect(words1[5]).to.not.equal('');\r",
											"})\r",
											"\r",
											"pm.test(\"(4) 회차 표시 여부 확인\", function () {\r",
											"    var arrString =\"\";\r",
											"    var words1 =[];\r",
											"    var words2 =[];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"    \r",
											"    words1 = newline[0].split('|');\r",
											"    \r",
											"    if(pm.globals.get(\"mode\") == 1) console.log('4) 회차 표시 여부 확인 : '+ words1[8]);\r",
											"    pm.expect(words1[8]).to.equal('Y');\r",
											"})\r",
											"\r",
											"pm.test(\"(5) 현재 페이지 확인\", function () {\r",
											"    var arrString =\"\";\r",
											"    var words1 =[];\r",
											"    var words2 =[];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"    \r",
											"    words1 = newline[0].split('|');\r",
											"    \r",
											"    if(pm.globals.get(\"mode\") == 1) console.log('5) 현재 페이지 확인 : '+ words1[13]);\r",
											"    pm.expect(words1[13]).to.equal('1');\r",
											"})\r",
											"\r",
											"pm.test(\"(6) 이미지 URL 확인\", function () {\r",
											"    var arrString =\"\";\r",
											"    var words1 =[];\r",
											"    var words2 =[];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"    \r",
											"    words1 = newline[0].split('|');\r",
											"\r",
											"    if(pm.globals.get(\"mode\") == 1) console.log('6) 이미지 URL 확인 : ', words1[14], words1[15], words1[16], words1[17]);\r",
											"    pm.expect(words1[14]).to.not.null;\r",
											"    pm.expect(words1[15]).to.not.null;\r",
											"    pm.expect(words1[16]).to.not.null;\r",
											"    pm.expect(words1[17]).to.not.null;\r",
											"})\r",
											"\r",
											"pm.test(\"(7) 예고편 확인\", function () {\r",
											"    var arrString =\"\";\r",
											"    var words1 =[];\r",
											"    var words2 =[];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    var loop_cnt = 0;\r",
											"    var lineCnt = 0;\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"    lineCnt = newline.length;\r",
											"\r",
											"    words1 = newline[1].split('|');\r",
											"    \r",
											"    for(loop_cnt = 0; loop_cnt < lineCnt; loop_cnt++) {\r",
											"        comp_line = loop_cnt + 1;\r",
											"        words2 = newline[comp_line].split('|');\r",
											"\r",
											"        if(words2[0] == 'P'){\r",
											"            next_flag = 1;\r",
											"            break;\r",
											"        }\r",
											"    }\r",
											"    if(pm.globals.get(\"mode\") == 1) console.log('7) 예고편 확인 : ',words1[1], words2[1]);\r",
											"    pm.expect(words1[1]).to.equal(words2[1]);\r",
											"})\r",
											"\r",
											"pm.test(\"(8) 예고편 URL 확인\", function () {\r",
											"    var arrString =\"\";\r",
											"    var words1 =[];\r",
											"    var words2 =[];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"    \r",
											"    words1 = newline[0].split('|');\r",
											"    words2 = newline[comp_line].split('|');\r",
											"    \r",
											"    if(next_flag){\r",
											"        if(pm.globals.get(\"mode\") == 1) console.log('8) 예고편 URL 존재 : ', words1[18], words1[19], words1[20], words1[21], words1[22], words1[23]);\r",
											"        pm.expect(words1[18]).to.not.equal('');\r",
											"        pm.expect(words1[19]).to.not.equal('');\r",
											"        pm.expect(words1[20]).to.not.equal('');\r",
											"        pm.expect(words1[21]).to.not.equal('');\r",
											"        pm.expect(words1[22]).to.not.equal('');\r",
											"        pm.expect(words1[23]).to.not.equal('');\r",
											"    }\r",
											"    else{\r",
											"        if(pm.globals.get(\"mode\") == 1) console.log('8) 예고편 URL 존재하지 않음 : ', words1[18], words1[19], words1[20], words1[21], words1[22], words1[23]);\r",
											"        pm.expect(words1[18]).to.equal('');\r",
											"        pm.expect(words1[19]).to.equal('');\r",
											"        pm.expect(words1[20]).to.equal('');\r",
											"        pm.expect(words1[21]).to.equal('');\r",
											"        pm.expect(words1[22]).to.equal('');\r",
											"        pm.expect(words1[23]).to.equal('');\r",
											"    }\r",
											"    next_flag = 0;\r",
											"})\r",
											"\r",
											"pm.test(\"(9) 바디 첫번째 항목 확인\", function () {\r",
											"    var arrString =\"\";\r",
											"    var words1 =[];\r",
											"    var words2 =[];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"    \r",
											"    words1 = newline[1].split('|');\r",
											"    \r",
											"    if(pm.globals.get(\"mode\") == 1) console.log('9) 바디 첫번째 항목 확인 : '+ words1[0]);\r",
											"    pm.expect(words1[0]).to.equal('M');\r",
											"})\r",
											"\r",
											"pm.test(\"(10) 앨범ID 확인\", function () {\r",
											"    var arrString =\"\";\r",
											"    var words1 =[];\r",
											"    var words2 =[];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"    \r",
											"    words1 = newline[1].split('|');\r",
											"    \r",
											"    if(pm.globals.get(\"mode\") == 1) console.log('10) 앨범ID 확인 : '+ words1[1]);\r",
											"    pm.expect(words1[1]).to.not.equal('');\r",
											"})\r",
											"\r",
											"pm.test(\"(11) 시리즈 번호 확인\", function () {\r",
											"    var arrString =\"\";\r",
											"    var words1 =[];\r",
											"    var words2 =[];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"    \r",
											"    words1 = newline[1].split('|');\r",
											"    \r",
											"    if(pm.globals.get(\"mode\") == 1) console.log('11) 시리즈 번호 확인 : '+ words1[3]);\r",
											"    pm.expect(words1[3]).to.not.equal('');\r",
											"})\r",
											"\r",
											"pm.test(\"(12) 줄거리 확인\", function () {\r",
											"    var arrString =\"\";\r",
											"    var words1 =[];\r",
											"    var words2 =[];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"    \r",
											"    words1 = newline[1].split('|');\r",
											"    \r",
											"    if(pm.globals.get(\"mode\") == 1) console.log('12) 줄거리 확인 : '+ words1[27]);\r",
											"    pm.expect(words1[27]).to.not.equal('');\r",
											"})\r",
											"\r",
											"pm.test(\"(13) 이미지 정보 확인\", function () {\r",
											"    var arrString =\"\";\r",
											"    var words1 =[];\r",
											"    var words2 =[];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"    \r",
											"    words1 = newline[1].split('|');\r",
											"    \r",
											"    if(pm.globals.get(\"mode\") == 1) console.log('13) 이미지 정보 확인 : ', words1[44], words1[45]);\r",
											"    pm.expect(words1[44]).to.not.equal('');\r",
											"    pm.expect(words1[45]).to.not.equal('');\r",
											"})\r",
											"\r",
											"pm.test(\"(14) 슈퍼앨범 아이콘 정보 확인(수동)\", function () {\r",
											"    var arrString =\"\";\r",
											"    var words1 =[];\r",
											"    var words2 =[];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"    \r",
											"    words1 = newline[1].split('|');\r",
											"    \r",
											"    if(pm.globals.get(\"mode\") == 1) console.log('14) 슈퍼앨범 아이콘 정보 확인(수동) : ', words1[50], words1[51], words1[52]);\r",
											"/*    pm.expect(words1[50]).to.not.equal('');\r",
											"    pm.expect(words1[51]).to.not.equal('');\r",
											"    pm.expect(words1[52]).to.not.equal('');*/\r",
											"})\r",
											"\r",
											"pm.test(\"(15) 시즌 확인\", function () {\r",
											"    var arrString =\"\";\r",
											"    var words1 =[];\r",
											"    var words2 =[];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"    \r",
											"    words1 = newline[0].split('|');\r",
											"    \r",
											"    if(pm.globals.get(\"mode\") == 1) console.log('15) 시즌 확인 : ', words1[10], words1[11]);\r",
											"    pm.expect(words1[10]).to.not.equal('');\r",
											"    pm.expect(words1[11]).to.not.equal('');\r",
											"})\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Host",
										"value": "vodlookup.fleta.com",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://{{imcs}}/servlets/CommSvl?CMD=getNXSeriesList&PARAM=SA_ID=M14090300006|STB_MAC=9893.cc25.bc23|CAT_ID=AR045|PAGE_NO=0|PAGE_CNT=5|RQS_NO=0|CAT_GB=I30|DEFIN_FLAG=1|NET_TYP=02|APP_TYPE=RUSA|STB_FLAG=N|IPV6_FLAG=N|TEST_ID=|VARIATION_ID=|",
									"protocol": "http",
									"host": [
										"{{imcs}}"
									],
									"path": [
										"servlets",
										"CommSvl"
									],
									"query": [
										{
											"key": "CMD",
											"value": "getNXSeriesList"
										},
										{
											"key": "PARAM",
											"value": "SA_ID=M14090300006|STB_MAC=9893.cc25.bc23|CAT_ID=AR045|PAGE_NO=0|PAGE_CNT=5|RQS_NO=0|CAT_GB=I30|DEFIN_FLAG=1|NET_TYP=02|APP_TYPE=RUSA|STB_FLAG=N|IPV6_FLAG=N|TEST_ID=|VARIATION_ID=|"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "getNXSeriesList_TC42_일반 시리즈 카테고리 ID (국내예능)_최초진입 : 시청정보無_종영_일반STB_AB=NULL_일반사용자_일반편성_기본 Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"if(pm.globals.get(\"mode\") == 1) console.log('==================== [ getNXSeriesList TC  42 ] ====================');\r",
											"\r",
											"var comp_line = 0;\r",
											"var next_flag = 0;\r",
											"\r",
											"pm.test(\"(1) 정상 응답 여부 확인\", function () {\r",
											"    var arrString =\"\";\r",
											"    var words1 =[];\r",
											"    var words2 =[];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"    \r",
											"    words1 = newline[0].split('|');\r",
											"    \r",
											"    if(pm.globals.get(\"mode\") == 1) console.log('1) 정상 응답 여부 확인 : '+ words1[0]);\r",
											"    pm.expect(words1[0]).to.equal('0');\r",
											"})\r",
											"    \r",
											"pm.test(\"(2) 전체 건수 확인(수동)\", function () {\r",
											"    var arrString =\"\";\r",
											"    var words1 =[];\r",
											"    var words2 =[];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    var loop_cnt = 0;\r",
											"    var lineCnt = 0;\r",
											"    var comp_line = 0;\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"    lineCnt = newline.length;\r",
											"    \r",
											"    words1 = newline[0].split('|');\r",
											"\r",
											"    for(loop_cnt = 0; loop_cnt < lineCnt; loop_cnt++) {\r",
											"        comp_line = loop_cnt + 1;\r",
											"        words2 = newline[comp_line].split('|');\r",
											"\r",
											"        if(words2[0] == 'M'){\r",
											"            continue;\r",
											"        }\r",
											"        else{\r",
											"            break;\r",
											"        }\r",
											"    }\r",
											"    \r",
											"    if(words1[2] == loop_cnt){\r",
											"        if(pm.globals.get(\"mode\") == 1) console.log('2) 전체 건수 확인 (수동) : '+ words1[2], loop_cnt);\r",
											"    }\r",
											"    else{\r",
											"        if(pm.globals.get(\"mode\") == 1) console.log('2) 전체 건수 확인 (수동) : '+ words1[2], loop_cnt);\r",
											"    }\r",
											"    //pm.expect(words1[2]).to.equal(loop_cnt.toString());\r",
											"})\r",
											"\r",
											"pm.test(\"(3) 시리즈 줄거리 확인\", function () {\r",
											"    var arrString =\"\";\r",
											"    var words1 =[];\r",
											"    var words2 =[];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"    \r",
											"    words1 = newline[0].split('|');\r",
											"    \r",
											"    if(pm.globals.get(\"mode\") == 1) console.log('3) 시리즈 줄거리 확인 : '+ words1[5]);\r",
											"    //pm.expect(words1[5]).to.equal('');\r",
											"})\r",
											"\r",
											"pm.test(\"(4) 회차 표시 여부 확인\", function () {\r",
											"    var arrString =\"\";\r",
											"    var words1 =[];\r",
											"    var words2 =[];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"    \r",
											"    words1 = newline[0].split('|');\r",
											"    \r",
											"    if(pm.globals.get(\"mode\") == 1) console.log('4) 회차 표시 여부 확인 : '+ words1[8]);\r",
											"    pm.expect(words1[8]).to.equal('Y');\r",
											"})\r",
											"\r",
											"pm.test(\"(5) 현재 페이지 확인\", function () {\r",
											"    var arrString =\"\";\r",
											"    var words1 =[];\r",
											"    var words2 =[];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"    \r",
											"    words1 = newline[0].split('|');\r",
											"    \r",
											"    if(pm.globals.get(\"mode\") == 1) console.log('5) 현재 페이지 확인 : '+ words1[13]);\r",
											"    pm.expect(words1[13]).to.not.equal('');\r",
											"})\r",
											"\r",
											"pm.test(\"(6) 이미지 URL 확인\", function () {\r",
											"    var arrString =\"\";\r",
											"    var words1 =[];\r",
											"    var words2 =[];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"    \r",
											"    words1 = newline[0].split('|');\r",
											"\r",
											"    if(pm.globals.get(\"mode\") == 1) console.log('6) 이미지 URL 확인 : ', words1[14], words1[15], words1[16], words1[17]);\r",
											"    pm.expect(words1[14]).to.not.null;\r",
											"    pm.expect(words1[15]).to.not.null;\r",
											"    pm.expect(words1[16]).to.not.null;\r",
											"    pm.expect(words1[17]).to.not.null;\r",
											"})\r",
											"\r",
											"pm.test(\"(7) 예고편 확인\", function () {\r",
											"    var arrString =\"\";\r",
											"    var words1 =[];\r",
											"    var words2 =[];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    var loop_cnt = 0;\r",
											"    var lineCnt = 0;\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"    lineCnt = newline.length;\r",
											"\r",
											"    words1 = newline[1].split('|');\r",
											"    \r",
											"    for(loop_cnt = 0; loop_cnt < lineCnt; loop_cnt++) {\r",
											"        comp_line = loop_cnt + 1;\r",
											"        words2 = newline[comp_line].split('|');\r",
											"\r",
											"        if(words2[0] == 'M'){\r",
											"            next_flag = 0;\r",
											"            continue;\r",
											"        }\r",
											"        else if(words2[0] == 'P'){\r",
											"            next_flag = 1;\r",
											"            break;\r",
											"        }\r",
											"        else{\r",
											"            next_flag = 0;\r",
											"            break;\r",
											"        }\r",
											"    }\r",
											"    \r",
											"    if(next_flag){\r",
											"        if(pm.globals.get(\"mode\") == 1) console.log('7) 예고편 있음 : ', words2[0]);\r",
											"    }\r",
											"    else{\r",
											"        if(pm.globals.get(\"mode\") == 1) console.log('7) 예고편 없음 : ', words2[0]);\r",
											"    }\r",
											"    \r",
											"    //pm.expect(words2[0]).to.equal('P');\r",
											"})\r",
											"\r",
											"pm.test(\"(8) 예고편 URL 확인\", function () {\r",
											"    var arrString =\"\";\r",
											"    var words1 =[];\r",
											"    var words2 =[];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"    \r",
											"    words1 = newline[0].split('|');\r",
											"    words2 = newline[comp_line].split('|');\r",
											"    \r",
											"    if(next_flag){\r",
											"        if(pm.globals.get(\"mode\") == 1) console.log('8) 예고편 URL 존재 : ', words1[18], words1[19], words1[20], words1[21], words1[22], words1[23]);\r",
											"        pm.expect(words1[18]).to.not.equal('');\r",
											"        pm.expect(words1[19]).to.not.equal('');\r",
											"        pm.expect(words1[20]).to.not.equal('');\r",
											"        pm.expect(words1[21]).to.not.equal('');\r",
											"        pm.expect(words1[22]).to.not.equal('');\r",
											"        pm.expect(words1[23]).to.not.equal('');\r",
											"    }\r",
											"    else{\r",
											"        if(pm.globals.get(\"mode\") == 1) console.log('8) 예고편 URL 존재하지 않음 : ', words1[18], words1[19], words1[20], words1[21], words1[22], words1[23]);\r",
											"        pm.expect(words1[18]).to.equal('');\r",
											"        pm.expect(words1[19]).to.equal('');\r",
											"        pm.expect(words1[20]).to.equal('');\r",
											"        pm.expect(words1[21]).to.equal('');\r",
											"        pm.expect(words1[22]).to.equal('');\r",
											"        pm.expect(words1[23]).to.equal('');\r",
											"    }\r",
											"    next_flag = 0;\r",
											"})\r",
											"\r",
											"pm.test(\"(9) 바디 첫번째 항목 확인\", function () {\r",
											"    var arrString =\"\";\r",
											"    var words1 =[];\r",
											"    var words2 =[];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"    \r",
											"    words1 = newline[1].split('|');\r",
											"    \r",
											"    if(pm.globals.get(\"mode\") == 1) console.log('9) 바디 첫번째 항목 확인 : '+ words1[0]);\r",
											"    pm.expect(words1[0]).to.equal('M');\r",
											"})\r",
											"\r",
											"pm.test(\"(10) 앨범ID 확인\", function () {\r",
											"    var arrString =\"\";\r",
											"    var words1 =[];\r",
											"    var words2 =[];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"    \r",
											"    words1 = newline[1].split('|');\r",
											"    \r",
											"    if(pm.globals.get(\"mode\") == 1) console.log('10) 앨범ID 확인 : '+ words1[1]);\r",
											"    pm.expect(words1[1]).to.not.equal('');\r",
											"})\r",
											"\r",
											"pm.test(\"(11) 시리즈 번호 확인\", function () {\r",
											"    var arrString =\"\";\r",
											"    var words1 =[];\r",
											"    var words2 =[];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"    \r",
											"    words1 = newline[1].split('|');\r",
											"    \r",
											"    if(pm.globals.get(\"mode\") == 1) console.log('11) 시리즈 번호 확인 : '+ words1[3]);\r",
											"    pm.expect(words1[3]).to.not.equal('');\r",
											"})\r",
											"\r",
											"pm.test(\"(12) 줄거리 확인\", function () {\r",
											"    var arrString =\"\";\r",
											"    var words1 =[];\r",
											"    var words2 =[];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"    \r",
											"    words1 = newline[1].split('|');\r",
											"    \r",
											"    if(pm.globals.get(\"mode\") == 1) console.log('12) 줄거리 확인 : '+ words1[27]);\r",
											"    pm.expect(words1[27]).to.not.equal('');\r",
											"})\r",
											"\r",
											"pm.test(\"(13) 이미지 정보 확인\", function () {\r",
											"    var arrString =\"\";\r",
											"    var words1 =[];\r",
											"    var words2 =[];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"    \r",
											"    words1 = newline[1].split('|');\r",
											"    \r",
											"    if(pm.globals.get(\"mode\") == 1) console.log('13) 이미지 정보 확인 : ', words1[44], words1[45]);\r",
											"    pm.expect(words1[44]).to.not.equal('');\r",
											"    pm.expect(words1[45]).to.not.equal('');\r",
											"})\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Host",
										"value": "vodlookup.fleta.com",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://{{imcs}}/servlets/CommSvl?CMD=getNXSeriesList&PARAM=SA_ID=M14090300006|STB_MAC=9893.cc25.bc23|CAT_ID=BM0VW|PAGE_NO=0|PAGE_CNT=5|RQS_NO=0|CAT_GB=I30|DEFIN_FLAG=1|NET_TYP=02|APP_TYPE=RUSA|STB_FLAG=N|IPV6_FLAG=Y|TEST_ID=|VARIATION_ID=|",
									"protocol": "http",
									"host": [
										"{{imcs}}"
									],
									"path": [
										"servlets",
										"CommSvl"
									],
									"query": [
										{
											"key": "CMD",
											"value": "getNXSeriesList"
										},
										{
											"key": "PARAM",
											"value": "SA_ID=M14090300006|STB_MAC=9893.cc25.bc23|CAT_ID=BM0VW|PAGE_NO=0|PAGE_CNT=5|RQS_NO=0|CAT_GB=I30|DEFIN_FLAG=1|NET_TYP=02|APP_TYPE=RUSA|STB_FLAG=N|IPV6_FLAG=Y|TEST_ID=|VARIATION_ID=|"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "getNXSeriesList_TC61_일반 시리즈 카테고리 ID (해외드라마)_최초진입 : 시청정보無_종영_일반STB_AB=NULL_시즌있음_일반사용자_일반편성_기본 Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"if(pm.globals.get(\"mode\") == 1) console.log('==================== [ getNXSeriesList TC 61 ] ====================');\r",
											"\r",
											"var comp_line = 0;\r",
											"var next_flag = 0;\r",
											"\r",
											"pm.test(\"(1) 정상 응답 여부 확인\", function () {\r",
											"    var arrString =\"\";\r",
											"    var words1 =[];\r",
											"    var words2 =[];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"    \r",
											"    words1 = newline[0].split('|');\r",
											"    \r",
											"    if(pm.globals.get(\"mode\") == 1) console.log('1) 정상 응답 여부 확인 : '+ words1[0]);\r",
											"    pm.expect(words1[0]).to.equal('0');\r",
											"})\r",
											"    \r",
											"pm.test(\"(2) 전체 건수 확인(수동)\", function () {\r",
											"    var arrString =\"\";\r",
											"    var words1 =[];\r",
											"    var words2 =[];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    var loop_cnt = 0;\r",
											"    var lineCnt = 0;\r",
											"    var comp_line = 0;\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"    lineCnt = newline.length;\r",
											"    \r",
											"    words1 = newline[0].split('|');\r",
											"\r",
											"    for(loop_cnt = 0; loop_cnt < lineCnt; loop_cnt++) {\r",
											"        comp_line = loop_cnt + 1;\r",
											"        words2 = newline[comp_line].split('|');\r",
											"\r",
											"        if(words2[0] == 'M'){\r",
											"            continue;\r",
											"        }\r",
											"        else{\r",
											"            break;\r",
											"        }\r",
											"    }\r",
											"    \r",
											"    if(words1[2] == loop_cnt){\r",
											"        if(pm.globals.get(\"mode\") == 1) console.log('2) 전체 건수 확인 (수동) : '+ words1[2], loop_cnt);\r",
											"    }\r",
											"    else{\r",
											"        if(pm.globals.get(\"mode\") == 1) console.log('2) 전체 건수 확인 (수동) : '+ words1[2], loop_cnt);\r",
											"    }\r",
											"    //pm.expect(words1[2]).to.equal(loop_cnt.toString());\r",
											"})\r",
											"\r",
											"pm.test(\"(3) 시리즈 줄거리 확인 체크안함\", function () {\r",
											"    var arrString =\"\";\r",
											"    var words1 =[];\r",
											"    var words2 =[];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"    \r",
											"    words1 = newline[0].split('|');\r",
											"    \r",
											"    if(pm.globals.get(\"mode\") == 1) console.log('3) 시리즈 줄거리 확인 : '+ words1[5]);\r",
											"    //pm.expect(words1[5]).to.not.equal('');\r",
											"})\r",
											"\r",
											"pm.test(\"(4) 회차 표시 여부 확인\", function () {\r",
											"    var arrString =\"\";\r",
											"    var words1 =[];\r",
											"    var words2 =[];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"    \r",
											"    words1 = newline[0].split('|');\r",
											"    \r",
											"    if(pm.globals.get(\"mode\") == 1) console.log('4) 회차 표시 여부 확인 : '+ words1[8]);\r",
											"    pm.expect(words1[8]).to.equal('Y');\r",
											"})\r",
											"\r",
											"pm.test(\"(5) 현재 페이지 확인\", function () {\r",
											"    var arrString =\"\";\r",
											"    var words1 =[];\r",
											"    var words2 =[];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"    \r",
											"    words1 = newline[0].split('|');\r",
											"    \r",
											"    if(pm.globals.get(\"mode\") == 1) console.log('5) 현재 페이지 확인 : '+ words1[13]);\r",
											"    pm.expect(words1[13]).to.not.equal('');\r",
											"})\r",
											"\r",
											"pm.test(\"(6) 이미지 URL 확인\", function () {\r",
											"    var arrString =\"\";\r",
											"    var words1 =[];\r",
											"    var words2 =[];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"    \r",
											"    words1 = newline[0].split('|');\r",
											"\r",
											"    if(pm.globals.get(\"mode\") == 1) console.log('6) 이미지 URL 확인 : ', words1[14], words1[15], words1[16], words1[17]);\r",
											"    pm.expect(words1[14]).to.not.null;\r",
											"    pm.expect(words1[15]).to.not.null;\r",
											"    pm.expect(words1[16]).to.not.null;\r",
											"    pm.expect(words1[17]).to.not.null;\r",
											"})\r",
											"\r",
											"pm.test(\"(7) 예고편 확인\", function () {\r",
											"    var arrString =\"\";\r",
											"    var words1 =[];\r",
											"    var words2 =[];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    var loop_cnt = 0;\r",
											"    var lineCnt = 0;\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"    lineCnt = newline.length;\r",
											"\r",
											"    words1 = newline[1].split('|');\r",
											"    \r",
											"    for(loop_cnt = 0; loop_cnt < lineCnt; loop_cnt++) {\r",
											"        comp_line = loop_cnt + 1;\r",
											"        words2 = newline[comp_line].split('|');\r",
											"\r",
											"        if(words2[0] == 'M'){\r",
											"            next_flag = 0;\r",
											"            continue;\r",
											"        }\r",
											"        else if(words2[0] == 'P'){\r",
											"            next_flag = 1;\r",
											"            break;\r",
											"        }\r",
											"        else{\r",
											"            next_flag = 0;\r",
											"            break;\r",
											"        }\r",
											"    }\r",
											"    \r",
											"    if(next_flag){\r",
											"        if(pm.globals.get(\"mode\") == 1) console.log('7) 예고편 있음 : ', words2[1], words1[1]);\r",
											"        //pm.expect(words2[1]).to.equal(words1[1]);\r",
											"    }\r",
											"    else{\r",
											"        if(pm.globals.get(\"mode\") == 1) console.log('7) 예고편 없음 : ', words2[0]);\r",
											"        pm.expect(words2[0]).to.oneOf(['', '\\n']);\r",
											"    }\r",
											"})\r",
											"\r",
											"pm.test(\"(8) 예고편 URL 확인\", function () {\r",
											"    var arrString =\"\";\r",
											"    var words1 =[];\r",
											"    var words2 =[];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"    \r",
											"    words1 = newline[0].split('|');\r",
											"    words2 = newline[comp_line].split('|');\r",
											"    \r",
											"    if(next_flag){\r",
											"        if(pm.globals.get(\"mode\") == 1) console.log('8) 예고편 URL 존재 : ', words1[18], words1[19], words1[20], words1[21], words1[22], words1[23]);\r",
											"        pm.expect(words1[18]).to.not.equal('');\r",
											"        pm.expect(words1[19]).to.not.equal('');\r",
											"        pm.expect(words1[20]).to.not.equal('');\r",
											"        pm.expect(words1[21]).to.not.equal('');\r",
											"        pm.expect(words1[22]).to.not.equal('');\r",
											"        pm.expect(words1[23]).to.not.equal('');\r",
											"    }\r",
											"    else{\r",
											"        if(pm.globals.get(\"mode\") == 1) console.log('8) 예고편 URL 존재하지 않음 : ', words1[18], words1[19], words1[20], words1[21], words1[22], words1[23]);\r",
											"        pm.expect(words1[18]).to.equal('');\r",
											"        pm.expect(words1[19]).to.equal('');\r",
											"        pm.expect(words1[20]).to.equal('');\r",
											"        pm.expect(words1[21]).to.equal('');\r",
											"        pm.expect(words1[22]).to.equal('');\r",
											"        pm.expect(words1[23]).to.equal('');\r",
											"    }\r",
											"    next_flag = 0;\r",
											"})\r",
											"\r",
											"pm.test(\"(9) 바디 첫번째 항목 확인\", function () {\r",
											"    var arrString =\"\";\r",
											"    var words1 =[];\r",
											"    var words2 =[];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"    \r",
											"    words1 = newline[1].split('|');\r",
											"    \r",
											"    if(pm.globals.get(\"mode\") == 1) console.log('9) 바디 첫번째 항목 확인 : '+ words1[0]);\r",
											"    pm.expect(words1[0]).to.equal('M');\r",
											"})\r",
											"\r",
											"pm.test(\"(10) 앨범ID 확인\", function () {\r",
											"    var arrString =\"\";\r",
											"    var words1 =[];\r",
											"    var words2 =[];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"    \r",
											"    words1 = newline[1].split('|');\r",
											"    \r",
											"    if(pm.globals.get(\"mode\") == 1) console.log('10) 앨범ID 확인 : '+ words1[1]);\r",
											"    pm.expect(words1[1]).to.not.equal('');\r",
											"})\r",
											"\r",
											"pm.test(\"(11) 시리즈 번호 확인\", function () {\r",
											"    var arrString =\"\";\r",
											"    var words1 =[];\r",
											"    var words2 =[];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"    \r",
											"    words1 = newline[1].split('|');\r",
											"    \r",
											"    if(pm.globals.get(\"mode\") == 1) console.log('11) 시리즈 번호 확인 : '+ words1[3]);\r",
											"    pm.expect(words1[3]).to.not.equal('');\r",
											"})\r",
											"\r",
											"pm.test(\"(12) 줄거리 확인\", function () {\r",
											"    var arrString =\"\";\r",
											"    var words1 =[];\r",
											"    var words2 =[];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"    \r",
											"    words1 = newline[1].split('|');\r",
											"    \r",
											"    if(pm.globals.get(\"mode\") == 1) console.log('12) 줄거리 확인 : '+ words1[27]);\r",
											"    pm.expect(words1[27]).to.not.equal('');\r",
											"})\r",
											"\r",
											"pm.test(\"(13) 이미지 정보 확인\", function () {\r",
											"    var arrString =\"\";\r",
											"    var words1 =[];\r",
											"    var words2 =[];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"    \r",
											"    words1 = newline[1].split('|');\r",
											"    \r",
											"    if(pm.globals.get(\"mode\") == 1) console.log('13) 이미지 정보 확인 : ', words1[44], words1[45]);\r",
											"    pm.expect(words1[44]).to.not.equal('');\r",
											"    pm.expect(words1[45]).to.not.equal('');\r",
											"})\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Host",
										"value": "vodlookup.fleta.com",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://{{imcs}}/servlets/CommSvl?CMD=getNXSeriesList&PARAM=SA_ID=M14090300006|STB_MAC=9893.cc25.bc23|CAT_ID=AM2S6|PAGE_NO=0|PAGE_CNT=5|RQS_NO=0|CAT_GB=I30|DEFIN_FLAG=1|NET_TYP=02|APP_TYPE=RUSA|STB_FLAG=N|IPV6_FLAG=Y|TEST_ID=|VARIATION_ID=|",
									"protocol": "http",
									"host": [
										"{{imcs}}"
									],
									"path": [
										"servlets",
										"CommSvl"
									],
									"query": [
										{
											"key": "CMD",
											"value": "getNXSeriesList"
										},
										{
											"key": "PARAM",
											"value": "SA_ID=M14090300006|STB_MAC=9893.cc25.bc23|CAT_ID=AM2S6|PAGE_NO=0|PAGE_CNT=5|RQS_NO=0|CAT_GB=I30|DEFIN_FLAG=1|NET_TYP=02|APP_TYPE=RUSA|STB_FLAG=N|IPV6_FLAG=Y|TEST_ID=|VARIATION_ID=|"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "getNXSeriesList_TC20_일반 시리즈 카테고리 ID_최초진입 : 시청정보無_일반STB_AB=NULL_서비스중단:구매_일반사용자_일반편성_기본 Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"if(pm.globals.get(\"mode\") == 1) console.log('==================== [ getNXSeriesList TC 20 ] ====================');\r",
											"\r",
											"var comp_line = 0;\r",
											"var next_flag = 0;\r",
											"\r",
											"pm.test(\"(1) 정상 응답 여부 확인\", function () {\r",
											"    var arrString =\"\";\r",
											"    var words1 =[];\r",
											"    var words2 =[];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"    \r",
											"    words1 = newline[0].split('|');\r",
											"    \r",
											"    if(pm.globals.get(\"mode\") == 1) console.log('1) 정상 응답 여부 확인 : '+ words1[0]);\r",
											"    pm.expect(words1[0]).to.equal('0');\r",
											"})\r",
											"    \r",
											"pm.test(\"(2) 전체 건수 확인(수동)\", function () {\r",
											"    var arrString =\"\";\r",
											"    var words1 =[];\r",
											"    var words2 =[];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    var loop_cnt = 0;\r",
											"    var lineCnt = 0;\r",
											"    var comp_line = 0;\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"    lineCnt = newline.length;\r",
											"    \r",
											"    words1 = newline[0].split('|');\r",
											"\r",
											"    for(loop_cnt = 0; loop_cnt < lineCnt; loop_cnt++) {\r",
											"        comp_line = loop_cnt + 1;\r",
											"        words2 = newline[comp_line].split('|');\r",
											"\r",
											"        if(words2[0] == 'M'){\r",
											"            continue;\r",
											"        }\r",
											"        else{\r",
											"            break;\r",
											"        }\r",
											"    }\r",
											"    \r",
											"    if(words1[2] == loop_cnt){\r",
											"        if(pm.globals.get(\"mode\") == 1) console.log('2) 전체 건수 확인 (수동) : '+ words1[2], loop_cnt);\r",
											"    }\r",
											"    else{\r",
											"        if(pm.globals.get(\"mode\") == 1) console.log('2) 전체 건수 확인 (수동) : '+ words1[2], loop_cnt);\r",
											"    }\r",
											"    //pm.expect(words1[2]).to.equal(loop_cnt.toString());\r",
											"})\r",
											"\r",
											"pm.test(\"(3) 시리즈 줄거리 확인\", function () {\r",
											"    var arrString =\"\";\r",
											"    var words1 =[];\r",
											"    var words2 =[];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"    \r",
											"    words1 = newline[0].split('|');\r",
											"    \r",
											"    if(pm.globals.get(\"mode\") == 1) console.log('3) 시리즈 줄거리 확인 : '+ words1[5]);\r",
											"    pm.expect(words1[5]).to.not.equal('');\r",
											"})\r",
											"\r",
											"pm.test(\"(4) 회차 표시 여부 확인\", function () {\r",
											"    var arrString =\"\";\r",
											"    var words1 =[];\r",
											"    var words2 =[];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"    \r",
											"    words1 = newline[0].split('|');\r",
											"    \r",
											"    if(pm.globals.get(\"mode\") == 1) console.log('4) 회차 표시 여부 확인 : '+ words1[8]);\r",
											"    pm.expect(words1[8]).to.equal('Y');\r",
											"})\r",
											"\r",
											"pm.test(\"(5) 현재 페이지 확인\", function () {\r",
											"    var arrString =\"\";\r",
											"    var words1 =[];\r",
											"    var words2 =[];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"    \r",
											"    words1 = newline[0].split('|');\r",
											"    \r",
											"    if(pm.globals.get(\"mode\") == 1) console.log('5) 현재 페이지 확인 : '+ words1[13]);\r",
											"    pm.expect(words1[13]).to.not.equal('');\r",
											"})\r",
											"\r",
											"pm.test(\"(6) 이미지 URL 확인\", function () {\r",
											"    var arrString =\"\";\r",
											"    var words1 =[];\r",
											"    var words2 =[];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"    \r",
											"    words1 = newline[0].split('|');\r",
											"\r",
											"    if(pm.globals.get(\"mode\") == 1) console.log('6) 이미지 URL 확인 : ', words1[14], words1[15], words1[16], words1[17]);\r",
											"    pm.expect(words1[14]).to.not.null;\r",
											"    pm.expect(words1[15]).to.not.null;\r",
											"    pm.expect(words1[16]).to.not.null;\r",
											"    pm.expect(words1[17]).to.not.null;\r",
											"})\r",
											"\r",
											"pm.test(\"(7) 예고편 확인\", function () {\r",
											"    var arrString =\"\";\r",
											"    var words1 =[];\r",
											"    var words2 =[];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    var loop_cnt = 0;\r",
											"    var lineCnt = 0;\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"    lineCnt = newline.length;\r",
											"\r",
											"    words1 = newline[1].split('|');\r",
											"    \r",
											"    for(loop_cnt = 0; loop_cnt < lineCnt; loop_cnt++) {\r",
											"        comp_line = loop_cnt + 1;\r",
											"        words2 = newline[comp_line].split('|');\r",
											"\r",
											"        if(words2[0] == 'M'){\r",
											"            next_flag = 0;\r",
											"            continue;\r",
											"        }\r",
											"        else if(words2[0] == 'P'){\r",
											"            next_flag = 1;\r",
											"            break;\r",
											"        }\r",
											"        else{\r",
											"            next_flag = 0;\r",
											"            break;\r",
											"        }\r",
											"    }\r",
											"    \r",
											"    if(next_flag){\r",
											"        if(pm.globals.get(\"mode\") == 1) console.log('7) 예고편 있음 : ', words2[1], words1[1]);\r",
											"        //pm.expect(words2[1]).to.equal(words1[1]);\r",
											"    }\r",
											"    else{\r",
											"        if(pm.globals.get(\"mode\") == 1) console.log('7) 예고편 없음 : ', words2[0]);\r",
											"        pm.expect(words2[0]).to.oneOf(['', '\\n']);\r",
											"    }\r",
											"})\r",
											"\r",
											"pm.test(\"(8) 예고편 URL 확인\", function () {\r",
											"    var arrString =\"\";\r",
											"    var words1 =[];\r",
											"    var words2 =[];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"    \r",
											"    words1 = newline[0].split('|');\r",
											"    words2 = newline[comp_line].split('|');\r",
											"    \r",
											"    if(next_flag){\r",
											"        if(pm.globals.get(\"mode\") == 1) console.log('8) 예고편 URL 존재 : ', words1[18], words1[19], words1[20], words1[21], words1[22], words1[23]);\r",
											"        pm.expect(words1[18]).to.not.equal('');\r",
											"        pm.expect(words1[19]).to.not.equal('');\r",
											"        pm.expect(words1[20]).to.not.equal('');\r",
											"        pm.expect(words1[21]).to.not.equal('');\r",
											"        pm.expect(words1[22]).to.not.equal('');\r",
											"        pm.expect(words1[23]).to.not.equal('');\r",
											"    }\r",
											"    else{\r",
											"        if(pm.globals.get(\"mode\") == 1) console.log('8) 예고편 URL 존재하지 않음 : ', words1[18], words1[19], words1[20], words1[21], words1[22], words1[23]);\r",
											"        pm.expect(words1[18]).to.equal('');\r",
											"        pm.expect(words1[19]).to.equal('');\r",
											"        pm.expect(words1[20]).to.equal('');\r",
											"        pm.expect(words1[21]).to.equal('');\r",
											"        pm.expect(words1[22]).to.equal('');\r",
											"        pm.expect(words1[23]).to.equal('');\r",
											"    }\r",
											"    next_flag = 0;\r",
											"})\r",
											"\r",
											"pm.test(\"(9) 바디 첫번째 항목 확인\", function () {\r",
											"    var arrString =\"\";\r",
											"    var words1 =[];\r",
											"    var words2 =[];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"    \r",
											"    words1 = newline[1].split('|');\r",
											"    \r",
											"    if(pm.globals.get(\"mode\") == 1) console.log('9) 바디 첫번째 항목 확인 : '+ words1[0]);\r",
											"    pm.expect(words1[0]).to.equal('M');\r",
											"})\r",
											"\r",
											"pm.test(\"(10) 앨범ID 확인\", function () {\r",
											"    var arrString =\"\";\r",
											"    var words1 =[];\r",
											"    var words2 =[];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"    \r",
											"    words1 = newline[1].split('|');\r",
											"    \r",
											"    if(pm.globals.get(\"mode\") == 1) console.log('10) 앨범ID 확인 : '+ words1[1]);\r",
											"    pm.expect(words1[1]).to.not.equal('');\r",
											"})\r",
											"\r",
											"pm.test(\"(11) 시리즈 번호 확인\", function () {\r",
											"    var arrString =\"\";\r",
											"    var words1 =[];\r",
											"    var words2 =[];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"    \r",
											"    words1 = newline[1].split('|');\r",
											"    \r",
											"    if(pm.globals.get(\"mode\") == 1) console.log('11) 시리즈 번호 확인 : '+ words1[3]);\r",
											"    pm.expect(words1[3]).to.not.equal('');\r",
											"})\r",
											"\r",
											"pm.test(\"(12) 줄거리 확인\", function () {\r",
											"    var arrString =\"\";\r",
											"    var words1 =[];\r",
											"    var words2 =[];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"    \r",
											"    words1 = newline[1].split('|');\r",
											"    \r",
											"    if(pm.globals.get(\"mode\") == 1) console.log('12) 줄거리 확인 : '+ words1[27]);\r",
											"    pm.expect(words1[27]).to.not.equal('');\r",
											"})\r",
											"\r",
											"pm.test(\"(13) 이미지 정보 확인\", function () {\r",
											"    var arrString =\"\";\r",
											"    var words1 =[];\r",
											"    var words2 =[];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"    \r",
											"    words1 = newline[1].split('|');\r",
											"    \r",
											"    if(pm.globals.get(\"mode\") == 1) console.log('13) 이미지 정보 확인 : ', words1[44], words1[45]);\r",
											"    pm.expect(words1[44]).to.not.equal('');\r",
											"    pm.expect(words1[45]).to.not.equal('');\r",
											"})\r",
											"\r",
											"pm.test(\"(14) 슈퍼앨범 아이콘 정보 확인(수동)\", function () {\r",
											"    var arrString =\"\";\r",
											"    var words1 =[];\r",
											"    var words2 =[];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"    \r",
											"    words1 = newline[1].split('|');\r",
											"    \r",
											"    if(pm.globals.get(\"mode\") == 1) console.log('14) 슈퍼앨범 아이콘 정보 확인(수동) : ', words1[50], words1[51], words1[52]);\r",
											"/*    pm.expect(words1[50]).to.not.equal('');\r",
											"    pm.expect(words1[51]).to.not.equal('');\r",
											"    pm.expect(words1[52]).to.not.equal('');*/\r",
											"})\r",
											"\r",
											"pm.test(\"(15) 바디 2행 6번째항목 X\", function () {\r",
											"    var arrString =\"\";\r",
											"    var words1 =[];\r",
											"    var words2 =[];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    var loop_cnt = 0;\r",
											"    var lineCnt = 0;\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"    lineCnt = newline.length;\r",
											"\r",
											"    words1 = newline[2].split('|');\r",
											"    \r",
											"    if(pm.globals.get(\"mode\") == 1) console.log('15) 바디 2행 6번째항목 X : ', words1[5]);\r",
											"    pm.expect(words1[5]).to.equal('X');\r",
											"})\r",
											"\r",
											"pm.test(\"(16) 바디 2행 30번째항목(시청가능) N\", function () {\r",
											"    var arrString =\"\";\r",
											"    var words1 =[];\r",
											"    var words2 =[];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    var loop_cnt = 0;\r",
											"    var lineCnt = 0;\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"    lineCnt = newline.length;\r",
											"\r",
											"    words1 = newline[2].split('|');\r",
											"    \r",
											"    if(pm.globals.get(\"mode\") == 1) console.log('16) 바디 2행 30번째항목(시청가능) N : ', words1[29]);\r",
											"    pm.expect(words1[29]).to.equal('N');\r",
											"})\r",
											"\r",
											"pm.test(\"(17) 바디 2행 29번째항목 서비스 중단문구 확인\", function () {\r",
											"    var arrString =\"\";\r",
											"    var words1 =[];\r",
											"    var words2 =[];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    var loop_cnt = 0;\r",
											"    var lineCnt = 0;\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"    lineCnt = newline.length;\r",
											"\r",
											"    words1 = newline[2].split('|');\r",
											"    \r",
											"    if(pm.globals.get(\"mode\") == 1) console.log('17) 바디 2행 29번째항목 서비스 중단문구 확인 : ', words1[28]);\r",
											"    pm.expect(words1[28]).to.not.equal('');\r",
											"})\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Host",
										"value": "vodlookup.fleta.com",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://{{imcs}}/servlets/CommSvl?CMD=getNXSeriesList&PARAM=SA_ID=M14090300006|STB_MAC=9893.cc25.bc23|CAT_ID=BP029|PAGE_NO=1|PAGE_CNT=5|RQS_NO=0|CAT_GB=I30|DEFIN_FLAG=1|NET_TYP=02|APP_TYPE=RUSA|STB_FLAG=N|IPV6_FLAG=Y|TEST_ID=|VARIATION_ID=|",
									"protocol": "http",
									"host": [
										"{{imcs}}"
									],
									"path": [
										"servlets",
										"CommSvl"
									],
									"query": [
										{
											"key": "CMD",
											"value": "getNXSeriesList"
										},
										{
											"key": "PARAM",
											"value": "SA_ID=M14090300006|STB_MAC=9893.cc25.bc23|CAT_ID=BP029|PAGE_NO=1|PAGE_CNT=5|RQS_NO=0|CAT_GB=I30|DEFIN_FLAG=1|NET_TYP=02|APP_TYPE=RUSA|STB_FLAG=N|IPV6_FLAG=Y|TEST_ID=|VARIATION_ID=|"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "getNXSeriesList_TC35_일반 시리즈 카테고리 ID_최초진입 : 시청정보無_일반STB_AB=NULL_일반사용자_일반편성_변경=7 Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"if(pm.globals.get(\"mode\") == 1) console.log('==================== [ getNXSeriesList TC 35 ] ====================');\r",
											"\r",
											"pm.test(\"(1) 오류 응답정보 제공 확인\", function () {\r",
											"    var arrString =\"\";\r",
											"    var words1 =[];\r",
											"    var words2 =[];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"    \r",
											"    words1 = newline[0].split('|');\r",
											"    \r",
											"    if(pm.globals.get(\"mode\") == 1) console.log('1) 오류 응답 정보 제공 : '+ words1[0]);\r",
											"    pm.expect(words1[0]).to.equal('1');\r",
											"})\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Host",
										"value": "vodlookup.fleta.com",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://{{imcs}}/servlets/CommSvl?CMD=getNXSeriesList&PARAM=SA_ID=M14090300009|STB_MAC=9893.cc25.bc22|CAT_ID=B8013|PAGE_NO=0|PAGE_CNT=5|RQS_NO=0|CAT_GB=I30|DEFIN_FLAG=1|NET_TYP=02|APP_TYPE=RUSA|STB_FLAG=N|IPV6_FLAG=N|TEST_ID=|VARIATION_ID=|",
									"protocol": "http",
									"host": [
										"{{imcs}}"
									],
									"path": [
										"servlets",
										"CommSvl"
									],
									"query": [
										{
											"key": "CMD",
											"value": "getNXSeriesList"
										},
										{
											"key": "PARAM",
											"value": "SA_ID=M14090300009|STB_MAC=9893.cc25.bc22|CAT_ID=B8013|PAGE_NO=0|PAGE_CNT=5|RQS_NO=0|CAT_GB=I30|DEFIN_FLAG=1|NET_TYP=02|APP_TYPE=RUSA|STB_FLAG=N|IPV6_FLAG=N|TEST_ID=|VARIATION_ID=|"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "getNXSeriesList_TC59_일반 패키지 카테고리 ID_최초진입 : 시청정보無_종영_일반STB_AB=NULL_일반사용자_일반편성_기본 Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"if(pm.globals.get(\"mode\") == 1) console.log('==================== [ getNXSeriesList TC 59 ] ====================');\r",
											"\r",
											"var comp_line = 0;\r",
											"var next_flag = 0;\r",
											"\r",
											"pm.test(\"(1) 정상 응답 여부 확인\", function () {\r",
											"    var arrString =\"\";\r",
											"    var words1 =[];\r",
											"    var words2 =[];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"    \r",
											"    words1 = newline[0].split('|');\r",
											"    \r",
											"    if(pm.globals.get(\"mode\") == 1) console.log('1) 정상 응답 여부 확인 : '+ words1[0]);\r",
											"    pm.expect(words1[0]).to.equal('0');\r",
											"})\r",
											"    \r",
											"pm.test(\"(2) 전체 건수 확인(수동)\", function () {\r",
											"    var arrString =\"\";\r",
											"    var words1 =[];\r",
											"    var words2 =[];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    var loop_cnt = 0;\r",
											"    var lineCnt = 0;\r",
											"    var comp_line = 0;\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"    lineCnt = newline.length;\r",
											"    \r",
											"    words1 = newline[0].split('|');\r",
											"\r",
											"    for(loop_cnt = 0; loop_cnt < lineCnt; loop_cnt++) {\r",
											"        comp_line = loop_cnt + 1;\r",
											"        words2 = newline[comp_line].split('|');\r",
											"\r",
											"        if(words2[0] == 'M'){\r",
											"            continue;\r",
											"        }\r",
											"        else{\r",
											"            break;\r",
											"        }\r",
											"    }\r",
											"    \r",
											"    if(words1[2] == loop_cnt){\r",
											"        if(pm.globals.get(\"mode\") == 1) console.log('2) 전체 건수 확인 (수동) : '+ words1[2], loop_cnt);\r",
											"    }\r",
											"    else{\r",
											"        if(pm.globals.get(\"mode\") == 1) console.log('2) 전체 건수 확인 (수동) : '+ words1[2], loop_cnt);\r",
											"    }\r",
											"    //pm.expect(words1[2]).to.equal(loop_cnt.toString());\r",
											"})\r",
											"\r",
											"pm.test(\"(3) 시리즈 줄거리 확인\", function () {\r",
											"    var arrString =\"\";\r",
											"    var words1 =[];\r",
											"    var words2 =[];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"    \r",
											"    words1 = newline[0].split('|');\r",
											"    \r",
											"    if(pm.globals.get(\"mode\") == 1) console.log('3) 시리즈 줄거리 확인 : '+ words1[5]);\r",
											"    //pm.expect(words1[5]).to.not.equal('');\r",
											"})\r",
											"\r",
											"pm.test(\"(4) 회차 표시 여부 확인\", function () {\r",
											"    var arrString =\"\";\r",
											"    var words1 =[];\r",
											"    var words2 =[];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"    \r",
											"    words1 = newline[0].split('|');\r",
											"    \r",
											"    if(pm.globals.get(\"mode\") == 1) console.log('4) 회차 표시 여부 확인 : '+ words1[8]);\r",
											"    pm.expect(words1[8]).to.equal('N');\r",
											"})\r",
											"\r",
											"pm.test(\"(5) 현재 페이지 확인\", function () {\r",
											"    var arrString =\"\";\r",
											"    var words1 =[];\r",
											"    var words2 =[];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"    \r",
											"    words1 = newline[0].split('|');\r",
											"    \r",
											"    if(pm.globals.get(\"mode\") == 1) console.log('5) 현재 페이지 확인 : '+ words1[13]);\r",
											"    pm.expect(words1[13]).to.not.equal('');\r",
											"})\r",
											"\r",
											"pm.test(\"(6) 이미지 URL 확인\", function () {\r",
											"    var arrString =\"\";\r",
											"    var words1 =[];\r",
											"    var words2 =[];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"    \r",
											"    words1 = newline[0].split('|');\r",
											"\r",
											"    if(pm.globals.get(\"mode\") == 1) console.log('6) 이미지 URL 확인 : ', words1[14], words1[15], words1[16], words1[17]);\r",
											"    pm.expect(words1[14]).to.not.null;\r",
											"    pm.expect(words1[15]).to.not.null;\r",
											"    pm.expect(words1[16]).to.not.null;\r",
											"    pm.expect(words1[17]).to.not.null;\r",
											"})\r",
											"\r",
											"pm.test(\"(7) 예고편 확인\", function () {\r",
											"    var arrString =\"\";\r",
											"    var words1 =[];\r",
											"    var words2 =[];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    var loop_cnt = 0;\r",
											"    var lineCnt = 0;\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"    lineCnt = newline.length;\r",
											"\r",
											"    words1 = newline[1].split('|');\r",
											"    \r",
											"    for(loop_cnt = 0; loop_cnt < lineCnt; loop_cnt++) {\r",
											"        comp_line = loop_cnt + 1;\r",
											"        words2 = newline[comp_line].split('|');\r",
											"\r",
											"        if(words2[0] == 'M'){\r",
											"            next_flag = 0;\r",
											"            continue;\r",
											"        }\r",
											"        else if(words2[0] == 'P'){\r",
											"            next_flag = 1;\r",
											"            break;\r",
											"        }\r",
											"        else{\r",
											"            next_flag = 0;\r",
											"            break;\r",
											"        }\r",
											"    }\r",
											"    \r",
											"    if(next_flag){\r",
											"        if(pm.globals.get(\"mode\") == 1) console.log('7) 예고편 있음 : ', words2[1], words1[1]);\r",
											"        //pm.expect(words2[1]).to.equal(words1[1]);\r",
											"    }\r",
											"    else{\r",
											"        if(pm.globals.get(\"mode\") == 1) console.log('7) 예고편 없음 : ', words2[0]);\r",
											"        pm.expect(words2[0]).to.oneOf(['', '\\n']);\r",
											"    }\r",
											"})\r",
											"\r",
											"pm.test(\"(8) 예고편 URL 확인\", function () {\r",
											"    var arrString =\"\";\r",
											"    var words1 =[];\r",
											"    var words2 =[];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"    \r",
											"    words1 = newline[0].split('|');\r",
											"    words2 = newline[comp_line].split('|');\r",
											"    \r",
											"    if(next_flag){\r",
											"        if(pm.globals.get(\"mode\") == 1) console.log('8) 예고편 URL 존재 : ', words1[18], words1[19], words1[20], words1[21], words1[22], words1[23]);\r",
											"        pm.expect(words1[18]).to.not.equal('');\r",
											"        pm.expect(words1[19]).to.not.equal('');\r",
											"        pm.expect(words1[20]).to.not.equal('');\r",
											"        pm.expect(words1[21]).to.not.equal('');\r",
											"        pm.expect(words1[22]).to.not.equal('');\r",
											"        pm.expect(words1[23]).to.not.equal('');\r",
											"    }\r",
											"    else{\r",
											"        if(pm.globals.get(\"mode\") == 1) console.log('8) 예고편 URL 존재하지 않음 : ', words1[18], words1[19], words1[20], words1[21], words1[22], words1[23]);\r",
											"        pm.expect(words1[18]).to.equal('');\r",
											"        pm.expect(words1[19]).to.equal('');\r",
											"        pm.expect(words1[20]).to.equal('');\r",
											"        pm.expect(words1[21]).to.equal('');\r",
											"        pm.expect(words1[22]).to.equal('');\r",
											"        pm.expect(words1[23]).to.equal('');\r",
											"    }\r",
											"    next_flag = 0;\r",
											"})\r",
											"\r",
											"pm.test(\"(9) 바디 첫번째 항목 확인\", function () {\r",
											"    var arrString =\"\";\r",
											"    var words1 =[];\r",
											"    var words2 =[];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"    \r",
											"    words1 = newline[1].split('|');\r",
											"    \r",
											"    if(pm.globals.get(\"mode\") == 1) console.log('9) 바디 첫번째 항목 확인 : '+ words1[0]);\r",
											"    pm.expect(words1[0]).to.equal('M');\r",
											"})\r",
											"\r",
											"pm.test(\"(10) 앨범ID 확인\", function () {\r",
											"    var arrString =\"\";\r",
											"    var words1 =[];\r",
											"    var words2 =[];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"    \r",
											"    words1 = newline[1].split('|');\r",
											"    \r",
											"    if(pm.globals.get(\"mode\") == 1) console.log('10) 앨범ID 확인 : '+ words1[1]);\r",
											"    pm.expect(words1[1]).to.not.equal('');\r",
											"})\r",
											"\r",
											"pm.test(\"(11) 시리즈 번호 확인\", function () {\r",
											"    var arrString =\"\";\r",
											"    var words1 =[];\r",
											"    var words2 =[];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"    \r",
											"    words1 = newline[1].split('|');\r",
											"    \r",
											"    if(pm.globals.get(\"mode\") == 1) console.log('11) 시리즈 번호 확인 : '+ words1[3]);\r",
											"    pm.expect(words1[3]).to.not.equal('');\r",
											"})\r",
											"\r",
											"pm.test(\"(12) 줄거리 확인\", function () {\r",
											"    var arrString =\"\";\r",
											"    var words1 =[];\r",
											"    var words2 =[];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"    \r",
											"    words1 = newline[1].split('|');\r",
											"    \r",
											"    if(pm.globals.get(\"mode\") == 1) console.log('12) 줄거리 확인 : '+ words1[27]);\r",
											"    pm.expect(words1[27]).to.not.equal('');\r",
											"})\r",
											"\r",
											"pm.test(\"(13) 이미지 정보 확인\", function () {\r",
											"    var arrString =\"\";\r",
											"    var words1 =[];\r",
											"    var words2 =[];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"    \r",
											"    words1 = newline[1].split('|');\r",
											"    \r",
											"    if(pm.globals.get(\"mode\") == 1) console.log('13) 이미지 정보 확인 : ', words1[44], words1[45]);\r",
											"    pm.expect(words1[44]).to.not.equal('');\r",
											"    pm.expect(words1[45]).to.not.equal('');\r",
											"})\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Host",
										"value": "vodlookup.fleta.com",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://{{imcs}}/servlets/CommSvl?CMD=getNXSeriesList&PARAM=SA_ID=M14090300006|STB_MAC=9893.cc25.bc23|CAT_ID=A3006|PAGE_NO=0|PAGE_CNT=5|RQS_NO=0|CAT_GB=I30|DEFIN_FLAG=1|NET_TYP=02|APP_TYPE=RUSA|STB_FLAG=N|IPV6_FLAG=Y|TEST_ID=|VARIATION_ID=|",
									"protocol": "http",
									"host": [
										"{{imcs}}"
									],
									"path": [
										"servlets",
										"CommSvl"
									],
									"query": [
										{
											"key": "CMD",
											"value": "getNXSeriesList"
										},
										{
											"key": "PARAM",
											"value": "SA_ID=M14090300006|STB_MAC=9893.cc25.bc23|CAT_ID=A3006|PAGE_NO=0|PAGE_CNT=5|RQS_NO=0|CAT_GB=I30|DEFIN_FLAG=1|NET_TYP=02|APP_TYPE=RUSA|STB_FLAG=N|IPV6_FLAG=Y|TEST_ID=|VARIATION_ID=|"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "getNXSeriesList_TC7_일반 시리즈 카테고리 ID (국내드라마)_최초진입 : 시청정보無_종영_일반STB_IPV6=N_AB=NULL_시즌있음_방송_일반사용자_일반편성_기본 Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"if(pm.globals.get(\"mode\") == 1) console.log('==================== [ getNXSeriesList TC  7 ] ====================');\r",
											"\r",
											"var comp_line = 0;\r",
											"var next_flag = 0;\r",
											"\r",
											"pm.test(\"(1) 정상 응답 여부 확인\", function () {\r",
											"    var arrString =\"\";\r",
											"    var words1 =[];\r",
											"    var words2 =[];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"    \r",
											"    words1 = newline[0].split('|');\r",
											"    \r",
											"    if(pm.globals.get(\"mode\") == 1) console.log('1) 정상 응답 여부 확인 : '+ words1[0]);\r",
											"    pm.expect(words1[0]).to.equal('0');\r",
											"})\r",
											"    \r",
											"pm.test(\"(2) 전체 건수 확인(수동) \", function () {\r",
											"    var arrString =\"\";\r",
											"    var words1 =[];\r",
											"    var words2 =[];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    var loop_cnt = 0;\r",
											"    var lineCnt = 0;\r",
											"    var comp_line = 0;\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"    lineCnt = newline.length;\r",
											"    \r",
											"    words1 = newline[0].split('|');\r",
											"\r",
											"    for(loop_cnt = 0; loop_cnt < lineCnt; loop_cnt++) {\r",
											"        comp_line = loop_cnt + 1;\r",
											"        words2 = newline[comp_line].split('|');\r",
											"\r",
											"        if(words2[0] == 'M'){\r",
											"            continue;\r",
											"        }\r",
											"        else{\r",
											"            break;\r",
											"        }\r",
											"    }\r",
											"    \r",
											"    if(words1[2] == loop_cnt){\r",
											"        if(pm.globals.get(\"mode\") == 1) console.log('2) 전체 건수 확인 (수동) : '+ words1[2], loop_cnt);\r",
											"    }\r",
											"    else{\r",
											"        if(pm.globals.get(\"mode\") == 1) console.log('2) 전체 건수 확인 (수동) : '+ words1[2], loop_cnt);\r",
											"    }\r",
											"    //pm.expect(words1[2]).to.equal(loop_cnt.toString());\r",
											"})\r",
											"\r",
											"pm.test(\"(3) 시리즈 줄거리 확인\", function () {\r",
											"    var arrString =\"\";\r",
											"    var words1 =[];\r",
											"    var words2 =[];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"    \r",
											"    words1 = newline[0].split('|');\r",
											"    \r",
											"    if(pm.globals.get(\"mode\") == 1) console.log('3) 시리즈 줄거리 확인 : '+ words1[5]);\r",
											"    pm.expect(words1[5]).to.not.equal('');\r",
											"})\r",
											"\r",
											"pm.test(\"(4) 회차 표시 여부 확인\", function () {\r",
											"    var arrString =\"\";\r",
											"    var words1 =[];\r",
											"    var words2 =[];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"    \r",
											"    words1 = newline[0].split('|');\r",
											"    \r",
											"    if(pm.globals.get(\"mode\") == 1) console.log('4) 회차 표시 여부 확인 : '+ words1[8]);\r",
											"    pm.expect(words1[8]).to.equal('Y');\r",
											"})\r",
											"\r",
											"pm.test(\"(5) 현재 페이지 확인\", function () {\r",
											"    var arrString =\"\";\r",
											"    var words1 =[];\r",
											"    var words2 =[];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"    \r",
											"    words1 = newline[0].split('|');\r",
											"    \r",
											"    if(pm.globals.get(\"mode\") == 1) console.log('5) 현재 페이지 확인 : '+ words1[13]);\r",
											"    pm.expect(words1[13]).to.not.equal('');\r",
											"})\r",
											"\r",
											"pm.test(\"(6) 이미지 URL 확인\", function () {\r",
											"    var arrString =\"\";\r",
											"    var words1 =[];\r",
											"    var words2 =[];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"    \r",
											"    words1 = newline[0].split('|');\r",
											"\r",
											"    if(pm.globals.get(\"mode\") == 1) console.log('6) 이미지 URL 확인 : ', words1[14], words1[15], words1[16], words1[17]);\r",
											"    pm.expect(words1[14]).to.not.null;\r",
											"    pm.expect(words1[15]).to.not.null;\r",
											"    pm.expect(words1[16]).to.not.null;\r",
											"    pm.expect(words1[17]).to.not.null;\r",
											"})\r",
											"\r",
											"pm.test(\"(7) 예고편 확인\", function () {\r",
											"    var arrString =\"\";\r",
											"    var words1 =[];\r",
											"    var words2 =[];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    var loop_cnt = 0;\r",
											"    var lineCnt = 0;\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"    lineCnt = newline.length;\r",
											"\r",
											"    words1 = newline[1].split('|');\r",
											"    \r",
											"    for(loop_cnt = 0; loop_cnt < lineCnt; loop_cnt++) {\r",
											"        comp_line = loop_cnt + 1;\r",
											"        words2 = newline[comp_line].split('|');\r",
											"\r",
											"        if(words2[0] == 'M'){\r",
											"            next_flag = 0;\r",
											"            continue;\r",
											"        }\r",
											"        else if(words2[0] == 'P'){\r",
											"            next_flag = 1;\r",
											"            break;\r",
											"        }\r",
											"        else{\r",
											"            next_flag = 0;\r",
											"            break;\r",
											"        }\r",
											"    }\r",
											"    \r",
											"    if(next_flag){\r",
											"        if(pm.globals.get(\"mode\") == 1) console.log('7) 예고편 있음 : ', words2[0]);\r",
											"        //pm.expect(words2[0]).to.equal('P');\r",
											"        pm.expect(words2[1]).to.equal(words1[1]);\r",
											"    }\r",
											"    else{\r",
											"        if(pm.globals.get(\"mode\") == 1) console.log('7) 예고편 없음 : ', words2[0]);\r",
											"        pm.expect(words2[0]).to.oneOf(['', '\\n']);\r",
											"    }\r",
											"})\r",
											"\r",
											"pm.test(\"(8) 예고편 URL 확인\", function () {\r",
											"    var arrString =\"\";\r",
											"    var words1 =[];\r",
											"    var words2 =[];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"    \r",
											"    words1 = newline[0].split('|');\r",
											"    words2 = newline[comp_line].split('|');\r",
											"    \r",
											"    if(next_flag){\r",
											"        if(pm.globals.get(\"mode\") == 1) console.log('8) 예고편 URL 존재 : ', words1[18], words1[19], words1[20], words1[21], words1[22], words1[23]);\r",
											"        pm.expect(words1[18]).to.not.equal('');\r",
											"        pm.expect(words1[19]).to.not.equal('');\r",
											"        pm.expect(words1[20]).to.not.equal('');\r",
											"        pm.expect(words1[21]).to.not.equal('');\r",
											"        pm.expect(words1[22]).to.not.equal('');\r",
											"        pm.expect(words1[23]).to.not.equal('');\r",
											"    }\r",
											"    else{\r",
											"        if(pm.globals.get(\"mode\") == 1) console.log('8) 예고편 URL 존재하지 않음 : ', words1[18], words1[19], words1[20], words1[21], words1[22], words1[23]);\r",
											"        pm.expect(words1[18]).to.equal('');\r",
											"        pm.expect(words1[19]).to.equal('');\r",
											"        pm.expect(words1[20]).to.equal('');\r",
											"        pm.expect(words1[21]).to.equal('');\r",
											"        pm.expect(words1[22]).to.equal('');\r",
											"        pm.expect(words1[23]).to.equal('');\r",
											"    }\r",
											"    next_flag = 0;\r",
											"})\r",
											"\r",
											"pm.test(\"(9) 바디 첫번째 항목 확인\", function () {\r",
											"    var arrString =\"\";\r",
											"    var words1 =[];\r",
											"    var words2 =[];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"    \r",
											"    words1 = newline[1].split('|');\r",
											"    \r",
											"    if(pm.globals.get(\"mode\") == 1) console.log('9) 바디 첫번째 항목 확인 : '+ words1[0]);\r",
											"    pm.expect(words1[0]).to.equal('M');\r",
											"})\r",
											"\r",
											"pm.test(\"(10) 앨범ID 확인\", function () {\r",
											"    var arrString =\"\";\r",
											"    var words1 =[];\r",
											"    var words2 =[];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"    \r",
											"    words1 = newline[1].split('|');\r",
											"    \r",
											"    if(pm.globals.get(\"mode\") == 1) console.log('10) 앨범ID 확인 : '+ words1[1]);\r",
											"    pm.expect(words1[1]).to.not.equal('');\r",
											"})\r",
											"\r",
											"pm.test(\"(11) 시리즈 번호 확인\", function () {\r",
											"    var arrString =\"\";\r",
											"    var words1 =[];\r",
											"    var words2 =[];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"    \r",
											"    words1 = newline[1].split('|');\r",
											"    \r",
											"    if(pm.globals.get(\"mode\") == 1) console.log('11) 시리즈 번호 확인 : '+ words1[3]);\r",
											"    pm.expect(words1[3]).to.not.equal('');\r",
											"})\r",
											"\r",
											"pm.test(\"(12) 줄거리 확인\", function () {\r",
											"    var arrString =\"\";\r",
											"    var words1 =[];\r",
											"    var words2 =[];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"    \r",
											"    words1 = newline[1].split('|');\r",
											"    \r",
											"    if(pm.globals.get(\"mode\") == 1) console.log('12) 줄거리 확인 : '+ words1[27]);\r",
											"    pm.expect(words1[27]).to.not.equal('');\r",
											"})\r",
											"\r",
											"pm.test(\"(13) 이미지 정보 확인\", function () {\r",
											"    var arrString =\"\";\r",
											"    var words1 =[];\r",
											"    var words2 =[];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"    \r",
											"    words1 = newline[1].split('|');\r",
											"    \r",
											"    if(pm.globals.get(\"mode\") == 1) console.log('13) 이미지 정보 확인 : ', words1[44], words1[45]);\r",
											"    pm.expect(words1[44]).to.not.equal('');\r",
											"    pm.expect(words1[45]).to.not.equal('');\r",
											"})\r",
											"\r",
											"pm.test(\"(14) 슈퍼앨범 아이콘 정보 확인(수동)\", function () {\r",
											"    var arrString =\"\";\r",
											"    var words1 =[];\r",
											"    var words2 =[];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"    \r",
											"    words1 = newline[1].split('|');\r",
											"    \r",
											"    if(pm.globals.get(\"mode\") == 1) console.log('14) 슈퍼앨범 아이콘 정보 확인(수동) : ', words1[50], words1[51], words1[52]);\r",
											"/*    pm.expect(words1[50]).to.not.equal('');\r",
											"    pm.expect(words1[51]).to.not.equal('');\r",
											"    pm.expect(words1[52]).to.not.equal('');*/\r",
											"})\r",
											"\r",
											"pm.test(\"(15) 시즌 확인\", function () {\r",
											"    var arrString =\"\";\r",
											"    var words1 =[];\r",
											"    var words2 =[];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"    \r",
											"    words1 = newline[0].split('|');\r",
											"\r",
											"    if(pm.globals.get(\"mode\") == 1) console.log('15) 시즌 확인 : ', words1[10], words1[11]);\r",
											"    pm.expect(words1[10]).to.not.null;\r",
											"    pm.expect(words1[11]).to.not.null;\r",
											"})\r",
											"\r",
											"pm.test(\"(16) 포커스앨범 확인\", function () {\r",
											"    var arrString =\"\";\r",
											"    var words1 =[];\r",
											"    var words2 =[];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"    \r",
											"    words1 = newline[0].split('|');\r",
											"    words2 = newline[1].split('|');\r",
											"    \r",
											"    if(pm.globals.get(\"mode\") == 1) console.log('16) 포커스앨범 확인 : ', words1[12], words2[1]);\r",
											"    pm.expect(words1[12]).to.equal(words2[1]);\r",
											"})\r",
											"\r",
											"pm.test(\"(17) IPV6 확인\", function () {\r",
											"    var arrString =\"\";\r",
											"    var words1 =[];\r",
											"    var words2 =[];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"    \r",
											"    words1 = newline[0].split('|');\r",
											"\r",
											"    if(pm.globals.get(\"mode\") == 1) console.log('17) IPV6 확인 : ', words1[25], words1[26], words1[27]);\r",
											"    pm.expect(words1[25]).to.equal('');\r",
											"    pm.expect(words1[26]).to.equal('');\r",
											"    pm.expect(words1[27]).to.equal('');\r",
											"})\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Host",
										"value": "vodlookup.fleta.com",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://{{imcs}}/servlets/CommSvl?CMD=getNXSeriesList&PARAM=SA_ID=M14090300006|STB_MAC=9893.cc25.bc23|CAT_ID=B20T7|PAGE_NO=0|PAGE_CNT=5|RQS_NO=0|CAT_GB=I30|DEFIN_FLAG=1|NET_TYP=02|APP_TYPE=RUSA|STB_FLAG=N|IPV6_FLAG=Y|TEST_ID=|VARIATION_ID=|",
									"protocol": "http",
									"host": [
										"{{imcs}}"
									],
									"path": [
										"servlets",
										"CommSvl"
									],
									"query": [
										{
											"key": "CMD",
											"value": "getNXSeriesList"
										},
										{
											"key": "PARAM",
											"value": "SA_ID=M14090300006|STB_MAC=9893.cc25.bc23|CAT_ID=B20T7|PAGE_NO=0|PAGE_CNT=5|RQS_NO=0|CAT_GB=I30|DEFIN_FLAG=1|NET_TYP=02|APP_TYPE=RUSA|STB_FLAG=N|IPV6_FLAG=Y|TEST_ID=|VARIATION_ID=|"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "getNXSeriesList_TC13_일반 시리즈 카테고리 ID_최초진입 : 시청정보有_일반STB_AB=NULL_일반사용자_일반편성_기본 Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"if(pm.globals.get(\"mode\") == 1) console.log('==================== [ getNXSeriesList TC 13 ] ====================');\r",
											"\r",
											"var comp_line = 0;\r",
											"var next_flag = 0;\r",
											"\r",
											"pm.test(\"(1) 정상 응답 여부 확인\", function () {\r",
											"    var arrString =\"\";\r",
											"    var words1 =[];\r",
											"    var words2 =[];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"    \r",
											"    words1 = newline[0].split('|');\r",
											"    \r",
											"    if(pm.globals.get(\"mode\") == 1) console.log('1) 정상 응답 여부 확인 : '+ words1[0]);\r",
											"    pm.expect(words1[0]).to.equal('0');\r",
											"})\r",
											"    \r",
											"pm.test(\"(2) 전체 건수 확인(수동)\", function () {\r",
											"    var arrString =\"\";\r",
											"    var words1 =[];\r",
											"    var words2 =[];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    var loop_cnt = 0;\r",
											"    var lineCnt = 0;\r",
											"    var comp_line = 0;\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"    lineCnt = newline.length;\r",
											"    \r",
											"    words1 = newline[0].split('|');\r",
											"\r",
											"    for(loop_cnt = 0; loop_cnt < lineCnt; loop_cnt++) {\r",
											"        comp_line = loop_cnt + 1;\r",
											"        words2 = newline[comp_line].split('|');\r",
											"\r",
											"        if(words2[0] == 'M'){\r",
											"            continue;\r",
											"        }\r",
											"        else{\r",
											"            break;\r",
											"        }\r",
											"    }\r",
											"    \r",
											"    if(words1[2] == loop_cnt){\r",
											"        if(pm.globals.get(\"mode\") == 1) console.log('2) 전체 건수 확인 (수동) : '+ words1[2], loop_cnt);\r",
											"    }\r",
											"    else{\r",
											"        if(pm.globals.get(\"mode\") == 1) console.log('2) 전체 건수 확인 (수동) : '+ words1[2], loop_cnt);\r",
											"    }\r",
											"    //pm.expect(words1[2]).to.equal(loop_cnt.toString());\r",
											"})\r",
											"\r",
											"pm.test(\"(3) 시리즈 줄거리 확인\", function () {\r",
											"    var arrString =\"\";\r",
											"    var words1 =[];\r",
											"    var words2 =[];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"    \r",
											"    words1 = newline[0].split('|');\r",
											"    \r",
											"    if(pm.globals.get(\"mode\") == 1) console.log('3) 시리즈 줄거리 확인 : '+ words1[5]);\r",
											"    pm.expect(words1[5]).to.not.equal('');\r",
											"})\r",
											"\r",
											"pm.test(\"(4) 회차 표시 여부 확인\", function () {\r",
											"    var arrString =\"\";\r",
											"    var words1 =[];\r",
											"    var words2 =[];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"    \r",
											"    words1 = newline[0].split('|');\r",
											"    \r",
											"    if(pm.globals.get(\"mode\") == 1) console.log('4) 회차 표시 여부 확인 : '+ words1[8]);\r",
											"    pm.expect(words1[8]).to.equal('Y');\r",
											"})\r",
											"\r",
											"pm.test(\"(5) 현재 페이지 확인\", function () {\r",
											"    var arrString =\"\";\r",
											"    var words1 =[];\r",
											"    var words2 =[];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"    \r",
											"    words1 = newline[0].split('|');\r",
											"    \r",
											"    if(pm.globals.get(\"mode\") == 1) console.log('5) 현재 페이지 확인 : '+ words1[13]);\r",
											"    pm.expect(words1[13]).to.not.equal('');\r",
											"})\r",
											"\r",
											"pm.test(\"(6) 이미지 URL 확인\", function () {\r",
											"    var arrString =\"\";\r",
											"    var words1 =[];\r",
											"    var words2 =[];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"    \r",
											"    words1 = newline[0].split('|');\r",
											"\r",
											"    if(pm.globals.get(\"mode\") == 1) console.log('6) 이미지 URL 확인 : ', words1[14], words1[15], words1[16], words1[17]);\r",
											"    pm.expect(words1[14]).to.not.null;\r",
											"    pm.expect(words1[15]).to.not.null;\r",
											"    pm.expect(words1[16]).to.not.null;\r",
											"    pm.expect(words1[17]).to.not.null;\r",
											"})\r",
											"\r",
											"pm.test(\"(7) 예고편 확인\", function () {\r",
											"    var arrString =\"\";\r",
											"    var words1 =[];\r",
											"    var words2 =[];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    var loop_cnt = 0;\r",
											"    var lineCnt = 0;\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"    lineCnt = newline.length;\r",
											"\r",
											"    words1 = newline[1].split('|');\r",
											"    \r",
											"    for(loop_cnt = 0; loop_cnt < lineCnt; loop_cnt++) {\r",
											"        comp_line = loop_cnt + 1;\r",
											"        words2 = newline[comp_line].split('|');\r",
											"\r",
											"        if(words2[0] == 'M'){\r",
											"            next_flag = 0;\r",
											"            continue;\r",
											"        }\r",
											"        else if(words2[0] == 'P'){\r",
											"            next_flag = 1;\r",
											"            break;\r",
											"        }\r",
											"        else{\r",
											"            next_flag = 0;\r",
											"            break;\r",
											"        }\r",
											"    }\r",
											"    \r",
											"    if(next_flag){\r",
											"        if(pm.globals.get(\"mode\") == 1) console.log('7) 예고편 있음 : ', words2[1], words1[1]);\r",
											"        pm.expect(words2[1]).to.not.equal('');\r",
											"    }\r",
											"    else{\r",
											"        if(pm.globals.get(\"mode\") == 1) console.log('7) 예고편 없음 : ', words2[0]);\r",
											"        pm.expect(words2[0]).to.oneOf(['', '\\n']);\r",
											"    }\r",
											"})\r",
											"\r",
											"pm.test(\"(8) 예고편 URL 확인\", function () {\r",
											"    var arrString =\"\";\r",
											"    var words1 =[];\r",
											"    var words2 =[];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"    \r",
											"    words1 = newline[0].split('|');\r",
											"    words2 = newline[comp_line].split('|');\r",
											"    \r",
											"    if(next_flag){\r",
											"        if(pm.globals.get(\"mode\") == 1) console.log('8) 예고편 URL 존재 : ', words1[18], words1[19], words1[20], words1[21], words1[22], words1[23]);\r",
											"        pm.expect(words1[18]).to.not.equal('');\r",
											"        pm.expect(words1[19]).to.not.equal('');\r",
											"        pm.expect(words1[20]).to.not.equal('');\r",
											"        pm.expect(words1[21]).to.not.equal('');\r",
											"        pm.expect(words1[22]).to.not.equal('');\r",
											"        pm.expect(words1[23]).to.not.equal('');\r",
											"    }\r",
											"    else{\r",
											"        if(pm.globals.get(\"mode\") == 1) console.log('8) 예고편 URL 존재하지 않음 : ', words1[18], words1[19], words1[20], words1[21], words1[22], words1[23]);\r",
											"        pm.expect(words1[18]).to.equal('');\r",
											"        pm.expect(words1[19]).to.equal('');\r",
											"        pm.expect(words1[20]).to.equal('');\r",
											"        pm.expect(words1[21]).to.equal('');\r",
											"        pm.expect(words1[22]).to.equal('');\r",
											"        pm.expect(words1[23]).to.equal('');\r",
											"    }\r",
											"    next_flag = 0;\r",
											"})\r",
											"\r",
											"pm.test(\"(9) 바디 첫번째 항목 확인\", function () {\r",
											"    var arrString =\"\";\r",
											"    var words1 =[];\r",
											"    var words2 =[];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"    \r",
											"    words1 = newline[1].split('|');\r",
											"    \r",
											"    if(pm.globals.get(\"mode\") == 1) console.log('9) 바디 첫번째 항목 확인 : '+ words1[0]);\r",
											"    pm.expect(words1[0]).to.equal('M');\r",
											"})\r",
											"\r",
											"pm.test(\"(10) 앨범ID 확인\", function () {\r",
											"    var arrString =\"\";\r",
											"    var words1 =[];\r",
											"    var words2 =[];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"    \r",
											"    words1 = newline[1].split('|');\r",
											"    \r",
											"    if(pm.globals.get(\"mode\") == 1) console.log('10) 앨범ID 확인 : '+ words1[1]);\r",
											"    pm.expect(words1[1]).to.not.equal('');\r",
											"})\r",
											"\r",
											"pm.test(\"(11) 시리즈 번호 확인\", function () {\r",
											"    var arrString =\"\";\r",
											"    var words1 =[];\r",
											"    var words2 =[];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"    \r",
											"    words1 = newline[1].split('|');\r",
											"    \r",
											"    if(pm.globals.get(\"mode\") == 1) console.log('11) 시리즈 번호 확인 : '+ words1[3]);\r",
											"    pm.expect(words1[3]).to.not.equal('');\r",
											"})\r",
											"\r",
											"pm.test(\"(12) 줄거리 확인\", function () {\r",
											"    var arrString =\"\";\r",
											"    var words1 =[];\r",
											"    var words2 =[];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"    \r",
											"    words1 = newline[1].split('|');\r",
											"    \r",
											"    if(pm.globals.get(\"mode\") == 1) console.log('12) 줄거리 확인 : '+ words1[27]);\r",
											"    pm.expect(words1[27]).to.not.equal('');\r",
											"})\r",
											"\r",
											"pm.test(\"(13) 이미지 정보 확인\", function () {\r",
											"    var arrString =\"\";\r",
											"    var words1 =[];\r",
											"    var words2 =[];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"    \r",
											"    words1 = newline[1].split('|');\r",
											"    \r",
											"    if(pm.globals.get(\"mode\") == 1) console.log('13) 이미지 정보 확인 : ', words1[44], words1[45]);\r",
											"    pm.expect(words1[44]).to.not.equal('');\r",
											"    pm.expect(words1[45]).to.not.equal('');\r",
											"})\r",
											"\r",
											"pm.test(\"(14) 슈퍼앨범 아이콘 정보 확인(수동)\", function () {\r",
											"    var arrString =\"\";\r",
											"    var words1 =[];\r",
											"    var words2 =[];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"    \r",
											"    words1 = newline[1].split('|');\r",
											"    \r",
											"    if(pm.globals.get(\"mode\") == 1) console.log('14) 슈퍼앨범 아이콘 정보 확인(수동) : ', words1[50], words1[51], words1[52]);\r",
											"/*    pm.expect(words1[50]).to.not.equal('');\r",
											"    pm.expect(words1[51]).to.not.equal('');\r",
											"    pm.expect(words1[52]).to.not.equal('');*/\r",
											"})\r",
											"\r",
											"pm.test(\"(15) 포커스앨범 확인\", function () {\r",
											"    var arrString =\"\";\r",
											"    var words1 =[];\r",
											"    var words2 =[];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    var loop_cnt = 0;\r",
											"    var lineCnt = 0;\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"    lineCnt = newline.length;\r",
											"\r",
											"    words1 = newline[0].split('|');\r",
											"    \r",
											"    for(loop_cnt = 0; loop_cnt < lineCnt; loop_cnt++) {\r",
											"        comp_line = loop_cnt + 1;\r",
											"        words2 = newline[comp_line].split('|');\r",
											"\r",
											"        if(words1[12] == words2[1]){\r",
											"            break;\r",
											"        }\r",
											"    }\r",
											"    \r",
											"    if(pm.globals.get(\"mode\") == 1) console.log('15) 포커스앨범 확인 : ', words1[12], words2[1], comp_line);\r",
											"    pm.expect(words1[12]).to.equal(words2[1]);\r",
											"\r",
											"})\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Host",
										"value": "vodlookup.fleta.com",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://{{imcs}}/servlets/CommSvl?CMD=getNXSeriesList&PARAM=SA_ID=M14090300006|STB_MAC=9893.cc25.bc23|CAT_ID=B20Q3|PAGE_NO=0|PAGE_CNT=5|RQS_NO=0|CAT_GB=I30|DEFIN_FLAG=1|NET_TYP=02|APP_TYPE=RUSA|STB_FLAG=N|IPV6_FLAG=Y|TEST_ID=|VARIATION_ID=|",
									"protocol": "http",
									"host": [
										"{{imcs}}"
									],
									"path": [
										"servlets",
										"CommSvl"
									],
									"query": [
										{
											"key": "CMD",
											"value": "getNXSeriesList"
										},
										{
											"key": "PARAM",
											"value": "SA_ID=M14090300006|STB_MAC=9893.cc25.bc23|CAT_ID=B20Q3|PAGE_NO=0|PAGE_CNT=5|RQS_NO=0|CAT_GB=I30|DEFIN_FLAG=1|NET_TYP=02|APP_TYPE=RUSA|STB_FLAG=N|IPV6_FLAG=Y|TEST_ID=|VARIATION_ID=|"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "getNXSeriesList_TC14_판매 종료된 패키지 상품 ID_최초진입 : 시청정보無_일반STB_AB=NULL_일반사용자_일반편성_기본 Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"if(pm.globals.get(\"mode\") == 1) console.log('==================== [ getNXSeriesList TC 14 ] ====================');\r",
											"\r",
											"var comp_line = 0;\r",
											"var next_flag = 0;\r",
											"\r",
											"pm.test(\"(1) 정상 응답 여부 확인\", function () {\r",
											"    var arrString =\"\";\r",
											"    var words1 =[];\r",
											"    var words2 =[];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"    \r",
											"    words1 = newline[0].split('|');\r",
											"    \r",
											"    if(pm.globals.get(\"mode\") == 1) console.log('1) 정상 응답 여부 확인 : '+ words1[0]);\r",
											"    pm.expect(words1[0]).to.equal('0');\r",
											"})\r",
											"    \r",
											"pm.test(\"(2) 전체 건수 확인(수동)\", function () {\r",
											"    var arrString =\"\";\r",
											"    var words1 =[];\r",
											"    var words2 =[];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    var loop_cnt = 0;\r",
											"    var lineCnt = 0;\r",
											"    var comp_line = 0;\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"    lineCnt = newline.length;\r",
											"    \r",
											"    words1 = newline[0].split('|');\r",
											"\r",
											"    for(loop_cnt = 0; loop_cnt < lineCnt; loop_cnt++) {\r",
											"        comp_line = loop_cnt + 1;\r",
											"        words2 = newline[comp_line].split('|');\r",
											"\r",
											"        if(words2[0] == 'M'){\r",
											"            continue;\r",
											"        }\r",
											"        else{\r",
											"            break;\r",
											"        }\r",
											"    }\r",
											"    \r",
											"    if(words1[2] == loop_cnt){\r",
											"        if(pm.globals.get(\"mode\") == 1) console.log('2) 전체 건수 확인 (수동) : '+ words1[2], loop_cnt);\r",
											"    }\r",
											"    else{\r",
											"        if(pm.globals.get(\"mode\") == 1) console.log('2) 전체 건수 확인 (수동) : '+ words1[2], loop_cnt);\r",
											"    }\r",
											"    //pm.expect(words1[2]).to.equal(loop_cnt.toString());\r",
											"})\r",
											"\r",
											"pm.test(\"(3) 시리즈 줄거리 확인\", function () {\r",
											"    var arrString =\"\";\r",
											"    var words1 =[];\r",
											"    var words2 =[];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"    \r",
											"    words1 = newline[0].split('|');\r",
											"    \r",
											"    if(pm.globals.get(\"mode\") == 1) console.log('3) 시리즈 줄거리 확인 : '+ words1[5]);\r",
											"    pm.expect(words1[5]).to.not.equal('');\r",
											"})\r",
											"\r",
											"pm.test(\"(4) 회차 표시 여부 확인\", function () {\r",
											"    var arrString =\"\";\r",
											"    var words1 =[];\r",
											"    var words2 =[];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"    \r",
											"    words1 = newline[0].split('|');\r",
											"    \r",
											"    if(pm.globals.get(\"mode\") == 1) console.log('4) 회차 표시 여부 확인 : '+ words1[8]);\r",
											"    pm.expect(words1[8]).to.equal('Y');\r",
											"})\r",
											"\r",
											"pm.test(\"(5) 현재 페이지 확인\", function () {\r",
											"    var arrString =\"\";\r",
											"    var words1 =[];\r",
											"    var words2 =[];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"    \r",
											"    words1 = newline[0].split('|');\r",
											"    \r",
											"    if(pm.globals.get(\"mode\") == 1) console.log('5) 현재 페이지 확인 : '+ words1[13]);\r",
											"    pm.expect(words1[13]).to.not.equal('');\r",
											"})\r",
											"\r",
											"pm.test(\"(6) 이미지 URL 확인\", function () {\r",
											"    var arrString =\"\";\r",
											"    var words1 =[];\r",
											"    var words2 =[];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"    \r",
											"    words1 = newline[0].split('|');\r",
											"\r",
											"    if(pm.globals.get(\"mode\") == 1) console.log('6) 이미지 URL 확인 : ', words1[14], words1[15], words1[16], words1[17]);\r",
											"    pm.expect(words1[14]).to.not.null;\r",
											"    pm.expect(words1[15]).to.not.null;\r",
											"    pm.expect(words1[16]).to.not.null;\r",
											"    pm.expect(words1[17]).to.not.null;\r",
											"})\r",
											"\r",
											"pm.test(\"(7) 예고편 확인\", function () {\r",
											"    var arrString =\"\";\r",
											"    var words1 =[];\r",
											"    var words2 =[];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    var loop_cnt = 0;\r",
											"    var lineCnt = 0;\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"    lineCnt = newline.length;\r",
											"\r",
											"    words1 = newline[1].split('|');\r",
											"    \r",
											"    for(loop_cnt = 0; loop_cnt < lineCnt; loop_cnt++) {\r",
											"        comp_line = loop_cnt + 1;\r",
											"        words2 = newline[comp_line].split('|');\r",
											"\r",
											"        if(words2[0] == 'M'){\r",
											"            next_flag = 0;\r",
											"            continue;\r",
											"        }\r",
											"        else if(words2[0] == 'P'){\r",
											"            next_flag = 1;\r",
											"            break;\r",
											"        }\r",
											"        else{\r",
											"            next_flag = 0;\r",
											"            break;\r",
											"        }\r",
											"    }\r",
											"    \r",
											"    if(next_flag){\r",
											"        if(pm.globals.get(\"mode\") == 1) console.log('7) 예고편 있음 : ', words2[1], words1[1]);\r",
											"        pm.expect(words2[1]).to.not.equal('');\r",
											"    }\r",
											"    else{\r",
											"        if(pm.globals.get(\"mode\") == 1) console.log('7) 예고편 없음 : ', words2[0]);\r",
											"        pm.expect(words2[0]).to.oneOf(['', '\\n']);\r",
											"    }\r",
											"})\r",
											"\r",
											"pm.test(\"(8) 예고편 URL 확인\", function () {\r",
											"    var arrString =\"\";\r",
											"    var words1 =[];\r",
											"    var words2 =[];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"    \r",
											"    words1 = newline[0].split('|');\r",
											"    words2 = newline[comp_line].split('|');\r",
											"    \r",
											"    if(next_flag){\r",
											"        if(pm.globals.get(\"mode\") == 1) console.log('8) 예고편 URL 존재 : ', words1[18], words1[19], words1[20], words1[21], words1[22], words1[23]);\r",
											"        pm.expect(words1[18]).to.not.equal('');\r",
											"        pm.expect(words1[19]).to.not.equal('');\r",
											"        pm.expect(words1[20]).to.not.equal('');\r",
											"        pm.expect(words1[21]).to.not.equal('');\r",
											"        pm.expect(words1[22]).to.not.equal('');\r",
											"        pm.expect(words1[23]).to.not.equal('');\r",
											"    }\r",
											"    else{\r",
											"        if(pm.globals.get(\"mode\") == 1) console.log('8) 예고편 URL 존재하지 않음 : ', words1[18], words1[19], words1[20], words1[21], words1[22], words1[23]);\r",
											"        pm.expect(words1[18]).to.equal('');\r",
											"        pm.expect(words1[19]).to.equal('');\r",
											"        pm.expect(words1[20]).to.equal('');\r",
											"        pm.expect(words1[21]).to.equal('');\r",
											"        pm.expect(words1[22]).to.equal('');\r",
											"        pm.expect(words1[23]).to.equal('');\r",
											"    }\r",
											"    next_flag = 0;\r",
											"})\r",
											"\r",
											"pm.test(\"(9) 바디 첫번째 항목 확인\", function () {\r",
											"    var arrString =\"\";\r",
											"    var words1 =[];\r",
											"    var words2 =[];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"    \r",
											"    words1 = newline[1].split('|');\r",
											"    \r",
											"    if(pm.globals.get(\"mode\") == 1) console.log('9) 바디 첫번째 항목 확인 : '+ words1[0]);\r",
											"    pm.expect(words1[0]).to.equal('M');\r",
											"})\r",
											"\r",
											"pm.test(\"(10) 앨범ID 확인\", function () {\r",
											"    var arrString =\"\";\r",
											"    var words1 =[];\r",
											"    var words2 =[];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"    \r",
											"    words1 = newline[1].split('|');\r",
											"    \r",
											"    if(pm.globals.get(\"mode\") == 1) console.log('10) 앨범ID 확인 : '+ words1[1]);\r",
											"    pm.expect(words1[1]).to.not.equal('');\r",
											"})\r",
											"\r",
											"pm.test(\"(11) 시리즈 번호 확인\", function () {\r",
											"    var arrString =\"\";\r",
											"    var words1 =[];\r",
											"    var words2 =[];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"    \r",
											"    words1 = newline[1].split('|');\r",
											"    \r",
											"    if(pm.globals.get(\"mode\") == 1) console.log('11) 시리즈 번호 확인 : '+ words1[3]);\r",
											"    pm.expect(words1[3]).to.not.equal('');\r",
											"})\r",
											"\r",
											"pm.test(\"(12) 줄거리 확인\", function () {\r",
											"    var arrString =\"\";\r",
											"    var words1 =[];\r",
											"    var words2 =[];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"    \r",
											"    words1 = newline[1].split('|');\r",
											"    \r",
											"    if(pm.globals.get(\"mode\") == 1) console.log('12) 줄거리 확인 : '+ words1[27]);\r",
											"    pm.expect(words1[27]).to.not.equal('');\r",
											"})\r",
											"\r",
											"pm.test(\"(13) 이미지 정보 확인\", function () {\r",
											"    var arrString =\"\";\r",
											"    var words1 =[];\r",
											"    var words2 =[];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"    \r",
											"    words1 = newline[1].split('|');\r",
											"    \r",
											"    if(pm.globals.get(\"mode\") == 1) console.log('13) 이미지 정보 확인 : ', words1[44], words1[45]);\r",
											"    pm.expect(words1[44]).to.not.equal('');\r",
											"    pm.expect(words1[45]).to.not.equal('');\r",
											"})\r",
											"\r",
											"pm.test(\"(14) 슈퍼앨범 아이콘 정보 확인(수동)\", function () {\r",
											"    var arrString =\"\";\r",
											"    var words1 =[];\r",
											"    var words2 =[];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"    \r",
											"    words1 = newline[1].split('|');\r",
											"    \r",
											"    if(pm.globals.get(\"mode\") == 1) console.log('14) 슈퍼앨범 아이콘 정보 확인(수동) : ', words1[50], words1[51], words1[52]);\r",
											"/*    pm.expect(words1[50]).to.not.equal('');\r",
											"    pm.expect(words1[51]).to.not.equal('');\r",
											"    pm.expect(words1[52]).to.not.equal('');*/\r",
											"})\r",
											"\r",
											"pm.test(\"(15) 포커스앨범 확인\", function () {\r",
											"    var arrString =\"\";\r",
											"    var words1 =[];\r",
											"    var words2 =[];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"    \r",
											"    words1 = newline[0].split('|');\r",
											"    words2 = newline[comp_line-1].split('|');\r",
											"    \r",
											"    if(pm.globals.get(\"mode\") == 1) console.log('15) 포커스앨범 확인 : ', words1[12], words2[1]);\r",
											"    pm.expect(words1[12]).to.equal(words2[1]);\r",
											"})\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Host",
										"value": "vodlookup.fleta.com",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://{{imcs}}/servlets/CommSvl?CMD=getNXSeriesList&PARAM=SA_ID=M14090300006|STB_MAC=9893.cc25.bc23|CAT_ID=F200U|PAGE_NO=0|PAGE_CNT=5|RQS_NO=0|CAT_GB=I30|DEFIN_FLAG=1|NET_TYP=02|APP_TYPE=RUSA|STB_FLAG=N|IPV6_FLAG=Y|TEST_ID=|VARIATION_ID=|",
									"protocol": "http",
									"host": [
										"{{imcs}}"
									],
									"path": [
										"servlets",
										"CommSvl"
									],
									"query": [
										{
											"key": "CMD",
											"value": "getNXSeriesList"
										},
										{
											"key": "PARAM",
											"value": "SA_ID=M14090300006|STB_MAC=9893.cc25.bc23|CAT_ID=F200U|PAGE_NO=0|PAGE_CNT=5|RQS_NO=0|CAT_GB=I30|DEFIN_FLAG=1|NET_TYP=02|APP_TYPE=RUSA|STB_FLAG=N|IPV6_FLAG=Y|TEST_ID=|VARIATION_ID=|"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "getNXSeriesList_TC23_일반 시리즈 카테고리 ID_최초진입 : 시청정보無_일반STB_AB=NULL_검수사용자_검수카테고리_기본 Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"if(pm.globals.get(\"mode\") == 1) console.log('==================== [ getNXSeriesList TC 23 ] ====================');\r",
											"\r",
											"var comp_line = 0;\r",
											"var next_flag = 0;\r",
											"\r",
											"pm.test(\"(1) 정상 응답 여부 확인\", function () {\r",
											"    var arrString =\"\";\r",
											"    var words1 =[];\r",
											"    var words2 =[];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"    \r",
											"    words1 = newline[0].split('|');\r",
											"    \r",
											"    if(pm.globals.get(\"mode\") == 1) console.log('1) 정상 응답 여부 확인 : '+ words1[0]);\r",
											"    pm.expect(words1[0]).to.equal('0');\r",
											"})\r",
											"    \r",
											"pm.test(\"(2) 전체 건수 확인(수동)\", function () {\r",
											"    var arrString =\"\";\r",
											"    var words1 =[];\r",
											"    var words2 =[];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    var loop_cnt = 0;\r",
											"    var lineCnt = 0;\r",
											"    var comp_line = 0;\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"    lineCnt = newline.length;\r",
											"    \r",
											"    words1 = newline[0].split('|');\r",
											"\r",
											"    for(loop_cnt = 0; loop_cnt < lineCnt; loop_cnt++) {\r",
											"        comp_line = loop_cnt + 1;\r",
											"        words2 = newline[comp_line].split('|');\r",
											"\r",
											"        if(words2[0] == 'M'){\r",
											"            continue;\r",
											"        }\r",
											"        else{\r",
											"            break;\r",
											"        }\r",
											"    }\r",
											"    \r",
											"    if(words1[2] == loop_cnt){\r",
											"        if(pm.globals.get(\"mode\") == 1) console.log('2) 전체 건수 확인 (수동) : '+ words1[2], loop_cnt);\r",
											"    }\r",
											"    else{\r",
											"        if(pm.globals.get(\"mode\") == 1) console.log('2) 전체 건수 확인 (수동) : '+ words1[2], loop_cnt);\r",
											"    }\r",
											"    //pm.expect(words1[2]).to.equal(loop_cnt.toString());\r",
											"})\r",
											"\r",
											"pm.test(\"(3) 시리즈 줄거리 확인\", function () {\r",
											"    var arrString =\"\";\r",
											"    var words1 =[];\r",
											"    var words2 =[];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"    \r",
											"    words1 = newline[0].split('|');\r",
											"    \r",
											"    if(pm.globals.get(\"mode\") == 1) console.log('3) 시리즈 줄거리 확인 : '+ words1[5]);\r",
											"    pm.expect(words1[5]).to.not.equal('');\r",
											"})\r",
											"\r",
											"pm.test(\"(4) 회차 표시 여부 확인\", function () {\r",
											"    var arrString =\"\";\r",
											"    var words1 =[];\r",
											"    var words2 =[];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"    \r",
											"    words1 = newline[0].split('|');\r",
											"    \r",
											"    if(pm.globals.get(\"mode\") == 1) console.log('4) 회차 표시 여부 확인 : '+ words1[8]);\r",
											"    pm.expect(words1[8]).to.equal('Y');\r",
											"})\r",
											"\r",
											"pm.test(\"(5) 현재 페이지 확인\", function () {\r",
											"    var arrString =\"\";\r",
											"    var words1 =[];\r",
											"    var words2 =[];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"    \r",
											"    words1 = newline[0].split('|');\r",
											"    \r",
											"    if(pm.globals.get(\"mode\") == 1) console.log('5) 현재 페이지 확인 : '+ words1[13]);\r",
											"    pm.expect(words1[13]).to.not.equal('');\r",
											"})\r",
											"\r",
											"pm.test(\"(6) 이미지 URL 확인\", function () {\r",
											"    var arrString =\"\";\r",
											"    var words1 =[];\r",
											"    var words2 =[];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"    \r",
											"    words1 = newline[0].split('|');\r",
											"\r",
											"    if(pm.globals.get(\"mode\") == 1) console.log('6) 이미지 URL 확인 : ', words1[14], words1[15], words1[16], words1[17]);\r",
											"    pm.expect(words1[14]).to.not.null;\r",
											"    pm.expect(words1[15]).to.not.null;\r",
											"    pm.expect(words1[16]).to.not.null;\r",
											"    pm.expect(words1[17]).to.not.null;\r",
											"})\r",
											"\r",
											"pm.test(\"(7) 예고편 확인\", function () {\r",
											"    var arrString =\"\";\r",
											"    var words1 =[];\r",
											"    var words2 =[];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    var loop_cnt = 0;\r",
											"    var lineCnt = 0;\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"    lineCnt = newline.length;\r",
											"\r",
											"    words1 = newline[1].split('|');\r",
											"    \r",
											"    for(loop_cnt = 0; loop_cnt < lineCnt; loop_cnt++) {\r",
											"        comp_line = loop_cnt + 1;\r",
											"        words2 = newline[comp_line].split('|');\r",
											"\r",
											"        if(words2[0] == 'M'){\r",
											"            next_flag = 0;\r",
											"            continue;\r",
											"        }\r",
											"        else if(words2[0] == 'P'){\r",
											"            next_flag = 1;\r",
											"            break;\r",
											"        }\r",
											"        else{\r",
											"            next_flag = 0;\r",
											"            break;\r",
											"        }\r",
											"    }\r",
											"    \r",
											"    if(next_flag){\r",
											"        if(pm.globals.get(\"mode\") == 1) console.log('7) 예고편 있음 : ', words2[1], words1[1]);\r",
											"        //pm.expect(words2[1]).to.equal(words1[1]);\r",
											"    }\r",
											"    else{\r",
											"        if(pm.globals.get(\"mode\") == 1) console.log('7) 예고편 없음 : ', words2[0]);\r",
											"        pm.expect(words2[0]).to.oneOf(['', '\\n']);\r",
											"    }\r",
											"})\r",
											"\r",
											"pm.test(\"(8) 예고편 URL 확인\", function () {\r",
											"    var arrString =\"\";\r",
											"    var words1 =[];\r",
											"    var words2 =[];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"    \r",
											"    words1 = newline[0].split('|');\r",
											"    words2 = newline[comp_line].split('|');\r",
											"    \r",
											"    if(next_flag){\r",
											"        if(pm.globals.get(\"mode\") == 1) console.log('8) 예고편 URL 존재 : ', words1[18], words1[19], words1[20], words1[21], words1[22], words1[23]);\r",
											"        pm.expect(words1[18]).to.not.equal('');\r",
											"        pm.expect(words1[19]).to.not.equal('');\r",
											"        pm.expect(words1[20]).to.not.equal('');\r",
											"        pm.expect(words1[21]).to.not.equal('');\r",
											"        pm.expect(words1[22]).to.not.equal('');\r",
											"        pm.expect(words1[23]).to.not.equal('');\r",
											"    }\r",
											"    else{\r",
											"        if(pm.globals.get(\"mode\") == 1) console.log('8) 예고편 URL 존재하지 않음 : ', words1[18], words1[19], words1[20], words1[21], words1[22], words1[23]);\r",
											"        pm.expect(words1[18]).to.equal('');\r",
											"        pm.expect(words1[19]).to.equal('');\r",
											"        pm.expect(words1[20]).to.equal('');\r",
											"        pm.expect(words1[21]).to.equal('');\r",
											"        pm.expect(words1[22]).to.equal('');\r",
											"        pm.expect(words1[23]).to.equal('');\r",
											"    }\r",
											"    next_flag = 0;\r",
											"})\r",
											"\r",
											"pm.test(\"(9) 바디 첫번째 항목 확인\", function () {\r",
											"    var arrString =\"\";\r",
											"    var words1 =[];\r",
											"    var words2 =[];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"    \r",
											"    words1 = newline[1].split('|');\r",
											"    \r",
											"    if(pm.globals.get(\"mode\") == 1) console.log('9) 바디 첫번째 항목 확인 : '+ words1[0]);\r",
											"    pm.expect(words1[0]).to.equal('M');\r",
											"})\r",
											"\r",
											"pm.test(\"(10) 앨범ID 확인\", function () {\r",
											"    var arrString =\"\";\r",
											"    var words1 =[];\r",
											"    var words2 =[];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"    \r",
											"    words1 = newline[1].split('|');\r",
											"    \r",
											"    if(pm.globals.get(\"mode\") == 1) console.log('10) 앨범ID 확인 : '+ words1[1]);\r",
											"    pm.expect(words1[1]).to.not.equal('');\r",
											"})\r",
											"\r",
											"pm.test(\"(11) 시리즈 번호 확인\", function () {\r",
											"    var arrString =\"\";\r",
											"    var words1 =[];\r",
											"    var words2 =[];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"    \r",
											"    words1 = newline[1].split('|');\r",
											"    \r",
											"    if(pm.globals.get(\"mode\") == 1) console.log('11) 시리즈 번호 확인 : '+ words1[3]);\r",
											"    pm.expect(words1[3]).to.not.equal('');\r",
											"})\r",
											"\r",
											"pm.test(\"(12) 줄거리 확인\", function () {\r",
											"    var arrString =\"\";\r",
											"    var words1 =[];\r",
											"    var words2 =[];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"    \r",
											"    words1 = newline[1].split('|');\r",
											"    \r",
											"    if(pm.globals.get(\"mode\") == 1) console.log('12) 줄거리 확인 : '+ words1[27]);\r",
											"    pm.expect(words1[27]).to.not.equal('');\r",
											"})\r",
											"\r",
											"pm.test(\"(13) 이미지 정보 확인\", function () {\r",
											"    var arrString =\"\";\r",
											"    var words1 =[];\r",
											"    var words2 =[];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"    \r",
											"    words1 = newline[1].split('|');\r",
											"    \r",
											"    if(pm.globals.get(\"mode\") == 1) console.log('13) 이미지 정보 확인 : ', words1[44], words1[45]);\r",
											"    pm.expect(words1[44]).to.not.equal('');\r",
											"    pm.expect(words1[45]).to.not.equal('');\r",
											"})\r",
											"\r",
											"pm.test(\"(14) 슈퍼앨범 아이콘 정보 확인(수동)\", function () {\r",
											"    var arrString =\"\";\r",
											"    var words1 =[];\r",
											"    var words2 =[];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"    \r",
											"    words1 = newline[1].split('|');\r",
											"    \r",
											"    if(pm.globals.get(\"mode\") == 1) console.log('14) 슈퍼앨범 아이콘 정보 확인(수동) : ', words1[50], words1[51], words1[52]);\r",
											"/*    pm.expect(words1[50]).to.not.equal('');\r",
											"    pm.expect(words1[51]).to.not.equal('');\r",
											"    pm.expect(words1[52]).to.not.equal('');*/\r",
											"})\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Host",
										"value": "vodlookup.fleta.com",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://{{imcs}}/servlets/CommSvl?CMD=getNXSeriesList&PARAM=SA_ID=M14090300009|STB_MAC=9893.cc25.bc22|CAT_ID=B90LW|PAGE_NO=0|PAGE_CNT=5|RQS_NO=0|CAT_GB=I30|DEFIN_FLAG=1|NET_TYP=02|APP_TYPE=RUSA|STB_FLAG=N|IPV6_FLAG=Y|TEST_ID=|VARIATION_ID=|",
									"protocol": "http",
									"host": [
										"{{imcs}}"
									],
									"path": [
										"servlets",
										"CommSvl"
									],
									"query": [
										{
											"key": "CMD",
											"value": "getNXSeriesList"
										},
										{
											"key": "PARAM",
											"value": "SA_ID=M14090300009|STB_MAC=9893.cc25.bc22|CAT_ID=B90LW|PAGE_NO=0|PAGE_CNT=5|RQS_NO=0|CAT_GB=I30|DEFIN_FLAG=1|NET_TYP=02|APP_TYPE=RUSA|STB_FLAG=N|IPV6_FLAG=Y|TEST_ID=|VARIATION_ID=|"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "getNXSeriesList_TC52_일반 시리즈 카테고리 ID (중국드라마)_최초진입 : 시청정보無_종영_일반STB_AB=NULL_일반사용자_일반편성_기본 Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"if(pm.globals.get(\"mode\") == 1) console.log('==================== [ getNXSeriesList TC 52 ] ====================');\r",
											"\r",
											"var comp_line = 0;\r",
											"var next_flag = 0;\r",
											"\r",
											"pm.test(\"(1) 정상 응답 여부 확인\", function () {\r",
											"    var arrString =\"\";\r",
											"    var words1 =[];\r",
											"    var words2 =[];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"    \r",
											"    words1 = newline[0].split('|');\r",
											"    \r",
											"    if(pm.globals.get(\"mode\") == 1) console.log('1) 정상 응답 여부 확인 : '+ words1[0]);\r",
											"    pm.expect(words1[0]).to.equal('0');\r",
											"})\r",
											"    \r",
											"pm.test(\"(2) 전체 건수 확인(수동)\", function () {\r",
											"    var arrString =\"\";\r",
											"    var words1 =[];\r",
											"    var words2 =[];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    var loop_cnt = 0;\r",
											"    var lineCnt = 0;\r",
											"    var comp_line = 0;\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"    lineCnt = newline.length;\r",
											"    \r",
											"    words1 = newline[0].split('|');\r",
											"\r",
											"    for(loop_cnt = 0; loop_cnt < lineCnt; loop_cnt++) {\r",
											"        comp_line = loop_cnt + 1;\r",
											"        words2 = newline[comp_line].split('|');\r",
											"\r",
											"        if(words2[0] == 'M'){\r",
											"            continue;\r",
											"        }\r",
											"        else{\r",
											"            break;\r",
											"        }\r",
											"    }\r",
											"    \r",
											"    if(words1[2] == loop_cnt){\r",
											"        if(pm.globals.get(\"mode\") == 1) console.log('2) 전체 건수 확인 (수동) : '+ words1[2], loop_cnt);\r",
											"    }\r",
											"    else{\r",
											"        if(pm.globals.get(\"mode\") == 1) console.log('2) 전체 건수 확인 (수동) : '+ words1[2], loop_cnt);\r",
											"    }\r",
											"    //pm.expect(words1[2]).to.equal(loop_cnt.toString());\r",
											"})\r",
											"\r",
											"pm.test(\"(3) 시리즈 줄거리 확인\", function () {\r",
											"    var arrString =\"\";\r",
											"    var words1 =[];\r",
											"    var words2 =[];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"    \r",
											"    words1 = newline[0].split('|');\r",
											"    \r",
											"    if(pm.globals.get(\"mode\") == 1) console.log('3) 시리즈 줄거리 확인 : '+ words1[5]);\r",
											"    //pm.expect(words1[5]).to.not.equal('');\r",
											"})\r",
											"\r",
											"pm.test(\"(4) 회차 표시 여부 확인\", function () {\r",
											"    var arrString =\"\";\r",
											"    var words1 =[];\r",
											"    var words2 =[];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"    \r",
											"    words1 = newline[0].split('|');\r",
											"    \r",
											"    if(pm.globals.get(\"mode\") == 1) console.log('4) 회차 표시 여부 확인 : '+ words1[8]);\r",
											"    pm.expect(words1[8]).to.equal('Y');\r",
											"})\r",
											"\r",
											"pm.test(\"(5) 현재 페이지 확인\", function () {\r",
											"    var arrString =\"\";\r",
											"    var words1 =[];\r",
											"    var words2 =[];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"    \r",
											"    words1 = newline[0].split('|');\r",
											"    \r",
											"    if(pm.globals.get(\"mode\") == 1) console.log('5) 현재 페이지 확인 : '+ words1[13]);\r",
											"    pm.expect(words1[13]).to.not.equal('');\r",
											"})\r",
											"\r",
											"pm.test(\"(6) 이미지 URL 확인\", function () {\r",
											"    var arrString =\"\";\r",
											"    var words1 =[];\r",
											"    var words2 =[];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"    \r",
											"    words1 = newline[0].split('|');\r",
											"\r",
											"    if(pm.globals.get(\"mode\") == 1) console.log('6) 이미지 URL 확인 : ', words1[14], words1[15], words1[16], words1[17]);\r",
											"    pm.expect(words1[14]).to.not.null;\r",
											"    pm.expect(words1[15]).to.not.null;\r",
											"    pm.expect(words1[16]).to.not.null;\r",
											"    pm.expect(words1[17]).to.not.null;\r",
											"})\r",
											"\r",
											"pm.test(\"(7) 예고편 확인\", function () {\r",
											"    var arrString =\"\";\r",
											"    var words1 =[];\r",
											"    var words2 =[];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    var loop_cnt = 0;\r",
											"    var lineCnt = 0;\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"    lineCnt = newline.length;\r",
											"\r",
											"    words1 = newline[1].split('|');\r",
											"    \r",
											"    for(loop_cnt = 0; loop_cnt < lineCnt; loop_cnt++) {\r",
											"        comp_line = loop_cnt + 1;\r",
											"        words2 = newline[comp_line].split('|');\r",
											"\r",
											"        if(words2[0] == 'M'){\r",
											"            next_flag = 0;\r",
											"            continue;\r",
											"        }\r",
											"        else if(words2[0] == 'P'){\r",
											"            next_flag = 1;\r",
											"            break;\r",
											"        }\r",
											"        else{\r",
											"            next_flag = 0;\r",
											"            break;\r",
											"        }\r",
											"    }\r",
											"    \r",
											"    if(next_flag){\r",
											"        if(pm.globals.get(\"mode\") == 1) console.log('7) 예고편 있음 : ', words2[1], words1[1]);\r",
											"        //pm.expect(words2[1]).to.equal(words1[1]);\r",
											"    }\r",
											"    else{\r",
											"        if(pm.globals.get(\"mode\") == 1) console.log('7) 예고편 없음 : ', words2[0]);\r",
											"        pm.expect(words2[0]).to.oneOf(['', '\\n']);\r",
											"    }\r",
											"})\r",
											"\r",
											"pm.test(\"(8) 예고편 URL 확인\", function () {\r",
											"    var arrString =\"\";\r",
											"    var words1 =[];\r",
											"    var words2 =[];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"    \r",
											"    words1 = newline[0].split('|');\r",
											"    words2 = newline[comp_line].split('|');\r",
											"    \r",
											"    if(next_flag){\r",
											"        if(pm.globals.get(\"mode\") == 1) console.log('8) 예고편 URL 존재 : ', words1[18], words1[19], words1[20], words1[21], words1[22], words1[23]);\r",
											"        pm.expect(words1[18]).to.not.equal('');\r",
											"        pm.expect(words1[19]).to.not.equal('');\r",
											"        pm.expect(words1[20]).to.not.equal('');\r",
											"        pm.expect(words1[21]).to.not.equal('');\r",
											"        pm.expect(words1[22]).to.not.equal('');\r",
											"        pm.expect(words1[23]).to.not.equal('');\r",
											"    }\r",
											"    else{\r",
											"        if(pm.globals.get(\"mode\") == 1) console.log('8) 예고편 URL 존재하지 않음 : ', words1[18], words1[19], words1[20], words1[21], words1[22], words1[23]);\r",
											"        pm.expect(words1[18]).to.equal('');\r",
											"        pm.expect(words1[19]).to.equal('');\r",
											"        pm.expect(words1[20]).to.equal('');\r",
											"        pm.expect(words1[21]).to.equal('');\r",
											"        pm.expect(words1[22]).to.equal('');\r",
											"        pm.expect(words1[23]).to.equal('');\r",
											"    }\r",
											"    next_flag = 0;\r",
											"})\r",
											"\r",
											"pm.test(\"(9) 바디 첫번째 항목 확인\", function () {\r",
											"    var arrString =\"\";\r",
											"    var words1 =[];\r",
											"    var words2 =[];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"    \r",
											"    words1 = newline[1].split('|');\r",
											"    \r",
											"    if(pm.globals.get(\"mode\") == 1) console.log('9) 바디 첫번째 항목 확인 : '+ words1[0]);\r",
											"    pm.expect(words1[0]).to.equal('M');\r",
											"})\r",
											"\r",
											"pm.test(\"(10) 앨범ID 확인\", function () {\r",
											"    var arrString =\"\";\r",
											"    var words1 =[];\r",
											"    var words2 =[];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"    \r",
											"    words1 = newline[1].split('|');\r",
											"    \r",
											"    if(pm.globals.get(\"mode\") == 1) console.log('10) 앨범ID 확인 : '+ words1[1]);\r",
											"    pm.expect(words1[1]).to.not.equal('');\r",
											"})\r",
											"\r",
											"pm.test(\"(11) 시리즈 번호 확인\", function () {\r",
											"    var arrString =\"\";\r",
											"    var words1 =[];\r",
											"    var words2 =[];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"    \r",
											"    words1 = newline[1].split('|');\r",
											"    \r",
											"    if(pm.globals.get(\"mode\") == 1) console.log('11) 시리즈 번호 확인 : '+ words1[3]);\r",
											"    pm.expect(words1[3]).to.not.equal('');\r",
											"})\r",
											"\r",
											"pm.test(\"(12) 줄거리 확인\", function () {\r",
											"    var arrString =\"\";\r",
											"    var words1 =[];\r",
											"    var words2 =[];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"    \r",
											"    words1 = newline[1].split('|');\r",
											"    \r",
											"    if(pm.globals.get(\"mode\") == 1) console.log('12) 줄거리 확인 : '+ words1[27]);\r",
											"    pm.expect(words1[27]).to.not.equal('');\r",
											"})\r",
											"\r",
											"pm.test(\"(13) 이미지 정보 확인\", function () {\r",
											"    var arrString =\"\";\r",
											"    var words1 =[];\r",
											"    var words2 =[];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"    \r",
											"    words1 = newline[1].split('|');\r",
											"    \r",
											"    if(pm.globals.get(\"mode\") == 1) console.log('13) 이미지 정보 확인 : ', words1[44], words1[45]);\r",
											"    pm.expect(words1[44]).to.not.equal('');\r",
											"    pm.expect(words1[45]).to.not.equal('');\r",
											"})\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Host",
										"value": "vodlookup.fleta.com",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://{{imcs}}/servlets/CommSvl?CMD=getNXSeriesList&PARAM=SA_ID=M14090300006|STB_MAC=9893.cc25.bc23|CAT_ID=AR408|PAGE_NO=0|PAGE_CNT=5|RQS_NO=0|CAT_GB=I30|DEFIN_FLAG=1|NET_TYP=02|APP_TYPE=RUSA|STB_FLAG=N|IPV6_FLAG=Y|TEST_ID=|VARIATION_ID=|",
									"protocol": "http",
									"host": [
										"{{imcs}}"
									],
									"path": [
										"servlets",
										"CommSvl"
									],
									"query": [
										{
											"key": "CMD",
											"value": "getNXSeriesList"
										},
										{
											"key": "PARAM",
											"value": "SA_ID=M14090300006|STB_MAC=9893.cc25.bc23|CAT_ID=AR408|PAGE_NO=0|PAGE_CNT=5|RQS_NO=0|CAT_GB=I30|DEFIN_FLAG=1|NET_TYP=02|APP_TYPE=RUSA|STB_FLAG=N|IPV6_FLAG=Y|TEST_ID=|VARIATION_ID=|"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "getNXSeriesList_TC1_일반 시리즈 카테고리 ID (해외드라마)_최초진입 : 시청정보無_종영_일반STB_AB=NULL_시즌있음_일반사용자_일반편성_기본 Copy 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"if(pm.globals.get(\"mode\") == 1) console.log('==================== [ getNXSeriesList TC  1 ] ====================');\r",
											"\r",
											"var comp_line = 0;\r",
											"var next_flag = 0;\r",
											"\r",
											"pm.test(\"(1) 정상 응답 여부 확인\", function () {\r",
											"    var arrString =\"\";\r",
											"    var words1 =[];\r",
											"    var words2 =[];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"    \r",
											"    words1 = newline[0].split('|');\r",
											"    \r",
											"    if(pm.globals.get(\"mode\") == 1) console.log('1) 정상 응답 여부 확인 : '+ words1[0]);\r",
											"    pm.expect(words1[0]).to.equal('0');\r",
											"})\r",
											"    \r",
											"pm.test(\"(2) 전체 건수 확인\", function () {\r",
											"    var arrString =\"\";\r",
											"    var words1 =[];\r",
											"    var words2 =[];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    var loop_cnt = 0;\r",
											"    var lineCnt = 0;\r",
											"    var comp_line = 0;\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"    lineCnt = newline.length;\r",
											"    \r",
											"    words1 = newline[0].split('|');\r",
											"\r",
											"    for(loop_cnt = 0; loop_cnt < lineCnt; loop_cnt++) {\r",
											"        comp_line = loop_cnt + 1;\r",
											"        words2 = newline[comp_line].split('|');\r",
											"\r",
											"        if(words2[0] == 'M'){\r",
											"            continue;\r",
											"        }\r",
											"        else{\r",
											"            break;\r",
											"        }\r",
											"    }\r",
											"\r",
											"    if(words1[2] == loop_cnt){\r",
											"        if(pm.globals.get(\"mode\") == 1) console.log('2) 전체 건수 확인 : '+ words1[2], loop_cnt);\r",
											"        pm.expect(words1[2]).to.equal(loop_cnt.toString());\r",
											"    }\r",
											"})\r",
											"\r",
											"pm.test(\"(3) 시리즈 줄거리 확인\", function () {\r",
											"    var arrString =\"\";\r",
											"    var words1 =[];\r",
											"    var words2 =[];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"    \r",
											"    words1 = newline[0].split('|');\r",
											"    \r",
											"    if(pm.globals.get(\"mode\") == 1) console.log('3) 시리즈 줄거리 확인 : '+ words1[5]);\r",
											"    pm.expect(words1[5]).to.not.equal('');\r",
											"})\r",
											"\r",
											"pm.test(\"(4) 회차 표시 여부 확인\", function () {\r",
											"    var arrString =\"\";\r",
											"    var words1 =[];\r",
											"    var words2 =[];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"    \r",
											"    words1 = newline[0].split('|');\r",
											"    \r",
											"    if(pm.globals.get(\"mode\") == 1) console.log('4) 회차 표시 여부 확인 : '+ words1[8]);\r",
											"    pm.expect(words1[8]).to.equal('Y');\r",
											"})\r",
											"\r",
											"pm.test(\"(5) 현재 페이지 확인\", function () {\r",
											"    var arrString =\"\";\r",
											"    var words1 =[];\r",
											"    var words2 =[];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"    \r",
											"    words1 = newline[0].split('|');\r",
											"    \r",
											"    if(pm.globals.get(\"mode\") == 1) console.log('5) 현재 페이지 확인 : '+ words1[13]);\r",
											"    pm.expect(words1[13]).to.equal('1');\r",
											"})\r",
											"\r",
											"pm.test(\"(6) 이미지 URL 확인\", function () {\r",
											"    var arrString =\"\";\r",
											"    var words1 =[];\r",
											"    var words2 =[];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"    \r",
											"    words1 = newline[0].split('|');\r",
											"\r",
											"    if(pm.globals.get(\"mode\") == 1) console.log('6) 이미지 URL 확인 : ', words1[14], words1[15], words1[16], words1[17]);\r",
											"    pm.expect(words1[14]).to.not.null;\r",
											"    pm.expect(words1[15]).to.not.null;\r",
											"    pm.expect(words1[16]).to.not.null;\r",
											"    pm.expect(words1[17]).to.not.null;\r",
											"})\r",
											"\r",
											"pm.test(\"(7) 예고편 확인\", function () {\r",
											"    var arrString =\"\";\r",
											"    var words1 =[];\r",
											"    var words2 =[];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    var loop_cnt = 0;\r",
											"    var lineCnt = 0;\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"    lineCnt = newline.length;\r",
											"\r",
											"    words1 = newline[1].split('|');\r",
											"    \r",
											"    for(loop_cnt = 0; loop_cnt < lineCnt; loop_cnt++) {\r",
											"        comp_line = loop_cnt + 1;\r",
											"        words2 = newline[comp_line].split('|');\r",
											"\r",
											"        if(words2[0] == 'P'){\r",
											"            next_flag = 1;\r",
											"            break;\r",
											"        }\r",
											"    }\r",
											"    if(pm.globals.get(\"mode\") == 1) console.log('7) 예고편 확인 : ',words1[1], words2[1]);\r",
											"    pm.expect(words1[1]).to.equal(words2[1]);\r",
											"})\r",
											"\r",
											"pm.test(\"(8) 예고편 URL 확인\", function () {\r",
											"    var arrString =\"\";\r",
											"    var words1 =[];\r",
											"    var words2 =[];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"    \r",
											"    words1 = newline[0].split('|');\r",
											"    words2 = newline[comp_line].split('|');\r",
											"    \r",
											"    if(next_flag){\r",
											"        if(pm.globals.get(\"mode\") == 1) console.log('8) 예고편 URL 존재 : ', words1[18], words1[19], words1[20], words1[21], words1[22], words1[23]);\r",
											"        pm.expect(words1[18]).to.not.equal('');\r",
											"        pm.expect(words1[19]).to.not.equal('');\r",
											"        pm.expect(words1[20]).to.not.equal('');\r",
											"        pm.expect(words1[21]).to.not.equal('');\r",
											"        pm.expect(words1[22]).to.not.equal('');\r",
											"        pm.expect(words1[23]).to.not.equal('');\r",
											"    }\r",
											"    else{\r",
											"        if(pm.globals.get(\"mode\") == 1) console.log('8) 예고편 URL 존재하지 않음 : ', words1[18], words1[19], words1[20], words1[21], words1[22], words1[23]);\r",
											"        pm.expect(words1[18]).to.equal('');\r",
											"        pm.expect(words1[19]).to.equal('');\r",
											"        pm.expect(words1[20]).to.equal('');\r",
											"        pm.expect(words1[21]).to.equal('');\r",
											"        pm.expect(words1[22]).to.equal('');\r",
											"        pm.expect(words1[23]).to.equal('');\r",
											"    }\r",
											"    next_flag = 0;\r",
											"})\r",
											"\r",
											"pm.test(\"(9) 바디 첫번째 항목 확인\", function () {\r",
											"    var arrString =\"\";\r",
											"    var words1 =[];\r",
											"    var words2 =[];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"    \r",
											"    words1 = newline[1].split('|');\r",
											"    \r",
											"    if(pm.globals.get(\"mode\") == 1) console.log('9) 바디 첫번째 항목 확인 : '+ words1[0]);\r",
											"    pm.expect(words1[0]).to.equal('M');\r",
											"})\r",
											"\r",
											"pm.test(\"(10) 앨범ID 확인\", function () {\r",
											"    var arrString =\"\";\r",
											"    var words1 =[];\r",
											"    var words2 =[];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"    \r",
											"    words1 = newline[1].split('|');\r",
											"    \r",
											"    if(pm.globals.get(\"mode\") == 1) console.log('10) 앨범ID 확인 : '+ words1[1]);\r",
											"    pm.expect(words1[1]).to.not.equal('');\r",
											"})\r",
											"\r",
											"pm.test(\"(11) 시리즈 번호 확인\", function () {\r",
											"    var arrString =\"\";\r",
											"    var words1 =[];\r",
											"    var words2 =[];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"    \r",
											"    words1 = newline[1].split('|');\r",
											"    \r",
											"    if(pm.globals.get(\"mode\") == 1) console.log('11) 시리즈 번호 확인 : '+ words1[3]);\r",
											"    pm.expect(words1[3]).to.not.equal('');\r",
											"})\r",
											"\r",
											"pm.test(\"(12) 줄거리 확인\", function () {\r",
											"    var arrString =\"\";\r",
											"    var words1 =[];\r",
											"    var words2 =[];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"    \r",
											"    words1 = newline[1].split('|');\r",
											"    \r",
											"    if(pm.globals.get(\"mode\") == 1) console.log('12) 줄거리 확인 : '+ words1[27]);\r",
											"    pm.expect(words1[27]).to.not.equal('');\r",
											"})\r",
											"\r",
											"pm.test(\"(13) 이미지 정보 확인\", function () {\r",
											"    var arrString =\"\";\r",
											"    var words1 =[];\r",
											"    var words2 =[];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"    \r",
											"    words1 = newline[1].split('|');\r",
											"    \r",
											"    if(pm.globals.get(\"mode\") == 1) console.log('13) 이미지 정보 확인 : ', words1[44], words1[45]);\r",
											"    pm.expect(words1[44]).to.not.equal('');\r",
											"    pm.expect(words1[45]).to.not.equal('');\r",
											"})\r",
											"\r",
											"pm.test(\"(14) 슈퍼앨범 아이콘 정보 확인(수동)\", function () {\r",
											"    var arrString =\"\";\r",
											"    var words1 =[];\r",
											"    var words2 =[];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"    \r",
											"    words1 = newline[1].split('|');\r",
											"    \r",
											"    if(pm.globals.get(\"mode\") == 1) console.log('14) 슈퍼앨범 아이콘 정보 확인(수동) : ', words1[50], words1[51], words1[52]);\r",
											"/*    pm.expect(words1[50]).to.not.equal('');\r",
											"    pm.expect(words1[51]).to.not.equal('');\r",
											"    pm.expect(words1[52]).to.not.equal('');*/\r",
											"})\r",
											"\r",
											"pm.test(\"(15) 시즌 확인\", function () {\r",
											"    var arrString =\"\";\r",
											"    var words1 =[];\r",
											"    var words2 =[];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"    \r",
											"    words1 = newline[0].split('|');\r",
											"    \r",
											"    if(pm.globals.get(\"mode\") == 1) console.log('15) 시즌 확인 : ', words1[10], words1[11]);\r",
											"    pm.expect(words1[10]).to.not.equal('');\r",
											"    pm.expect(words1[11]).to.not.equal('');\r",
											"})\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Host",
										"value": "vodlookup.fleta.com",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://{{imcs}}/servlets/CommSvl?CMD=getNXSeriesList&PARAM=SA_ID=M14090300006|STB_MAC=9893.cc25.bc23|CAT_ID=AR045|PAGE_NO=0|PAGE_CNT=5|RQS_NO=0|CAT_GB=I30|DEFIN_FLAG=1|NET_TYP=02|APP_TYPE=RUSA|STB_FLAG=N|IPV6_FLAG=N|TEST_ID=|VARIATION_ID=|",
									"protocol": "http",
									"host": [
										"{{imcs}}"
									],
									"path": [
										"servlets",
										"CommSvl"
									],
									"query": [
										{
											"key": "CMD",
											"value": "getNXSeriesList"
										},
										{
											"key": "PARAM",
											"value": "SA_ID=M14090300006|STB_MAC=9893.cc25.bc23|CAT_ID=AR045|PAGE_NO=0|PAGE_CNT=5|RQS_NO=0|CAT_GB=I30|DEFIN_FLAG=1|NET_TYP=02|APP_TYPE=RUSA|STB_FLAG=N|IPV6_FLAG=N|TEST_ID=|VARIATION_ID=|"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "getNXSeriesList_TC42_일반 시리즈 카테고리 ID (국내예능)_최초진입 : 시청정보無_종영_일반STB_AB=NULL_일반사용자_일반편성_기본 Copy 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"if(pm.globals.get(\"mode\") == 1) console.log('==================== [ getNXSeriesList TC  42 ] ====================');\r",
											"\r",
											"var comp_line = 0;\r",
											"var next_flag = 0;\r",
											"\r",
											"pm.test(\"(1) 정상 응답 여부 확인\", function () {\r",
											"    var arrString =\"\";\r",
											"    var words1 =[];\r",
											"    var words2 =[];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"    \r",
											"    words1 = newline[0].split('|');\r",
											"    \r",
											"    if(pm.globals.get(\"mode\") == 1) console.log('1) 정상 응답 여부 확인 : '+ words1[0]);\r",
											"    pm.expect(words1[0]).to.equal('0');\r",
											"})\r",
											"    \r",
											"pm.test(\"(2) 전체 건수 확인(수동)\", function () {\r",
											"    var arrString =\"\";\r",
											"    var words1 =[];\r",
											"    var words2 =[];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    var loop_cnt = 0;\r",
											"    var lineCnt = 0;\r",
											"    var comp_line = 0;\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"    lineCnt = newline.length;\r",
											"    \r",
											"    words1 = newline[0].split('|');\r",
											"\r",
											"    for(loop_cnt = 0; loop_cnt < lineCnt; loop_cnt++) {\r",
											"        comp_line = loop_cnt + 1;\r",
											"        words2 = newline[comp_line].split('|');\r",
											"\r",
											"        if(words2[0] == 'M'){\r",
											"            continue;\r",
											"        }\r",
											"        else{\r",
											"            break;\r",
											"        }\r",
											"    }\r",
											"    \r",
											"    if(words1[2] == loop_cnt){\r",
											"        if(pm.globals.get(\"mode\") == 1) console.log('2) 전체 건수 확인 (수동) : '+ words1[2], loop_cnt);\r",
											"    }\r",
											"    else{\r",
											"        if(pm.globals.get(\"mode\") == 1) console.log('2) 전체 건수 확인 (수동) : '+ words1[2], loop_cnt);\r",
											"    }\r",
											"    //pm.expect(words1[2]).to.equal(loop_cnt.toString());\r",
											"})\r",
											"\r",
											"pm.test(\"(3) 시리즈 줄거리 확인\", function () {\r",
											"    var arrString =\"\";\r",
											"    var words1 =[];\r",
											"    var words2 =[];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"    \r",
											"    words1 = newline[0].split('|');\r",
											"    \r",
											"    if(pm.globals.get(\"mode\") == 1) console.log('3) 시리즈 줄거리 확인 : '+ words1[5]);\r",
											"    //pm.expect(words1[5]).to.equal('');\r",
											"})\r",
											"\r",
											"pm.test(\"(4) 회차 표시 여부 확인\", function () {\r",
											"    var arrString =\"\";\r",
											"    var words1 =[];\r",
											"    var words2 =[];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"    \r",
											"    words1 = newline[0].split('|');\r",
											"    \r",
											"    if(pm.globals.get(\"mode\") == 1) console.log('4) 회차 표시 여부 확인 : '+ words1[8]);\r",
											"    pm.expect(words1[8]).to.equal('Y');\r",
											"})\r",
											"\r",
											"pm.test(\"(5) 현재 페이지 확인\", function () {\r",
											"    var arrString =\"\";\r",
											"    var words1 =[];\r",
											"    var words2 =[];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"    \r",
											"    words1 = newline[0].split('|');\r",
											"    \r",
											"    if(pm.globals.get(\"mode\") == 1) console.log('5) 현재 페이지 확인 : '+ words1[13]);\r",
											"    pm.expect(words1[13]).to.not.equal('');\r",
											"})\r",
											"\r",
											"pm.test(\"(6) 이미지 URL 확인\", function () {\r",
											"    var arrString =\"\";\r",
											"    var words1 =[];\r",
											"    var words2 =[];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"    \r",
											"    words1 = newline[0].split('|');\r",
											"\r",
											"    if(pm.globals.get(\"mode\") == 1) console.log('6) 이미지 URL 확인 : ', words1[14], words1[15], words1[16], words1[17]);\r",
											"    pm.expect(words1[14]).to.not.null;\r",
											"    pm.expect(words1[15]).to.not.null;\r",
											"    pm.expect(words1[16]).to.not.null;\r",
											"    pm.expect(words1[17]).to.not.null;\r",
											"})\r",
											"\r",
											"pm.test(\"(7) 예고편 확인\", function () {\r",
											"    var arrString =\"\";\r",
											"    var words1 =[];\r",
											"    var words2 =[];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    var loop_cnt = 0;\r",
											"    var lineCnt = 0;\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"    lineCnt = newline.length;\r",
											"\r",
											"    words1 = newline[1].split('|');\r",
											"    \r",
											"    for(loop_cnt = 0; loop_cnt < lineCnt; loop_cnt++) {\r",
											"        comp_line = loop_cnt + 1;\r",
											"        words2 = newline[comp_line].split('|');\r",
											"\r",
											"        if(words2[0] == 'M'){\r",
											"            next_flag = 0;\r",
											"            continue;\r",
											"        }\r",
											"        else if(words2[0] == 'P'){\r",
											"            next_flag = 1;\r",
											"            break;\r",
											"        }\r",
											"        else{\r",
											"            next_flag = 0;\r",
											"            break;\r",
											"        }\r",
											"    }\r",
											"    \r",
											"    if(next_flag){\r",
											"        if(pm.globals.get(\"mode\") == 1) console.log('7) 예고편 있음 : ', words2[0]);\r",
											"    }\r",
											"    else{\r",
											"        if(pm.globals.get(\"mode\") == 1) console.log('7) 예고편 없음 : ', words2[0]);\r",
											"    }\r",
											"    \r",
											"    //pm.expect(words2[0]).to.equal('P');\r",
											"})\r",
											"\r",
											"pm.test(\"(8) 예고편 URL 확인\", function () {\r",
											"    var arrString =\"\";\r",
											"    var words1 =[];\r",
											"    var words2 =[];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"    \r",
											"    words1 = newline[0].split('|');\r",
											"    words2 = newline[comp_line].split('|');\r",
											"    \r",
											"    if(next_flag){\r",
											"        if(pm.globals.get(\"mode\") == 1) console.log('8) 예고편 URL 존재 : ', words1[18], words1[19], words1[20], words1[21], words1[22], words1[23]);\r",
											"        pm.expect(words1[18]).to.not.equal('');\r",
											"        pm.expect(words1[19]).to.not.equal('');\r",
											"        pm.expect(words1[20]).to.not.equal('');\r",
											"        pm.expect(words1[21]).to.not.equal('');\r",
											"        pm.expect(words1[22]).to.not.equal('');\r",
											"        pm.expect(words1[23]).to.not.equal('');\r",
											"    }\r",
											"    else{\r",
											"        if(pm.globals.get(\"mode\") == 1) console.log('8) 예고편 URL 존재하지 않음 : ', words1[18], words1[19], words1[20], words1[21], words1[22], words1[23]);\r",
											"        pm.expect(words1[18]).to.equal('');\r",
											"        pm.expect(words1[19]).to.equal('');\r",
											"        pm.expect(words1[20]).to.equal('');\r",
											"        pm.expect(words1[21]).to.equal('');\r",
											"        pm.expect(words1[22]).to.equal('');\r",
											"        pm.expect(words1[23]).to.equal('');\r",
											"    }\r",
											"    next_flag = 0;\r",
											"})\r",
											"\r",
											"pm.test(\"(9) 바디 첫번째 항목 확인\", function () {\r",
											"    var arrString =\"\";\r",
											"    var words1 =[];\r",
											"    var words2 =[];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"    \r",
											"    words1 = newline[1].split('|');\r",
											"    \r",
											"    if(pm.globals.get(\"mode\") == 1) console.log('9) 바디 첫번째 항목 확인 : '+ words1[0]);\r",
											"    pm.expect(words1[0]).to.equal('M');\r",
											"})\r",
											"\r",
											"pm.test(\"(10) 앨범ID 확인\", function () {\r",
											"    var arrString =\"\";\r",
											"    var words1 =[];\r",
											"    var words2 =[];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"    \r",
											"    words1 = newline[1].split('|');\r",
											"    \r",
											"    if(pm.globals.get(\"mode\") == 1) console.log('10) 앨범ID 확인 : '+ words1[1]);\r",
											"    pm.expect(words1[1]).to.not.equal('');\r",
											"})\r",
											"\r",
											"pm.test(\"(11) 시리즈 번호 확인\", function () {\r",
											"    var arrString =\"\";\r",
											"    var words1 =[];\r",
											"    var words2 =[];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"    \r",
											"    words1 = newline[1].split('|');\r",
											"    \r",
											"    if(pm.globals.get(\"mode\") == 1) console.log('11) 시리즈 번호 확인 : '+ words1[3]);\r",
											"    pm.expect(words1[3]).to.not.equal('');\r",
											"})\r",
											"\r",
											"pm.test(\"(12) 줄거리 확인\", function () {\r",
											"    var arrString =\"\";\r",
											"    var words1 =[];\r",
											"    var words2 =[];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"    \r",
											"    words1 = newline[1].split('|');\r",
											"    \r",
											"    if(pm.globals.get(\"mode\") == 1) console.log('12) 줄거리 확인 : '+ words1[27]);\r",
											"    pm.expect(words1[27]).to.not.equal('');\r",
											"})\r",
											"\r",
											"pm.test(\"(13) 이미지 정보 확인\", function () {\r",
											"    var arrString =\"\";\r",
											"    var words1 =[];\r",
											"    var words2 =[];\r",
											"\r",
											"    var newline = [];\r",
											"\r",
											"    arrString = pm.response.text();\r",
											"    newline = arrString.split('\\f');\r",
											"    \r",
											"    words1 = newline[1].split('|');\r",
											"    \r",
											"    if(pm.globals.get(\"mode\") == 1) console.log('13) 이미지 정보 확인 : ', words1[44], words1[45]);\r",
											"    pm.expect(words1[44]).to.not.equal('');\r",
											"    pm.expect(words1[45]).to.not.equal('');\r",
											"})\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Host",
										"value": "vodlookup.fleta.com",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://{{imcs}}/servlets/CommSvl?CMD=getNXSeriesList&PARAM=SA_ID=M14090300006|STB_MAC=9893.cc25.bc23|CAT_ID=BM0VW|PAGE_NO=0|PAGE_CNT=5|RQS_NO=0|CAT_GB=I30|DEFIN_FLAG=1|NET_TYP=02|APP_TYPE=RUSA|STB_FLAG=N|IPV6_FLAG=Y|TEST_ID=|VARIATION_ID=|",
									"protocol": "http",
									"host": [
										"{{imcs}}"
									],
									"path": [
										"servlets",
										"CommSvl"
									],
									"query": [
										{
											"key": "CMD",
											"value": "getNXSeriesList"
										},
										{
											"key": "PARAM",
											"value": "SA_ID=M14090300006|STB_MAC=9893.cc25.bc23|CAT_ID=BM0VW|PAGE_NO=0|PAGE_CNT=5|RQS_NO=0|CAT_GB=I30|DEFIN_FLAG=1|NET_TYP=02|APP_TYPE=RUSA|STB_FLAG=N|IPV6_FLAG=Y|TEST_ID=|VARIATION_ID=|"
										}
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"// 공통",
									"",
									"// WAS 정상응답 체크 (200여부)",
									"pm.test(\"[공통]WAS 정상응답 체크 (200여부)\", function () {",
									"    pm.response.to.have.status(200);   ",
									"});",
									"",
									"// 응답속도 체크(0.5초미만) 여부",
									"pm.test(\"[공통]응답속도 체크(0.5초미만)\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(500);",
									"});"
								]
							}
						}
					]
				}
			]
		},
		{
			"name": "검색어",
			"item": [
				{
					"name": "getKeywordList",
					"item": [
						{
							"name": "/smartux/getKeywordList_NTC6_일반 가입자_1,X,O_다른버전 Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// 공통",
											"// WAS 정상응답 체크 (200여부)",
											"pm.test(\"[공통]WAS 정상응답 체크 (200여부)\", function () {",
											"    pm.response.to.have.status(200);   ",
											"});",
											"",
											"// 응답속도 체크(0.5초미만) 여부",
											"pm.test(\"[공통]응답속도 체크(0.5초미만)\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(500);",
											"});",
											"",
											"// 1) 가입자(일반/검수) 구분에 따른 응답 확인",
											"pm.test(\"1) 가입자(일반/검수) 구분에 따른 응답 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    if(jsonData.result.flag == \"6000\"){",
											"        pm.expect(jsonData.result.flag).to.eql(\"6000\");",
											"    }else{",
											"        pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"    }",
											"});",
											"",
											"// 2) 페이징 확인",
											"pm.test(\"2) 페이징 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    if(jsonData.result.flag == \"6000\"){",
											"        pm.expect(jsonData.result.flag).to.eql(\"6000\");",
											"    }else{",
											"        var query = {};",
											"        pm.request.url.query.all().forEach((param) => { query[param.key] = param.value});",
											"        var jsonData = pm.response.json();",
											"        var recordset = jsonData.result.recordset;",
											"        var total_count = jsonData.result.total_count;",
											"        ",
											"        if(query[\"start_num\"] == -1 && query[\"paging_type\"] != \"N\"){",
											"            // total 숫자 확인",
											"            pm.expect(recordset.length).to.eql(parseInt(total_count));",
											"            // total 개수 확인",
											"            pm.expect(recordset.length).to.eql(parseInt(total_count));",
											"            // 데이터 확인",
											"            for(i in recordset){",
											"                pm.expect(recordset[i].album_id).to.match(/\\w{15}/);",
											"            }",
											"        }else if(query[\"start_num\"] == 0){",
											"            // total 숫자 확인",
											"            pm.expect(jsonData.result.total_count).to.match(/\\d/);",
											"            // recordset null 확인",
											"            pm.expect(recordset).to.null;",
											"        }else{",
											"            let request = pm.request;",
											"            // 전체 조회를 위해 파라미터 값 수정",
											"            request.url.query[\"reference\"][\"start_num\"][\"value\"] = \"1\";",
											"            request.url.query[\"reference\"][\"req_count\"][\"value\"] = total_count+\"\";",
											"",
											"            pm.expect(recordset).to.not.empty;",
											"            pm.sendRequest(request, function (err, response) {",
											"                let total = response.json().result.recordset;",
											"            ",
											"                // 큐 sorting",
											"                if(query[\"start_num\"]<0){   // 시계 방향 회전",
											"                    for(let i=0;i>query[\"start_num\"];i--){",
											"                        total.unshift(total.pop());",
											"                    }",
											"                }else{   // 반시계 방향 회전",
											"                    for(let i=1;i<query[\"start_num\"];i++){",
											"                        total.push(total.shift());",
											"                    }",
											"                }",
											"",
											"                // 데이터 확인",
											"                for(let i in recordset){",
											"                    // 정보 확인",
											"                    pm.expect(recordset[i].cat_id).to.match(/\\d{7}/);",
											"                    // 순서 확인",
											"                    pm.expect(recordset[i].cat_id).to.eql(total[0].cat_id);",
											"                    total.push(total.shift());",
											"                }",
											"            });",
											"        }",
											"    }",
											"});",
											"",
											"// 3) 버전에 따른 응답값 전달 여부 확인",
											"pm.test(\"3) 버전에 따른 응답값 전달 여부 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    if(jsonData.result.flag == \"6000\"){",
											"        pm.expect(jsonData.result.flag).to.eql(\"6000\");",
											"    }else{",
											"        pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"    }",
											"});",
											"",
											"// 4) 응답데이터가 있을경우 cont_title 필수제공 확인",
											"pm.test(\"4) 응답데이터가 있을경우 cont_title 필수제공 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    if(jsonData.result.flag == \"6000\"){",
											"        pm.expect(jsonData.result.flag).to.eql(\"6000\");",
											"    }else{",
											"        var recordset = jsonData.result.recordset;",
											"        for(i in recordset){",
											"            pm.expect(recordset[i].cont_title).to.not.empty;",
											"        }",
											"    }",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Host",
										"value": "searchword.fleta.com",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://{{mims}}/smartux/getKeywordList?sa_id=T61060140414&stb_mac=8c6d.5044.45dd&cat_id=0000286&start_num=1&req_count=2&search_typ=O&version=20211204000000&app_name=&ui_version=&pre_page=&cur_page=&dev_info=&os_info=&nw_info=&dev_model=&carrier_type=",
									"protocol": "http",
									"host": [
										"{{mims}}"
									],
									"path": [
										"smartux",
										"getKeywordList"
									],
									"query": [
										{
											"key": "sa_id",
											"value": "T61060140414"
										},
										{
											"key": "stb_mac",
											"value": "8c6d.5044.45dd"
										},
										{
											"key": "cat_id",
											"value": "0000286"
										},
										{
											"key": "start_num",
											"value": "1"
										},
										{
											"key": "req_count",
											"value": "2"
										},
										{
											"key": "search_typ",
											"value": "O"
										},
										{
											"key": "version",
											"value": "20211204000000"
										},
										{
											"key": "app_name",
											"value": ""
										},
										{
											"key": "ui_version",
											"value": ""
										},
										{
											"key": "pre_page",
											"value": ""
										},
										{
											"key": "cur_page",
											"value": ""
										},
										{
											"key": "dev_info",
											"value": ""
										},
										{
											"key": "os_info",
											"value": ""
										},
										{
											"key": "nw_info",
											"value": ""
										},
										{
											"key": "dev_model",
											"value": ""
										},
										{
											"key": "carrier_type",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "/smartux/getKeywordList_ATC7_start_num 이 전체 데이터보다 숫자가 많을때 (search_typ A) Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// 공통",
											"// WAS 정상응답 체크 (200여부)",
											"pm.test(\"[공통]WAS 정상응답 체크 (200여부)\", function () {",
											"    pm.response.to.have.status(200);   ",
											"});",
											"",
											"// 응답속도 체크(0.5초미만) 여부",
											"pm.test(\"[공통]응답속도 체크(0.5초미만)\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(500);",
											"});",
											"",
											"// 1) start_num 이 전체 데이터보다 숫자가 많을때 (search_typ A)\r",
											"pm.test(\"1) start_num 이 전체 데이터보다 숫자가 많을때 (search_typ A)\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");\r",
											"});\r"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Host",
										"value": "searchword.fleta.com",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://{{mims}}/smartux/getKeywordList?sa_id=T61060140414&stb_mac=8c6d.5044.45dd&cat_id=0000286&start_num=1000&req_count=2&search_typ=A&version=20211204000000&app_name=&ui_version=&pre_page=&cur_page=&dev_info=&os_info=&nw_info=&dev_model=&carrier_type=",
									"protocol": "http",
									"host": [
										"{{mims}}"
									],
									"path": [
										"smartux",
										"getKeywordList"
									],
									"query": [
										{
											"key": "sa_id",
											"value": "T61060140414"
										},
										{
											"key": "stb_mac",
											"value": "8c6d.5044.45dd"
										},
										{
											"key": "cat_id",
											"value": "0000286"
										},
										{
											"key": "start_num",
											"value": "1000"
										},
										{
											"key": "req_count",
											"value": "2"
										},
										{
											"key": "search_typ",
											"value": "A"
										},
										{
											"key": "version",
											"value": "20211204000000"
										},
										{
											"key": "app_name",
											"value": ""
										},
										{
											"key": "ui_version",
											"value": ""
										},
										{
											"key": "pre_page",
											"value": ""
										},
										{
											"key": "cur_page",
											"value": ""
										},
										{
											"key": "dev_info",
											"value": ""
										},
										{
											"key": "os_info",
											"value": ""
										},
										{
											"key": "nw_info",
											"value": ""
										},
										{
											"key": "dev_model",
											"value": ""
										},
										{
											"key": "carrier_type",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "/smartux/getKeywordList_NTC8_일반 가입자_1,X_다른버전 Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// 공통",
											"// WAS 정상응답 체크 (200여부)",
											"pm.test(\"[공통]WAS 정상응답 체크 (200여부)\", function () {",
											"    pm.response.to.have.status(200);   ",
											"});",
											"",
											"// 응답속도 체크(0.5초미만) 여부",
											"pm.test(\"[공통]응답속도 체크(0.5초미만)\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(500);",
											"});",
											"",
											"// 1) 가입자(일반/검수) 구분에 따른 응답 확인",
											"pm.test(\"1) 가입자(일반/검수) 구분에 따른 응답 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    if(jsonData.result.flag == \"6000\"){",
											"        pm.expect(jsonData.result.flag).to.eql(\"6000\");",
											"    }else{",
											"        pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"    }",
											"});",
											"",
											"// 2) 페이징 확인",
											"pm.test(\"2) 페이징 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    if(jsonData.result.flag == \"6000\"){",
											"        pm.expect(jsonData.result.flag).to.eql(\"6000\");",
											"    }else{",
											"        var query = {};",
											"        pm.request.url.query.all().forEach((param) => { query[param.key] = param.value});",
											"        var jsonData = pm.response.json();",
											"        var recordset = jsonData.result.recordset;",
											"        var total_count = jsonData.result.total_count;",
											"        ",
											"        if(query[\"start_num\"] == -1 && query[\"paging_type\"] != \"N\"){",
											"            // total 숫자 확인",
											"            pm.expect(recordset.length).to.eql(parseInt(total_count));",
											"            // total 개수 확인",
											"            pm.expect(recordset.length).to.eql(parseInt(total_count));",
											"            // 데이터 확인",
											"            for(i in recordset){",
											"                pm.expect(recordset[i].album_id).to.match(/\\w{15}/);",
											"            }",
											"        }else if(query[\"start_num\"] == 0){",
											"            // total 숫자 확인",
											"            pm.expect(jsonData.result.total_count).to.match(/\\d/);",
											"            // recordset null 확인",
											"            pm.expect(recordset).to.null;",
											"        }else{",
											"            let request = pm.request;",
											"            // 전체 조회를 위해 파라미터 값 수정",
											"            request.url.query[\"reference\"][\"start_num\"][\"value\"] = \"1\";",
											"            request.url.query[\"reference\"][\"req_count\"][\"value\"] = total_count+\"\";",
											"",
											"            pm.expect(recordset).to.not.empty;",
											"            pm.sendRequest(request, function (err, response) {",
											"                let total = response.json().result.recordset;",
											"            ",
											"                // 큐 sorting",
											"                if(query[\"start_num\"]<0){   // 시계 방향 회전",
											"                    for(let i=0;i>query[\"start_num\"];i--){",
											"                        total.unshift(total.pop());",
											"                    }",
											"                }else{   // 반시계 방향 회전",
											"                    for(let i=1;i<query[\"start_num\"];i++){",
											"                        total.push(total.shift());",
											"                    }",
											"                }",
											"",
											"                // 데이터 확인",
											"                for(let i in recordset){",
											"                    // 정보 확인",
											"                    pm.expect(recordset[i].cat_id).to.match(/\\d{7}/);",
											"                    // 순서 확인",
											"                    pm.expect(recordset[i].cat_id).to.eql(total[0].cat_id);",
											"                    total.push(total.shift());",
											"                }",
											"            });",
											"        }",
											"    }",
											"});",
											"",
											"// 3) 버전에 따른 응답값 전달 여부 확인",
											"pm.test(\"3) 버전에 따른 응답값 전달 여부 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    if(jsonData.result.flag == \"6000\"){",
											"        pm.expect(jsonData.result.flag).to.eql(\"6000\");",
											"    }else{",
											"        pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"    }",
											"});",
											"",
											"// 4) 응답데이터가 있을경우 cont_title 필수제공 확인",
											"pm.test(\"4) 응답데이터가 있을경우 cont_title 필수제공 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    if(jsonData.result.flag == \"6000\"){",
											"        pm.expect(jsonData.result.flag).to.eql(\"6000\");",
											"    }else{",
											"        var recordset = jsonData.result.recordset;",
											"        for(i in recordset){",
											"            pm.expect(recordset[i].cont_title).to.not.empty;",
											"        }",
											"    }",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Host",
										"value": "searchword.fleta.com",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://{{mims}}/smartux/getKeywordList?sa_id=T61060140414&stb_mac=8c6d.5044.45dd&cat_id=0000286&start_num=1&req_count=2&search_typ=&version=20211204000000&app_name=&ui_version=&pre_page=&cur_page=&dev_info=&os_info=&nw_info=&dev_model=&carrier_type=",
									"protocol": "http",
									"host": [
										"{{mims}}"
									],
									"path": [
										"smartux",
										"getKeywordList"
									],
									"query": [
										{
											"key": "sa_id",
											"value": "T61060140414"
										},
										{
											"key": "stb_mac",
											"value": "8c6d.5044.45dd"
										},
										{
											"key": "cat_id",
											"value": "0000286"
										},
										{
											"key": "start_num",
											"value": "1"
										},
										{
											"key": "req_count",
											"value": "2"
										},
										{
											"key": "search_typ",
											"value": ""
										},
										{
											"key": "version",
											"value": "20211204000000"
										},
										{
											"key": "app_name",
											"value": ""
										},
										{
											"key": "ui_version",
											"value": ""
										},
										{
											"key": "pre_page",
											"value": ""
										},
										{
											"key": "cur_page",
											"value": ""
										},
										{
											"key": "dev_info",
											"value": ""
										},
										{
											"key": "os_info",
											"value": ""
										},
										{
											"key": "nw_info",
											"value": ""
										},
										{
											"key": "dev_model",
											"value": ""
										},
										{
											"key": "carrier_type",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "/smartux/getKeywordList_NTC9_일반 가입자_1,X,A_동일버전 Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// 공통",
											"// WAS 정상응답 체크 (200여부)",
											"pm.test(\"[공통]WAS 정상응답 체크 (200여부)\", function () {",
											"    pm.response.to.have.status(200);   ",
											"});",
											"",
											"// 응답속도 체크(0.5초미만) 여부",
											"pm.test(\"[공통]응답속도 체크(0.5초미만)\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(500);",
											"});",
											"",
											"// 1) 가입자(일반/검수) 구분에 따른 응답 확인",
											"pm.test(\"1) 가입자(일반/검수) 구분에 따른 응답 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    if(jsonData.result.flag == \"6000\"){",
											"        pm.expect(jsonData.result.flag).to.eql(\"6000\");",
											"    }else{",
											"        pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"    }",
											"});",
											"",
											"// 2) 페이징 확인",
											"pm.test(\"2) 페이징 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    if(jsonData.result.flag == \"6000\"){",
											"        pm.expect(jsonData.result.flag).to.eql(\"6000\");",
											"    }else{",
											"        var query = {};",
											"        pm.request.url.query.all().forEach((param) => { query[param.key] = param.value});",
											"        var jsonData = pm.response.json();",
											"        var recordset = jsonData.result.recordset;",
											"        var total_count = jsonData.result.total_count;",
											"        ",
											"        if(query[\"start_num\"] == -1 && query[\"paging_type\"] != \"N\"){",
											"            // total 숫자 확인",
											"            pm.expect(recordset.length).to.eql(parseInt(total_count));",
											"            // total 개수 확인",
											"            pm.expect(recordset.length).to.eql(parseInt(total_count));",
											"            // 데이터 확인",
											"            for(i in recordset){",
											"                pm.expect(recordset[i].album_id).to.match(/\\w{15}/);",
											"            }",
											"        }else if(query[\"start_num\"] == 0){",
											"            // total 숫자 확인",
											"            pm.expect(jsonData.result.total_count).to.match(/\\d/);",
											"            // recordset null 확인",
											"            pm.expect(recordset).to.null;",
											"        }else{",
											"            let request = pm.request;",
											"            // 전체 조회를 위해 파라미터 값 수정",
											"            request.url.query[\"reference\"][\"start_num\"][\"value\"] = \"1\";",
											"            request.url.query[\"reference\"][\"req_count\"][\"value\"] = total_count+\"\";",
											"",
											"            pm.expect(recordset).to.not.empty;",
											"            pm.sendRequest(request, function (err, response) {",
											"                let total = response.json().result.recordset;",
											"            ",
											"                // 큐 sorting",
											"                if(query[\"start_num\"]<0){   // 시계 방향 회전",
											"                    for(let i=0;i>query[\"start_num\"];i--){",
											"                        total.unshift(total.pop());",
											"                    }",
											"                }else{   // 반시계 방향 회전",
											"                    for(let i=1;i<query[\"start_num\"];i++){",
											"                        total.push(total.shift());",
											"                    }",
											"                }",
											"",
											"                // 데이터 확인",
											"                for(let i in recordset){",
											"                    // 정보 확인",
											"                    pm.expect(recordset[i].cat_id).to.match(/\\d{7}/);",
											"                    // 순서 확인",
											"                    pm.expect(recordset[i].cat_id).to.eql(total[0].cat_id);",
											"                    total.push(total.shift());",
											"                }",
											"            });",
											"        }",
											"    }",
											"});",
											"",
											"// 3) 버전에 따른 응답값 전달 여부 확인",
											"pm.test(\"3) 버전에 따른 응답값 전달 여부 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    if(jsonData.result.flag == \"6000\"){",
											"        pm.expect(jsonData.result.flag).to.eql(\"6000\");",
											"    }else{",
											"        pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"    }",
											"});",
											"",
											"// 4) 응답데이터가 있을경우 cont_title 필수제공 확인",
											"pm.test(\"4) 응답데이터가 있을경우 cont_title 필수제공 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    if(jsonData.result.flag == \"6000\"){",
											"        pm.expect(jsonData.result.flag).to.eql(\"6000\");",
											"    }else{",
											"        var recordset = jsonData.result.recordset;",
											"        for(i in recordset){",
											"            pm.expect(recordset[i].cont_title).to.not.empty;",
											"        }",
											"    }",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Host",
										"value": "searchword.fleta.com",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://{{mims}}/smartux/getKeywordList?sa_id=T61060140414&stb_mac=8c6d.5044.45dd&cat_id=0000286&start_num=1&req_count=2&search_typ=A&version=20211016193012&app_name=&ui_version=&pre_page=&cur_page=&dev_info=&os_info=&nw_info=&dev_model=&carrier_type=",
									"protocol": "http",
									"host": [
										"{{mims}}"
									],
									"path": [
										"smartux",
										"getKeywordList"
									],
									"query": [
										{
											"key": "sa_id",
											"value": "T61060140414"
										},
										{
											"key": "stb_mac",
											"value": "8c6d.5044.45dd"
										},
										{
											"key": "cat_id",
											"value": "0000286"
										},
										{
											"key": "start_num",
											"value": "1"
										},
										{
											"key": "req_count",
											"value": "2"
										},
										{
											"key": "search_typ",
											"value": "A"
										},
										{
											"key": "version",
											"value": "20211016193012"
										},
										{
											"key": "app_name",
											"value": ""
										},
										{
											"key": "ui_version",
											"value": ""
										},
										{
											"key": "pre_page",
											"value": ""
										},
										{
											"key": "cur_page",
											"value": ""
										},
										{
											"key": "dev_info",
											"value": ""
										},
										{
											"key": "os_info",
											"value": ""
										},
										{
											"key": "nw_info",
											"value": ""
										},
										{
											"key": "dev_model",
											"value": ""
										},
										{
											"key": "carrier_type",
											"value": ""
										}
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"// 공통",
									"",
									"// WAS 정상응답 체크 (200여부)",
									"pm.test(\"[공통]WAS 정상응답 체크 (200여부)\", function () {",
									"    pm.response.to.have.status(200);   ",
									"});",
									"",
									"// 응답속도 체크(0.5초미만) 여부",
									"pm.test(\"[공통]응답속도 체크(0.5초미만)\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(500);",
									"});"
								]
							}
						}
					]
				}
			]
		},
		{
			"name": "편성",
			"item": [
				{
					"name": "getGenreVodBestList",
					"item": [
						{
							"name": "/smartux/getGenreVodBestList_NTC94_일반 가입자_SUSA_0,X,X_02_I20 Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// 공통\r",
											"// WAS 정상응답 체크 (200여부)\r",
											"pm.test(\"[공통]WAS 정상응답 체크 (200여부)\", function () {\r",
											"    pm.response.to.have.status(200);   \r",
											"});\r",
											"\r",
											"// 응답속도 체크(0.5초미만) 여부\r",
											"pm.test(\"[공통]응답속도 체크(0.5초미만)\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
											"});\r",
											"\r",
											"// 1) 가입자(일반/검수) 구분에 따른 응답 확인\r",
											"pm.test(\"1) 가입자(일반/검수) 구분에 따른 응답 확인\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");\r",
											"});\r",
											"\r",
											"// 2) 어플타입에 따른 응답 구분\r",
											"pm.test(\"2) 어플타입에 따른 응답 구분\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");\r",
											"});\r",
											"\r",
											"// 3) 페이징 확인\r",
											"var query = {};\r",
											"pm.request.url.query.all().forEach((param) => { query[param.key] = param.value});\r",
											"pm.test(\"3) 페이징 확인\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    var recordset = jsonData.result.recordset;\r",
											"    var total_count = jsonData.result.total_count;\r",
											"    \r",
											"    if(query[\"start_num\"] == -1 && query[\"paging_type\"] != \"N\"){\r",
											"        // total 숫자 확인\r",
											"        pm.expect(recordset.length).to.eql(parseInt(total_count));\r",
											"        // total 개수 확인\r",
											"        pm.expect(recordset.length).to.eql(parseInt(total_count));\r",
											"        // 데이터 확인\r",
											"        for(i in recordset){\r",
											"            pm.expect(recordset[i].album_id).to.match(/\\w{15}/);\r",
											"        }\r",
											"    }else if(query[\"start_num\"] == 0){\r",
											"        // total 숫자 확인\r",
											"        pm.expect(jsonData.result.total_count).to.match(/\\d/);\r",
											"        // recordset null 확인\r",
											"        pm.expect(recordset).to.null;\r",
											"    }else{\r",
											"        let request = pm.request;\r",
											"        // 전체 조회를 위해 파라미터 값 수정\r",
											"        request.url.query[\"reference\"][\"start_num\"][\"value\"] = \"-1\";\r",
											"        request.url.query[\"reference\"][\"paging_type\"][\"value\"] = \"\";\r",
											"\r",
											"        pm.expect(recordset).to.not.empty;\r",
											"        pm.sendRequest(request, function (err, response) {\r",
											"            let total = response.json().result.recordset;\r",
											"        \r",
											"            // 큐 sorting\r",
											"            if(query[\"start_num\"]<0){   // 시계 방향 회전\r",
											"                for(let i=0;i>query[\"start_num\"];i--){\r",
											"                    total.unshift(total.pop());\r",
											"                }\r",
											"            }else{   // 반시계 방향 회전\r",
											"                for(let i=1;i<query[\"start_num\"];i++){\r",
											"                    total.push(total.shift());\r",
											"                }\r",
											"            }\r",
											"\r",
											"            // 데이터 확인\r",
											"            for(let i in recordset){\r",
											"                // 정보 확인\r",
											"                pm.expect(recordset[i].album_id).to.match(/\\w{15}/);\r",
											"                // 순서 확인\r",
											"                pm.expect(recordset[i].album_id).to.eql(total[0].album_id);\r",
											"                total.push(total.shift());\r",
											"            }\r",
											"        });\r",
											"    }\r",
											"}); \r",
											"\r",
											"// 4) 카테고리 타입 확인\r",
											"pm.test(\"4) 카테고리 타입 확인\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");\r",
											"});\r",
											"\r",
											"// 5) 망타입 확인\r",
											"pm.test(\"5) 망타입 확인\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    var recordset = jsonData.result.recordset;\r",
											"    \r",
											"    if(query[\"net_typ\"] == \"01\" || query[\"net_typ\"] == \"02\"){\r",
											"        for(i in recordset){\r",
											"            pm.expect(recordset[i].is_fh).to.oneOf([\"Y\",\"N\"]);\r",
											"        }\r",
											"    }else{\r",
											"        for(i in recordset){\r",
											"            pm.expect(recordset[i].is_fh).to.eql(\"N\");\r",
											"        }\r",
											"    }\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Host",
										"value": "programming.fleta.com",
										"type": "text",
										"disabled": true
									},
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "http://{{mims}}/smartux/getGenreVodBestList?sa_id=T61060140414&stb_mac=8c6d.5044.45dd&app_type=SUSA&start_num=0&req_count=2&paging_type=N&genre_code=R0001&net_typ=02&category_gb=I20&app_name=&ui_version=&pre_page=&cur_page=&dev_info=&os_info=&nw_info=&dev_model=&carrier_type=",
									"protocol": "http",
									"host": [
										"{{mims}}"
									],
									"path": [
										"smartux",
										"getGenreVodBestList"
									],
									"query": [
										{
											"key": "sa_id",
											"value": "T61060140414"
										},
										{
											"key": "stb_mac",
											"value": "8c6d.5044.45dd"
										},
										{
											"key": "app_type",
											"value": "SUSA"
										},
										{
											"key": "start_num",
											"value": "0"
										},
										{
											"key": "req_count",
											"value": "2"
										},
										{
											"key": "paging_type",
											"value": "N"
										},
										{
											"key": "genre_code",
											"value": "R0001"
										},
										{
											"key": "net_typ",
											"value": "02"
										},
										{
											"key": "category_gb",
											"value": "I20"
										},
										{
											"key": "app_name",
											"value": ""
										},
										{
											"key": "ui_version",
											"value": ""
										},
										{
											"key": "pre_page",
											"value": ""
										},
										{
											"key": "cur_page",
											"value": ""
										},
										{
											"key": "dev_info",
											"value": ""
										},
										{
											"key": "os_info",
											"value": ""
										},
										{
											"key": "nw_info",
											"value": ""
										},
										{
											"key": "dev_model",
											"value": ""
										},
										{
											"key": "carrier_type",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "/smartux/getGenreVodBestList_NTC99_일반 가입자_SUSA_0,X,X_31_I30 Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// 공통",
											"// WAS 정상응답 체크 (200여부)",
											"pm.test(\"[공통]WAS 정상응답 체크 (200여부)\", function () {",
											"    pm.response.to.have.status(200);   ",
											"});",
											"",
											"// 응답속도 체크(0.5초미만) 여부",
											"pm.test(\"[공통]응답속도 체크(0.5초미만)\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(500);",
											"});",
											"",
											"// 1) 가입자(일반/검수) 구분에 따른 응답 확인",
											"pm.test(\"1) 가입자(일반/검수) 구분에 따른 응답 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"// 2) 어플타입에 따른 응답 구분",
											"pm.test(\"2) 어플타입에 따른 응답 구분\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"// 3) 페이징 확인",
											"var query = {};",
											"pm.request.url.query.all().forEach((param) => { query[param.key] = param.value});",
											"pm.test(\"3) 페이징 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    var recordset = jsonData.result.recordset;",
											"    var total_count = jsonData.result.total_count;",
											"    ",
											"    if(query[\"start_num\"] == -1 && query[\"paging_type\"] != \"N\"){",
											"        // total 숫자 확인",
											"        pm.expect(recordset.length).to.eql(parseInt(total_count));",
											"        // total 개수 확인",
											"        pm.expect(recordset.length).to.eql(parseInt(total_count));",
											"        // 데이터 확인",
											"        for(i in recordset){",
											"            pm.expect(recordset[i].album_id).to.match(/\\w{15}/);",
											"        }",
											"    }else if(query[\"start_num\"] == 0){",
											"        // total 숫자 확인",
											"        pm.expect(jsonData.result.total_count).to.match(/\\d/);",
											"        // recordset null 확인",
											"        pm.expect(recordset).to.null;",
											"    }else{",
											"        let request = pm.request;",
											"        // 전체 조회를 위해 파라미터 값 수정",
											"        request.url.query[\"reference\"][\"start_num\"][\"value\"] = \"-1\";",
											"        request.url.query[\"reference\"][\"paging_type\"][\"value\"] = \"\";",
											"",
											"        pm.expect(recordset).to.not.empty;",
											"        pm.sendRequest(request, function (err, response) {",
											"            let total = response.json().result.recordset;",
											"        ",
											"            // 큐 sorting",
											"            if(query[\"start_num\"]<0){   // 시계 방향 회전",
											"                for(let i=0;i>query[\"start_num\"];i--){",
											"                    total.unshift(total.pop());",
											"                }",
											"            }else{   // 반시계 방향 회전",
											"                for(let i=1;i<query[\"start_num\"];i++){",
											"                    total.push(total.shift());",
											"                }",
											"            }",
											"",
											"            // 데이터 확인",
											"            for(let i in recordset){",
											"                // 정보 확인",
											"                pm.expect(recordset[i].album_id).to.match(/\\w{15}/);",
											"                // 순서 확인",
											"                pm.expect(recordset[i].album_id).to.eql(total[0].album_id);",
											"                total.push(total.shift());",
											"            }",
											"        });",
											"    }",
											"}); ",
											"",
											"// 4) 카테고리 타입 확인",
											"pm.test(\"4) 카테고리 타입 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"// 5) 망타입 확인",
											"pm.test(\"5) 망타입 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    var recordset = jsonData.result.recordset;",
											"    ",
											"    if(query[\"net_typ\"] == \"01\" || query[\"net_typ\"] == \"02\"){",
											"        for(i in recordset){",
											"            pm.expect(recordset[i].is_fh).to.oneOf([\"Y\",\"N\"]);",
											"        }",
											"    }else{",
											"        for(i in recordset){",
											"            pm.expect(recordset[i].is_fh).to.eql(\"N\");",
											"        }",
											"    }",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Host",
										"value": "programming.fleta.com",
										"type": "text",
										"disabled": true
									},
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "http://{{mims}}/smartux/getGenreVodBestList?sa_id=T61060140414&stb_mac=8c6d.5044.45dd&app_type=SUSA&start_num=0&req_count=2&paging_type=N&genre_code=R0010&net_typ=31&category_gb=I30&app_name=&ui_version=&pre_page=&cur_page=&dev_info=&os_info=&nw_info=&dev_model=&carrier_type=",
									"protocol": "http",
									"host": [
										"{{mims}}"
									],
									"path": [
										"smartux",
										"getGenreVodBestList"
									],
									"query": [
										{
											"key": "sa_id",
											"value": "T61060140414"
										},
										{
											"key": "stb_mac",
											"value": "8c6d.5044.45dd"
										},
										{
											"key": "app_type",
											"value": "SUSA"
										},
										{
											"key": "start_num",
											"value": "0"
										},
										{
											"key": "req_count",
											"value": "2"
										},
										{
											"key": "paging_type",
											"value": "N"
										},
										{
											"key": "genre_code",
											"value": "R0010"
										},
										{
											"key": "net_typ",
											"value": "31"
										},
										{
											"key": "category_gb",
											"value": "I30"
										},
										{
											"key": "app_name",
											"value": ""
										},
										{
											"key": "ui_version",
											"value": ""
										},
										{
											"key": "pre_page",
											"value": ""
										},
										{
											"key": "cur_page",
											"value": ""
										},
										{
											"key": "dev_info",
											"value": ""
										},
										{
											"key": "os_info",
											"value": ""
										},
										{
											"key": "nw_info",
											"value": ""
										},
										{
											"key": "dev_model",
											"value": ""
										},
										{
											"key": "carrier_type",
											"value": ""
										}
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"// 공통",
									"",
									"// WAS 정상응답 체크 (200여부)",
									"pm.test(\"[공통]WAS 정상응답 체크 (200여부)\", function () {",
									"    pm.response.to.have.status(200);   ",
									"});",
									"",
									"// 응답속도 체크(0.5초미만) 여부",
									"pm.test(\"[공통]응답속도 체크(0.5초미만)\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(500);",
									"});"
								]
							}
						}
					]
				},
				{
					"name": "getI20AlbumList",
					"item": [
						{
							"name": "/smartux/getI20AlbumList_NTC109_검수 가입자_UX_-1,X,null_01_I20 Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// 공통",
											"// WAS 정상응답 체크 (200여부)",
											"pm.test(\"[공통]WAS 정상응답 체크 (200여부)\", function () {",
											"    pm.response.to.have.status(200);   ",
											"});",
											"",
											"// 응답속도 체크(0.5초미만) 여부",
											"pm.test(\"[공통]응답속도 체크(0.5초미만)\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(500);",
											"});",
											"",
											"// 1) 가입자(일반/검수) 구분에 따른 응답 확인",
											"pm.test(\"1) 가입자(일반/검수) 구분에 따른 응답 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"// 2) 어플타입에 따른 응답 구분",
											"pm.test(\"2) 어플타입에 따른 응답 구분\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"// 3) 페이징 확인",
											"var query = {};",
											"pm.request.url.query.all().forEach((param) => { query[param.key] = param.value});",
											"pm.test(\"3) 페이징 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    var recordset = jsonData.result.recordset;",
											"    var total_count = jsonData.result.total_count;",
											"    ",
											"    if(query[\"start_num\"] == -1 && query[\"paging_type\"] != \"N\"){",
											"        // total 숫자 확인",
											"        pm.expect(recordset.length).to.eql(parseInt(total_count));",
											"        // total 개수 확인",
											"        pm.expect(recordset.length).to.eql(parseInt(total_count));",
											"        // 데이터 확인",
											"        for(i in recordset){",
											"            pm.expect(recordset[i].album_id).to.match(/\\w{15}/);",
											"        }",
											"    }else if(query[\"start_num\"] == 0){",
											"        // total 숫자 확인",
											"        pm.expect(jsonData.result.total_count).to.match(/\\d/);",
											"        // recordset null 확인",
											"        pm.expect(recordset).to.null;",
											"    }else{",
											"        let request = pm.request;",
											"        // 전체 조회를 위해 파라미터 값 수정",
											"        request.url.query[\"reference\"][\"start_num\"][\"value\"] = \"-1\";",
											"        request.url.query[\"reference\"][\"paging_type\"][\"value\"] = \"\";",
											"",
											"        pm.expect(recordset).to.not.empty;",
											"        pm.sendRequest(request, function (err, response) {",
											"            let total = response.json().result.recordset;",
											"        ",
											"            // 큐 sorting",
											"            if(query[\"start_num\"]<0){   // 시계 방향 회전",
											"                for(let i=0;i>query[\"start_num\"];i--){",
											"                    total.unshift(total.pop());",
											"                }",
											"            }else{   // 반시계 방향 회전",
											"                for(let i=1;i<query[\"start_num\"];i++){",
											"                    total.push(total.shift());",
											"                }",
											"            }",
											"",
											"            // 데이터 확인",
											"            for(let i in recordset){",
											"                // 정보 확인",
											"                pm.expect(recordset[i].album_id).to.match(/\\w{15}/);",
											"                // 순서 확인",
											"                pm.expect(recordset[i].album_id).to.eql(total[0].album_id);",
											"                total.push(total.shift());",
											"            }",
											"        });",
											"    }",
											"}); ",
											"",
											"// 4) 카테고리 타입 확인",
											"pm.test(\"4) 카테고리 타입 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"// 5) 망타입 확인",
											"pm.test(\"5) 망타입 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    var recordset = jsonData.result.recordset;",
											"    ",
											"    if(query[\"net_typ\"] == \"01\" || query[\"net_typ\"] == \"02\"){",
											"        for(i in recordset){",
											"            pm.expect(recordset[i].is_fh).to.oneOf([\"Y\",\"N\"]);",
											"        }",
											"    }else{",
											"        for(i in recordset){",
											"            pm.expect(recordset[i].is_fh).to.eql(\"N\");",
											"        }",
											"    }",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Host",
										"value": "programming.fleta.com",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://{{mims}}/smartux/getI20AlbumList?sa_id=T61060140414&stb_mac=v000.3529.4486&app_type=UX&start_num=-1&req_count=2&paging_type=&category_id=CP1201M0144&net_typ=01&category_gb=I20&app_name=&ui_version=&pre_page=&cur_page=&dev_info=&os_info=&nw_info=&dev_model=&carrier_type=",
									"protocol": "http",
									"host": [
										"{{mims}}"
									],
									"path": [
										"smartux",
										"getI20AlbumList"
									],
									"query": [
										{
											"key": "sa_id",
											"value": "T61060140414"
										},
										{
											"key": "stb_mac",
											"value": "v000.3529.4486"
										},
										{
											"key": "app_type",
											"value": "UX"
										},
										{
											"key": "start_num",
											"value": "-1"
										},
										{
											"key": "req_count",
											"value": "2"
										},
										{
											"key": "paging_type",
											"value": ""
										},
										{
											"key": "category_id",
											"value": "CP1201M0144"
										},
										{
											"key": "net_typ",
											"value": "01"
										},
										{
											"key": "category_gb",
											"value": "I20"
										},
										{
											"key": "app_name",
											"value": ""
										},
										{
											"key": "ui_version",
											"value": ""
										},
										{
											"key": "pre_page",
											"value": ""
										},
										{
											"key": "cur_page",
											"value": ""
										},
										{
											"key": "dev_info",
											"value": ""
										},
										{
											"key": "os_info",
											"value": ""
										},
										{
											"key": "nw_info",
											"value": ""
										},
										{
											"key": "dev_model",
											"value": ""
										},
										{
											"key": "carrier_type",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "/smartux/getI20AlbumList_NTC195_검수 가입자_SUSA_-1,X,N_02_I30",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// 공통",
											"// WAS 정상응답 체크 (200여부)",
											"pm.test(\"[공통]WAS 정상응답 체크 (200여부)\", function () {",
											"    pm.response.to.have.status(200);   ",
											"});",
											"",
											"// 응답속도 체크(0.5초미만) 여부",
											"pm.test(\"[공통]응답속도 체크(0.5초미만)\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(500);",
											"});",
											"",
											"// 1) 가입자(일반/검수) 구분에 따른 응답 확인",
											"pm.test(\"1) 가입자(일반/검수) 구분에 따른 응답 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"// 2) 어플타입에 따른 응답 구분",
											"pm.test(\"2) 어플타입에 따른 응답 구분\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"// 3) 페이징 확인",
											"var query = {};",
											"pm.request.url.query.all().forEach((param) => { query[param.key] = param.value});",
											"pm.test(\"3) 페이징 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    var recordset = jsonData.result.recordset;",
											"    var total_count = jsonData.result.total_count;",
											"    ",
											"    if(query[\"start_num\"] == -1 && query[\"paging_type\"] != \"N\"){",
											"        // total 숫자 확인",
											"        pm.expect(recordset.length).to.eql(parseInt(total_count));",
											"        // total 개수 확인",
											"        pm.expect(recordset.length).to.eql(parseInt(total_count));",
											"        // 데이터 확인",
											"        for(i in recordset){",
											"            pm.expect(recordset[i].album_id).to.match(/\\w{15}/);",
											"        }",
											"    }else if(query[\"start_num\"] == 0){",
											"        // total 숫자 확인",
											"        pm.expect(jsonData.result.total_count).to.match(/\\d/);",
											"        // recordset null 확인",
											"        pm.expect(recordset).to.null;",
											"    }else{",
											"        let request = pm.request;",
											"        // 전체 조회를 위해 파라미터 값 수정",
											"        request.url.query[\"reference\"][\"start_num\"][\"value\"] = \"-1\";",
											"        request.url.query[\"reference\"][\"paging_type\"][\"value\"] = \"\";",
											"",
											"        pm.expect(recordset).to.not.empty;",
											"        pm.sendRequest(request, function (err, response) {",
											"            let total = response.json().result.recordset;",
											"        ",
											"            // 큐 sorting",
											"            if(query[\"start_num\"]<0){   // 시계 방향 회전",
											"                for(let i=0;i>query[\"start_num\"];i--){",
											"                    total.unshift(total.pop());",
											"                }",
											"            }else{   // 반시계 방향 회전",
											"                for(let i=1;i<query[\"start_num\"];i++){",
											"                    total.push(total.shift());",
											"                }",
											"            }",
											"",
											"            // 데이터 확인",
											"            for(let i in recordset){",
											"                // 정보 확인",
											"                pm.expect(recordset[i].album_id).to.match(/\\w{15}/);",
											"                // 순서 확인",
											"                pm.expect(recordset[i].album_id).to.eql(total[0].album_id);",
											"                total.push(total.shift());",
											"            }",
											"        });",
											"    }",
											"}); ",
											"",
											"// 4) 카테고리 타입 확인",
											"pm.test(\"4) 카테고리 타입 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"// 5) 망타입 확인",
											"pm.test(\"5) 망타입 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    var recordset = jsonData.result.recordset;",
											"    ",
											"    if(query[\"net_typ\"] == \"01\" || query[\"net_typ\"] == \"02\"){",
											"        for(i in recordset){",
											"            pm.expect(recordset[i].is_fh).to.oneOf([\"Y\",\"N\"]);",
											"        }",
											"    }else{",
											"        for(i in recordset){",
											"            pm.expect(recordset[i].is_fh).to.eql(\"N\");",
											"        }",
											"    }",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Host",
										"value": "programming.fleta.com",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://{{mims}}/smartux/getI20AlbumList?sa_id=T61060140414&stb_mac=v000.3529.4486&app_type=SUSA&start_num=-1&req_count=2&paging_type=N&category_id=HM0103JX002&net_typ=02&category_gb=I30&app_name=&ui_version=&pre_page=&cur_page=&dev_info=&os_info=&nw_info=&dev_model=&carrier_type=",
									"protocol": "http",
									"host": [
										"{{mims}}"
									],
									"path": [
										"smartux",
										"getI20AlbumList"
									],
									"query": [
										{
											"key": "sa_id",
											"value": "T61060140414"
										},
										{
											"key": "stb_mac",
											"value": "v000.3529.4486"
										},
										{
											"key": "app_type",
											"value": "SUSA"
										},
										{
											"key": "start_num",
											"value": "-1"
										},
										{
											"key": "req_count",
											"value": "2"
										},
										{
											"key": "paging_type",
											"value": "N"
										},
										{
											"key": "category_id",
											"value": "HM0103JX002"
										},
										{
											"key": "net_typ",
											"value": "02"
										},
										{
											"key": "category_gb",
											"value": "I30"
										},
										{
											"key": "app_name",
											"value": ""
										},
										{
											"key": "ui_version",
											"value": ""
										},
										{
											"key": "pre_page",
											"value": ""
										},
										{
											"key": "cur_page",
											"value": ""
										},
										{
											"key": "dev_info",
											"value": ""
										},
										{
											"key": "os_info",
											"value": ""
										},
										{
											"key": "nw_info",
											"value": ""
										},
										{
											"key": "dev_model",
											"value": ""
										},
										{
											"key": "carrier_type",
											"value": ""
										}
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"// 공통",
									"",
									"// WAS 정상응답 체크 (200여부)",
									"pm.test(\"[공통]WAS 정상응답 체크 (200여부)\", function () {",
									"    pm.response.to.have.status(200);   ",
									"});",
									"",
									"// 응답속도 체크(0.5초미만) 여부",
									"pm.test(\"[공통]응답속도 체크(0.5초미만)\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(500);",
									"});"
								]
							}
						}
					]
				},
				{
					"name": "getMainPanelInterlockingInfo",
					"item": [
						{
							"name": "/smartux/getMainPanelInterlockingInfo_NTC4_일반 가입자_UX_I20_O,O = (AB대상) Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// 공통",
											"// WAS 정상응답 체크 (200여부)",
											"pm.test(\"[공통]WAS 정상응답 체크 (200여부)\", function () {",
											"    pm.response.to.have.status(200);   ",
											"});",
											"",
											"// 응답속도 체크(0.5초미만) 여부",
											"pm.test(\"[공통]응답속도 체크(0.5초미만)\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(500);",
											"});",
											"",
											"// 1) 가입자(일반/검수) 구분에 따른 응답 확인",
											"pm.test(\"1) 가입자(일반/검수) 구분에 따른 응답 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"// 2) 어플타입에 따른 응답 구분",
											"pm.test(\"2) 어플타입에 따른 응답 구분\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"// 3) 카테고리 타입 확인",
											"pm.test(\"3) 카테고리 타입 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"let query = {};",
											"pm.request.url.query.all().forEach((param) => { query[param.key] = param.value});",
											"// 4) AB 테스트 확인",
											"pm.test(\"4) AB 테스트 확인\", function () {",
											"    let code = new RegExp(\"(A\\\\d+_\"+query[\"panel_id\"]+\"_\\\\d+|\"+query[\"panel_id\"]+\"_\\\\d+)\");",
											"    let jsonData = pm.response.json();",
											"    let recordset = jsonData.result.recordset;",
											"",
											"    pm.expect(recordset).to.not.empty;",
											"    for(let i in recordset){",
											"        pm.expect(recordset[i].code).to.match(code);",
											"    }",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Host",
										"value": "programming.fleta.com",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://{{mims}}/smartux/getMainPanelInterlockingInfo?sa_id=T61060140414&stb_mac=8c6d.5044.45dd&app_type=UX&panel_id=CP01&category_gb=I20&testId=T000000237&variationId=V000000500&app_name=&ui_version=&pre_page=&cur_page=&dev_info=&os_info=&nw_info=&dev_model=&carrier_type=",
									"protocol": "http",
									"host": [
										"{{mims}}"
									],
									"path": [
										"smartux",
										"getMainPanelInterlockingInfo"
									],
									"query": [
										{
											"key": "sa_id",
											"value": "T61060140414"
										},
										{
											"key": "stb_mac",
											"value": "8c6d.5044.45dd"
										},
										{
											"key": "app_type",
											"value": "UX"
										},
										{
											"key": "panel_id",
											"value": "CP01"
										},
										{
											"key": "category_gb",
											"value": "I20"
										},
										{
											"key": "testId",
											"value": "T000000237"
										},
										{
											"key": "variationId",
											"value": "V000000500"
										},
										{
											"key": "app_name",
											"value": ""
										},
										{
											"key": "ui_version",
											"value": ""
										},
										{
											"key": "pre_page",
											"value": ""
										},
										{
											"key": "cur_page",
											"value": ""
										},
										{
											"key": "dev_info",
											"value": ""
										},
										{
											"key": "os_info",
											"value": ""
										},
										{
											"key": "nw_info",
											"value": ""
										},
										{
											"key": "dev_model",
											"value": ""
										},
										{
											"key": "carrier_type",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "/smartux/getMainPanelInterlockingInfo_NTC7_일반 가입자_UX_null_null,null Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// 공통",
											"// WAS 정상응답 체크 (200여부)",
											"pm.test(\"[공통]WAS 정상응답 체크 (200여부)\", function () {",
											"    pm.response.to.have.status(200);   ",
											"});",
											"",
											"// 응답속도 체크(0.5초미만) 여부",
											"pm.test(\"[공통]응답속도 체크(0.5초미만)\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(500);",
											"});",
											"",
											"// 1) 가입자(일반/검수) 구분에 따른 응답 확인",
											"pm.test(\"1) 가입자(일반/검수) 구분에 따른 응답 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"// 2) 어플타입에 따른 응답 구분",
											"pm.test(\"2) 어플타입에 따른 응답 구분\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"// 3) 카테고리 타입 확인",
											"pm.test(\"3) 카테고리 타입 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"let query = {};",
											"pm.request.url.query.all().forEach((param) => { query[param.key] = param.value});",
											"// 4) AB 테스트 확인",
											"pm.test(\"4) AB 테스트 확인\", function () {",
											"    let code = new RegExp(\"(A\\\\d+_\"+query[\"panel_id\"]+\"_\\\\d+|\"+query[\"panel_id\"]+\"_\\\\d+)\");",
											"    let jsonData = pm.response.json();",
											"    let recordset = jsonData.result.recordset;",
											"",
											"    pm.expect(recordset).to.not.empty;",
											"    for(let i in recordset){",
											"        pm.expect(recordset[i].code).to.match(code);",
											"    }",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Host",
										"value": "programming.fleta.com",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://{{mims}}/smartux/getMainPanelInterlockingInfo?sa_id=T61060140414&stb_mac=8c6d.5044.45dd&app_type=UX&panel_id=ST02&category_gb=&testId=&variationId=&app_name=&ui_version=&pre_page=&cur_page=&dev_info=&os_info=&nw_info=&dev_model=&carrier_type=",
									"protocol": "http",
									"host": [
										"{{mims}}"
									],
									"path": [
										"smartux",
										"getMainPanelInterlockingInfo"
									],
									"query": [
										{
											"key": "sa_id",
											"value": "T61060140414"
										},
										{
											"key": "stb_mac",
											"value": "8c6d.5044.45dd"
										},
										{
											"key": "app_type",
											"value": "UX"
										},
										{
											"key": "panel_id",
											"value": "ST02"
										},
										{
											"key": "category_gb",
											"value": ""
										},
										{
											"key": "testId",
											"value": ""
										},
										{
											"key": "variationId",
											"value": ""
										},
										{
											"key": "app_name",
											"value": ""
										},
										{
											"key": "ui_version",
											"value": ""
										},
										{
											"key": "pre_page",
											"value": ""
										},
										{
											"key": "cur_page",
											"value": ""
										},
										{
											"key": "dev_info",
											"value": ""
										},
										{
											"key": "os_info",
											"value": ""
										},
										{
											"key": "nw_info",
											"value": ""
										},
										{
											"key": "dev_model",
											"value": ""
										},
										{
											"key": "carrier_type",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "/smartux/getMainPanelInterlockingInfo_NTC68_검수 가입자_UX_I30_X,null Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// 공통",
											"// WAS 정상응답 체크 (200여부)",
											"pm.test(\"[공통]WAS 정상응답 체크 (200여부)\", function () {",
											"    pm.response.to.have.status(200);   ",
											"});",
											"",
											"// 응답속도 체크(0.5초미만) 여부",
											"pm.test(\"[공통]응답속도 체크(0.5초미만)\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(500);",
											"});",
											"",
											"// 1) 가입자(일반/검수) 구분에 따른 응답 확인",
											"pm.test(\"1) 가입자(일반/검수) 구분에 따른 응답 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"// 2) 어플타입에 따른 응답 구분",
											"pm.test(\"2) 어플타입에 따른 응답 구분\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"// 3) 카테고리 타입 확인",
											"pm.test(\"3) 카테고리 타입 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"let query = {};",
											"pm.request.url.query.all().forEach((param) => { query[param.key] = param.value});",
											"// 4) AB 테스트 확인",
											"pm.test(\"4) AB 테스트 확인\", function () {",
											"    let code = new RegExp(\"(A\\\\d+_\"+query[\"panel_id\"]+\"_\\\\d+|\"+query[\"panel_id\"]+\"_\\\\d+)\");",
											"    let jsonData = pm.response.json();",
											"    let recordset = jsonData.result.recordset;",
											"",
											"    pm.expect(recordset).to.not.empty;",
											"    for(let i in recordset){",
											"        pm.expect(recordset[i].code).to.match(code);",
											"    }",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Host",
										"value": "programming.fleta.com",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://{{mims}}/smartux/getMainPanelInterlockingInfo?sa_id=T61060140414&stb_mac=v000.3529.4486&app_type=UX&panel_id=ST01&category_gb=I30&testId=QQQQ&variationId=&app_name=&ui_version=&pre_page=&cur_page=&dev_info=&os_info=&nw_info=&dev_model=&carrier_type=",
									"protocol": "http",
									"host": [
										"{{mims}}"
									],
									"path": [
										"smartux",
										"getMainPanelInterlockingInfo"
									],
									"query": [
										{
											"key": "sa_id",
											"value": "T61060140414"
										},
										{
											"key": "stb_mac",
											"value": "v000.3529.4486"
										},
										{
											"key": "app_type",
											"value": "UX"
										},
										{
											"key": "panel_id",
											"value": "ST01"
										},
										{
											"key": "category_gb",
											"value": "I30"
										},
										{
											"key": "testId",
											"value": "QQQQ"
										},
										{
											"key": "variationId",
											"value": ""
										},
										{
											"key": "app_name",
											"value": ""
										},
										{
											"key": "ui_version",
											"value": ""
										},
										{
											"key": "pre_page",
											"value": ""
										},
										{
											"key": "cur_page",
											"value": ""
										},
										{
											"key": "dev_info",
											"value": ""
										},
										{
											"key": "os_info",
											"value": ""
										},
										{
											"key": "nw_info",
											"value": ""
										},
										{
											"key": "dev_model",
											"value": ""
										},
										{
											"key": "carrier_type",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "/smartux/getMainPanelInterlockingInfo_NTC107_검수 가입자_SUSA_I30_O,O = (AB대상아님) Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// 공통",
											"// WAS 정상응답 체크 (200여부)",
											"pm.test(\"[공통]WAS 정상응답 체크 (200여부)\", function () {",
											"    pm.response.to.have.status(200);   ",
											"});",
											"",
											"// 응답속도 체크(0.5초미만) 여부",
											"pm.test(\"[공통]응답속도 체크(0.5초미만)\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(500);",
											"});",
											"",
											"// 1) 가입자(일반/검수) 구분에 따른 응답 확인",
											"pm.test(\"1) 가입자(일반/검수) 구분에 따른 응답 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"// 2) 어플타입에 따른 응답 구분",
											"pm.test(\"2) 어플타입에 따른 응답 구분\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"// 3) 카테고리 타입 확인",
											"pm.test(\"3) 카테고리 타입 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"let query = {};",
											"pm.request.url.query.all().forEach((param) => { query[param.key] = param.value});",
											"// 4) AB 테스트 확인",
											"pm.test(\"4) AB 테스트 확인\", function () {",
											"    let code = new RegExp(\"(A\\\\d+_\"+query[\"panel_id\"]+\"_\\\\d+|\"+query[\"panel_id\"]+\"_\\\\d+)\");",
											"    let jsonData = pm.response.json();",
											"    let recordset = jsonData.result.recordset;",
											"",
											"    pm.expect(recordset).to.not.empty;",
											"    for(let i in recordset){",
											"        pm.expect(recordset[i].code).to.match(code);",
											"    }",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Host",
										"value": "programming.fleta.com",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://{{mims}}/smartux/getMainPanelInterlockingInfo?sa_id=T61060140414&stb_mac=v000.3529.4486&app_type=SUSA&panel_id=ST01&category_gb=I30&testId=T000000237&variationId=Q000000500&app_name=&ui_version=&pre_page=&cur_page=&dev_info=&os_info=&nw_info=&dev_model=&carrier_type=",
									"protocol": "http",
									"host": [
										"{{mims}}"
									],
									"path": [
										"smartux",
										"getMainPanelInterlockingInfo"
									],
									"query": [
										{
											"key": "sa_id",
											"value": "T61060140414"
										},
										{
											"key": "stb_mac",
											"value": "v000.3529.4486"
										},
										{
											"key": "app_type",
											"value": "SUSA"
										},
										{
											"key": "panel_id",
											"value": "ST01"
										},
										{
											"key": "category_gb",
											"value": "I30"
										},
										{
											"key": "testId",
											"value": "T000000237"
										},
										{
											"key": "variationId",
											"value": "Q000000500"
										},
										{
											"key": "app_name",
											"value": ""
										},
										{
											"key": "ui_version",
											"value": ""
										},
										{
											"key": "pre_page",
											"value": ""
										},
										{
											"key": "cur_page",
											"value": ""
										},
										{
											"key": "dev_info",
											"value": ""
										},
										{
											"key": "os_info",
											"value": ""
										},
										{
											"key": "nw_info",
											"value": ""
										},
										{
											"key": "dev_model",
											"value": ""
										},
										{
											"key": "carrier_type",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "/smartux/getMainPanelInterlockingInfo_NTC65_검수 가입자_UX_null_O,O = (AB대상아님) Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// 공통",
											"// WAS 정상응답 체크 (200여부)",
											"pm.test(\"[공통]WAS 정상응답 체크 (200여부)\", function () {",
											"    pm.response.to.have.status(200);   ",
											"});",
											"",
											"// 응답속도 체크(0.5초미만) 여부",
											"pm.test(\"[공통]응답속도 체크(0.5초미만)\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(500);",
											"});",
											"",
											"// 1) 가입자(일반/검수) 구분에 따른 응답 확인",
											"pm.test(\"1) 가입자(일반/검수) 구분에 따른 응답 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"// 2) 어플타입에 따른 응답 구분",
											"pm.test(\"2) 어플타입에 따른 응답 구분\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"// 3) 카테고리 타입 확인",
											"pm.test(\"3) 카테고리 타입 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"let query = {};",
											"pm.request.url.query.all().forEach((param) => { query[param.key] = param.value});",
											"// 4) AB 테스트 확인",
											"pm.test(\"4) AB 테스트 확인\", function () {",
											"    let code = new RegExp(\"(A\\\\d+_\"+query[\"panel_id\"]+\"_\\\\d+|\"+query[\"panel_id\"]+\"_\\\\d+)\");",
											"    let jsonData = pm.response.json();",
											"    let recordset = jsonData.result.recordset;",
											"",
											"    pm.expect(recordset).to.not.empty;",
											"    for(let i in recordset){",
											"        pm.expect(recordset[i].code).to.match(code);",
											"    }",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Host",
										"value": "programming.fleta.com",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://{{mims}}/smartux/getMainPanelInterlockingInfo?sa_id=T61060140414&stb_mac=v000.3529.4486&app_type=UX&panel_id=ST02&category_gb=&testId=T000000237&variationId=Q000000500&app_name=&ui_version=&pre_page=&cur_page=&dev_info=&os_info=&nw_info=&dev_model=&carrier_type=",
									"protocol": "http",
									"host": [
										"{{mims}}"
									],
									"path": [
										"smartux",
										"getMainPanelInterlockingInfo"
									],
									"query": [
										{
											"key": "sa_id",
											"value": "T61060140414"
										},
										{
											"key": "stb_mac",
											"value": "v000.3529.4486"
										},
										{
											"key": "app_type",
											"value": "UX"
										},
										{
											"key": "panel_id",
											"value": "ST02"
										},
										{
											"key": "category_gb",
											"value": ""
										},
										{
											"key": "testId",
											"value": "T000000237"
										},
										{
											"key": "variationId",
											"value": "Q000000500"
										},
										{
											"key": "app_name",
											"value": ""
										},
										{
											"key": "ui_version",
											"value": ""
										},
										{
											"key": "pre_page",
											"value": ""
										},
										{
											"key": "cur_page",
											"value": ""
										},
										{
											"key": "dev_info",
											"value": ""
										},
										{
											"key": "os_info",
											"value": ""
										},
										{
											"key": "nw_info",
											"value": ""
										},
										{
											"key": "dev_model",
											"value": ""
										},
										{
											"key": "carrier_type",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "/smartux/getMainPanelInterlockingInfo_NTC88_검수 가입자_SMA_I30_O,O = (AB대상) Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// 공통",
											"// WAS 정상응답 체크 (200여부)",
											"pm.test(\"[공통]WAS 정상응답 체크 (200여부)\", function () {",
											"    pm.response.to.have.status(200);   ",
											"});",
											"",
											"// 응답속도 체크(0.5초미만) 여부",
											"pm.test(\"[공통]응답속도 체크(0.5초미만)\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(500);",
											"});",
											"",
											"// 1) 가입자(일반/검수) 구분에 따른 응답 확인",
											"pm.test(\"1) 가입자(일반/검수) 구분에 따른 응답 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"// 2) 어플타입에 따른 응답 구분",
											"pm.test(\"2) 어플타입에 따른 응답 구분\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"// 3) 카테고리 타입 확인",
											"pm.test(\"3) 카테고리 타입 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"let query = {};",
											"pm.request.url.query.all().forEach((param) => { query[param.key] = param.value});",
											"// 4) AB 테스트 확인",
											"pm.test(\"4) AB 테스트 확인\", function () {",
											"    let code = new RegExp(\"(A\\\\d+_\"+query[\"panel_id\"]+\"_\\\\d+|\"+query[\"panel_id\"]+\"_\\\\d+)\");",
											"    let jsonData = pm.response.json();",
											"    let recordset = jsonData.result.recordset;",
											"",
											"    pm.expect(recordset).to.not.empty;",
											"    for(let i in recordset){",
											"        pm.expect(recordset[i].code).to.match(code);",
											"    }",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Host",
										"value": "programming.fleta.com",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://{{mims}}/smartux/getMainPanelInterlockingInfo?sa_id=T61060140414&stb_mac=v000.3529.4486&app_type=SMA&panel_id=CP01&category_gb=I30&testId=T000000237&variationId=V000000500&app_name=&ui_version=&pre_page=&cur_page=&dev_info=&os_info=&nw_info=&dev_model=&carrier_type=",
									"protocol": "http",
									"host": [
										"{{mims}}"
									],
									"path": [
										"smartux",
										"getMainPanelInterlockingInfo"
									],
									"query": [
										{
											"key": "sa_id",
											"value": "T61060140414"
										},
										{
											"key": "stb_mac",
											"value": "v000.3529.4486"
										},
										{
											"key": "app_type",
											"value": "SMA"
										},
										{
											"key": "panel_id",
											"value": "CP01"
										},
										{
											"key": "category_gb",
											"value": "I30"
										},
										{
											"key": "testId",
											"value": "T000000237"
										},
										{
											"key": "variationId",
											"value": "V000000500"
										},
										{
											"key": "app_name",
											"value": ""
										},
										{
											"key": "ui_version",
											"value": ""
										},
										{
											"key": "pre_page",
											"value": ""
										},
										{
											"key": "cur_page",
											"value": ""
										},
										{
											"key": "dev_info",
											"value": ""
										},
										{
											"key": "os_info",
											"value": ""
										},
										{
											"key": "nw_info",
											"value": ""
										},
										{
											"key": "dev_model",
											"value": ""
										},
										{
											"key": "carrier_type",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "/smartux/getMainPanelInterlockingInfo_NTC21_일반 가입자_SMA_I20_null,X Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// 공통",
											"// WAS 정상응답 체크 (200여부)",
											"pm.test(\"[공통]WAS 정상응답 체크 (200여부)\", function () {",
											"    pm.response.to.have.status(200);   ",
											"});",
											"",
											"// 응답속도 체크(0.5초미만) 여부",
											"pm.test(\"[공통]응답속도 체크(0.5초미만)\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(500);",
											"});",
											"",
											"// 1) 가입자(일반/검수) 구분에 따른 응답 확인",
											"pm.test(\"1) 가입자(일반/검수) 구분에 따른 응답 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"// 2) 어플타입에 따른 응답 구분",
											"pm.test(\"2) 어플타입에 따른 응답 구분\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"// 3) 카테고리 타입 확인",
											"pm.test(\"3) 카테고리 타입 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"let query = {};",
											"pm.request.url.query.all().forEach((param) => { query[param.key] = param.value});",
											"// 4) AB 테스트 확인",
											"pm.test(\"4) AB 테스트 확인\", function () {",
											"    let code = new RegExp(\"(A\\\\d+_\"+query[\"panel_id\"]+\"_\\\\d+|\"+query[\"panel_id\"]+\"_\\\\d+)\");",
											"    let jsonData = pm.response.json();",
											"    let recordset = jsonData.result.recordset;",
											"",
											"    pm.expect(recordset).to.not.empty;",
											"    for(let i in recordset){",
											"        pm.expect(recordset[i].code).to.match(code);",
											"    }",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Host",
										"value": "programming.fleta.com",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://{{mims}}/smartux/getMainPanelInterlockingInfo?sa_id=T61060140414&stb_mac=8c6d.5044.45dd&app_type=SMA&panel_id=ST02&category_gb=I20&testId=&variationId=QQQQ&app_name=&ui_version=&pre_page=&cur_page=&dev_info=&os_info=&nw_info=&dev_model=&carrier_type=",
									"protocol": "http",
									"host": [
										"{{mims}}"
									],
									"path": [
										"smartux",
										"getMainPanelInterlockingInfo"
									],
									"query": [
										{
											"key": "sa_id",
											"value": "T61060140414"
										},
										{
											"key": "stb_mac",
											"value": "8c6d.5044.45dd"
										},
										{
											"key": "app_type",
											"value": "SMA"
										},
										{
											"key": "panel_id",
											"value": "ST02"
										},
										{
											"key": "category_gb",
											"value": "I20"
										},
										{
											"key": "testId",
											"value": ""
										},
										{
											"key": "variationId",
											"value": "QQQQ"
										},
										{
											"key": "app_name",
											"value": ""
										},
										{
											"key": "ui_version",
											"value": ""
										},
										{
											"key": "pre_page",
											"value": ""
										},
										{
											"key": "cur_page",
											"value": ""
										},
										{
											"key": "dev_info",
											"value": ""
										},
										{
											"key": "os_info",
											"value": ""
										},
										{
											"key": "nw_info",
											"value": ""
										},
										{
											"key": "dev_model",
											"value": ""
										},
										{
											"key": "carrier_type",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "/smartux/getMainPanelInterlockingInfo_NTC17_일반 가입자_UX_I30_O,O = (AB대상아님) Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// 공통",
											"// WAS 정상응답 체크 (200여부)",
											"pm.test(\"[공통]WAS 정상응답 체크 (200여부)\", function () {",
											"    pm.response.to.have.status(200);   ",
											"});",
											"",
											"// 응답속도 체크(0.5초미만) 여부",
											"pm.test(\"[공통]응답속도 체크(0.5초미만)\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(500);",
											"});",
											"",
											"// 1) 가입자(일반/검수) 구분에 따른 응답 확인",
											"pm.test(\"1) 가입자(일반/검수) 구분에 따른 응답 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"// 2) 어플타입에 따른 응답 구분",
											"pm.test(\"2) 어플타입에 따른 응답 구분\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"// 3) 카테고리 타입 확인",
											"pm.test(\"3) 카테고리 타입 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"let query = {};",
											"pm.request.url.query.all().forEach((param) => { query[param.key] = param.value});",
											"// 4) AB 테스트 확인",
											"pm.test(\"4) AB 테스트 확인\", function () {",
											"    let code = new RegExp(\"(A\\\\d+_\"+query[\"panel_id\"]+\"_\\\\d+|\"+query[\"panel_id\"]+\"_\\\\d+)\");",
											"    let jsonData = pm.response.json();",
											"    let recordset = jsonData.result.recordset;",
											"",
											"    pm.expect(recordset).to.not.empty;",
											"    for(let i in recordset){",
											"        pm.expect(recordset[i].code).to.match(code);",
											"    }",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Host",
										"value": "programming.fleta.com",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://{{mims}}/smartux/getMainPanelInterlockingInfo?sa_id=T61060140414&stb_mac=8c6d.5044.45dd&app_type=UX&panel_id=ST01&category_gb=I30&testId=T000000237&variationId=Q000000500&app_name=&ui_version=&pre_page=&cur_page=&dev_info=&os_info=&nw_info=&dev_model=&carrier_type=",
									"protocol": "http",
									"host": [
										"{{mims}}"
									],
									"path": [
										"smartux",
										"getMainPanelInterlockingInfo"
									],
									"query": [
										{
											"key": "sa_id",
											"value": "T61060140414"
										},
										{
											"key": "stb_mac",
											"value": "8c6d.5044.45dd"
										},
										{
											"key": "app_type",
											"value": "UX"
										},
										{
											"key": "panel_id",
											"value": "ST01"
										},
										{
											"key": "category_gb",
											"value": "I30"
										},
										{
											"key": "testId",
											"value": "T000000237"
										},
										{
											"key": "variationId",
											"value": "Q000000500"
										},
										{
											"key": "app_name",
											"value": ""
										},
										{
											"key": "ui_version",
											"value": ""
										},
										{
											"key": "pre_page",
											"value": ""
										},
										{
											"key": "cur_page",
											"value": ""
										},
										{
											"key": "dev_info",
											"value": ""
										},
										{
											"key": "os_info",
											"value": ""
										},
										{
											"key": "nw_info",
											"value": ""
										},
										{
											"key": "dev_model",
											"value": ""
										},
										{
											"key": "carrier_type",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "/smartux/getMainPanelInterlockingInfo_NTC59_검수 가입자_UX_I20_O,O = (AB대상아님) Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// 공통",
											"// WAS 정상응답 체크 (200여부)",
											"pm.test(\"[공통]WAS 정상응답 체크 (200여부)\", function () {",
											"    pm.response.to.have.status(200);   ",
											"});",
											"",
											"// 응답속도 체크(0.5초미만) 여부",
											"pm.test(\"[공통]응답속도 체크(0.5초미만)\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(500);",
											"});",
											"",
											"// 1) 가입자(일반/검수) 구분에 따른 응답 확인",
											"pm.test(\"1) 가입자(일반/검수) 구분에 따른 응답 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"// 2) 어플타입에 따른 응답 구분",
											"pm.test(\"2) 어플타입에 따른 응답 구분\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"// 3) 카테고리 타입 확인",
											"pm.test(\"3) 카테고리 타입 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"let query = {};",
											"pm.request.url.query.all().forEach((param) => { query[param.key] = param.value});",
											"// 4) AB 테스트 확인",
											"pm.test(\"4) AB 테스트 확인\", function () {",
											"    let code = new RegExp(\"(A\\\\d+_\"+query[\"panel_id\"]+\"_\\\\d+|\"+query[\"panel_id\"]+\"_\\\\d+)\");",
											"    let jsonData = pm.response.json();",
											"    let recordset = jsonData.result.recordset;",
											"",
											"    pm.expect(recordset).to.not.empty;",
											"    for(let i in recordset){",
											"        pm.expect(recordset[i].code).to.match(code);",
											"    }",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Host",
										"value": "programming.fleta.com",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://{{mims}}/smartux/getMainPanelInterlockingInfo?sa_id=T61060140414&stb_mac=v000.3529.4486&app_type=UX&panel_id=ST02&category_gb=I20&testId=T000000237&variationId=Q000000500&app_name=&ui_version=&pre_page=&cur_page=&dev_info=&os_info=&nw_info=&dev_model=&carrier_type=",
									"protocol": "http",
									"host": [
										"{{mims}}"
									],
									"path": [
										"smartux",
										"getMainPanelInterlockingInfo"
									],
									"query": [
										{
											"key": "sa_id",
											"value": "T61060140414"
										},
										{
											"key": "stb_mac",
											"value": "v000.3529.4486"
										},
										{
											"key": "app_type",
											"value": "UX"
										},
										{
											"key": "panel_id",
											"value": "ST02"
										},
										{
											"key": "category_gb",
											"value": "I20"
										},
										{
											"key": "testId",
											"value": "T000000237"
										},
										{
											"key": "variationId",
											"value": "Q000000500"
										},
										{
											"key": "app_name",
											"value": ""
										},
										{
											"key": "ui_version",
											"value": ""
										},
										{
											"key": "pre_page",
											"value": ""
										},
										{
											"key": "cur_page",
											"value": ""
										},
										{
											"key": "dev_info",
											"value": ""
										},
										{
											"key": "os_info",
											"value": ""
										},
										{
											"key": "nw_info",
											"value": ""
										},
										{
											"key": "dev_model",
											"value": ""
										},
										{
											"key": "carrier_type",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "/smartux/getMainPanelInterlockingInfo_NTC95_검수 가입자_SUSA_I20_O,O = (AB대상아님) Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// 공통",
											"// WAS 정상응답 체크 (200여부)",
											"pm.test(\"[공통]WAS 정상응답 체크 (200여부)\", function () {",
											"    pm.response.to.have.status(200);   ",
											"});",
											"",
											"// 응답속도 체크(0.5초미만) 여부",
											"pm.test(\"[공통]응답속도 체크(0.5초미만)\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(500);",
											"});",
											"",
											"// 1) 가입자(일반/검수) 구분에 따른 응답 확인",
											"pm.test(\"1) 가입자(일반/검수) 구분에 따른 응답 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"// 2) 어플타입에 따른 응답 구분",
											"pm.test(\"2) 어플타입에 따른 응답 구분\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"// 3) 카테고리 타입 확인",
											"pm.test(\"3) 카테고리 타입 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"let query = {};",
											"pm.request.url.query.all().forEach((param) => { query[param.key] = param.value});",
											"// 4) AB 테스트 확인",
											"pm.test(\"4) AB 테스트 확인\", function () {",
											"    let code = new RegExp(\"(A\\\\d+_\"+query[\"panel_id\"]+\"_\\\\d+|\"+query[\"panel_id\"]+\"_\\\\d+)\");",
											"    let jsonData = pm.response.json();",
											"    let recordset = jsonData.result.recordset;",
											"",
											"    pm.expect(recordset).to.not.empty;",
											"    for(let i in recordset){",
											"        pm.expect(recordset[i].code).to.match(code);",
											"    }",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Host",
										"value": "programming.fleta.com",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://{{mims}}/smartux/getMainPanelInterlockingInfo?sa_id=T61060140414&stb_mac=v000.3529.4486&app_type=SUSA&panel_id=ST02&category_gb=I20&testId=T000000237&variationId=Q000000500&app_name=&ui_version=&pre_page=&cur_page=&dev_info=&os_info=&nw_info=&dev_model=&carrier_type=",
									"protocol": "http",
									"host": [
										"{{mims}}"
									],
									"path": [
										"smartux",
										"getMainPanelInterlockingInfo"
									],
									"query": [
										{
											"key": "sa_id",
											"value": "T61060140414"
										},
										{
											"key": "stb_mac",
											"value": "v000.3529.4486"
										},
										{
											"key": "app_type",
											"value": "SUSA"
										},
										{
											"key": "panel_id",
											"value": "ST02"
										},
										{
											"key": "category_gb",
											"value": "I20"
										},
										{
											"key": "testId",
											"value": "T000000237"
										},
										{
											"key": "variationId",
											"value": "Q000000500"
										},
										{
											"key": "app_name",
											"value": ""
										},
										{
											"key": "ui_version",
											"value": ""
										},
										{
											"key": "pre_page",
											"value": ""
										},
										{
											"key": "cur_page",
											"value": ""
										},
										{
											"key": "dev_info",
											"value": ""
										},
										{
											"key": "os_info",
											"value": ""
										},
										{
											"key": "nw_info",
											"value": ""
										},
										{
											"key": "dev_model",
											"value": ""
										},
										{
											"key": "carrier_type",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "/smartux/getMainPanelInterlockingInfo_NTC53_일반 가입자_SUSA_I30_O,O = (AB대상아님) Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// 공통",
											"// WAS 정상응답 체크 (200여부)",
											"pm.test(\"[공통]WAS 정상응답 체크 (200여부)\", function () {",
											"    pm.response.to.have.status(200);   ",
											"});",
											"",
											"// 응답속도 체크(0.5초미만) 여부",
											"pm.test(\"[공통]응답속도 체크(0.5초미만)\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(500);",
											"});",
											"",
											"// 1) 가입자(일반/검수) 구분에 따른 응답 확인",
											"pm.test(\"1) 가입자(일반/검수) 구분에 따른 응답 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"// 2) 어플타입에 따른 응답 구분",
											"pm.test(\"2) 어플타입에 따른 응답 구분\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"// 3) 카테고리 타입 확인",
											"pm.test(\"3) 카테고리 타입 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"let query = {};",
											"pm.request.url.query.all().forEach((param) => { query[param.key] = param.value});",
											"// 4) AB 테스트 확인",
											"pm.test(\"4) AB 테스트 확인\", function () {",
											"    let code = new RegExp(\"(A\\\\d+_\"+query[\"panel_id\"]+\"_\\\\d+|\"+query[\"panel_id\"]+\"_\\\\d+)\");",
											"    let jsonData = pm.response.json();",
											"    let recordset = jsonData.result.recordset;",
											"",
											"    pm.expect(recordset).to.not.empty;",
											"    for(let i in recordset){",
											"        pm.expect(recordset[i].code).to.match(code);",
											"    }",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Host",
										"value": "programming.fleta.com",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://{{mims}}/smartux/getMainPanelInterlockingInfo?sa_id=T61060140414&stb_mac=8c6d.5044.45dd&app_type=SUSA&panel_id=ST01&category_gb=I30&testId=T000000237&variationId=Q000000500&app_name=&ui_version=&pre_page=&cur_page=&dev_info=&os_info=&nw_info=&dev_model=&carrier_type=",
									"protocol": "http",
									"host": [
										"{{mims}}"
									],
									"path": [
										"smartux",
										"getMainPanelInterlockingInfo"
									],
									"query": [
										{
											"key": "sa_id",
											"value": "T61060140414"
										},
										{
											"key": "stb_mac",
											"value": "8c6d.5044.45dd"
										},
										{
											"key": "app_type",
											"value": "SUSA"
										},
										{
											"key": "panel_id",
											"value": "ST01"
										},
										{
											"key": "category_gb",
											"value": "I30"
										},
										{
											"key": "testId",
											"value": "T000000237"
										},
										{
											"key": "variationId",
											"value": "Q000000500"
										},
										{
											"key": "app_name",
											"value": ""
										},
										{
											"key": "ui_version",
											"value": ""
										},
										{
											"key": "pre_page",
											"value": ""
										},
										{
											"key": "cur_page",
											"value": ""
										},
										{
											"key": "dev_info",
											"value": ""
										},
										{
											"key": "os_info",
											"value": ""
										},
										{
											"key": "nw_info",
											"value": ""
										},
										{
											"key": "dev_model",
											"value": ""
										},
										{
											"key": "carrier_type",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "/smartux/getMainPanelInterlockingInfo_NTC52_일반 가입자_SUSA_I30_O,O = (AB대상) Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// 공통",
											"// WAS 정상응답 체크 (200여부)",
											"pm.test(\"[공통]WAS 정상응답 체크 (200여부)\", function () {",
											"    pm.response.to.have.status(200);   ",
											"});",
											"",
											"// 응답속도 체크(0.5초미만) 여부",
											"pm.test(\"[공통]응답속도 체크(0.5초미만)\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(500);",
											"});",
											"",
											"// 1) 가입자(일반/검수) 구분에 따른 응답 확인",
											"pm.test(\"1) 가입자(일반/검수) 구분에 따른 응답 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"// 2) 어플타입에 따른 응답 구분",
											"pm.test(\"2) 어플타입에 따른 응답 구분\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"// 3) 카테고리 타입 확인",
											"pm.test(\"3) 카테고리 타입 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"let query = {};",
											"pm.request.url.query.all().forEach((param) => { query[param.key] = param.value});",
											"// 4) AB 테스트 확인",
											"pm.test(\"4) AB 테스트 확인\", function () {",
											"    let code = new RegExp(\"(A\\\\d+_\"+query[\"panel_id\"]+\"_\\\\d+|\"+query[\"panel_id\"]+\"_\\\\d+)\");",
											"    let jsonData = pm.response.json();",
											"    let recordset = jsonData.result.recordset;",
											"",
											"    pm.expect(recordset).to.not.empty;",
											"    for(let i in recordset){",
											"        pm.expect(recordset[i].code).to.match(code);",
											"    }",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Host",
										"value": "programming.fleta.com",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://{{mims}}/smartux/getMainPanelInterlockingInfo?sa_id=T61060140414&stb_mac=8c6d.5044.45dd&app_type=SUSA&panel_id=CP01&category_gb=I30&testId=T000000237&variationId=V000000500&app_name=&ui_version=&pre_page=&cur_page=&dev_info=&os_info=&nw_info=&dev_model=&carrier_type=",
									"protocol": "http",
									"host": [
										"{{mims}}"
									],
									"path": [
										"smartux",
										"getMainPanelInterlockingInfo"
									],
									"query": [
										{
											"key": "sa_id",
											"value": "T61060140414"
										},
										{
											"key": "stb_mac",
											"value": "8c6d.5044.45dd"
										},
										{
											"key": "app_type",
											"value": "SUSA"
										},
										{
											"key": "panel_id",
											"value": "CP01"
										},
										{
											"key": "category_gb",
											"value": "I30"
										},
										{
											"key": "testId",
											"value": "T000000237"
										},
										{
											"key": "variationId",
											"value": "V000000500"
										},
										{
											"key": "app_name",
											"value": ""
										},
										{
											"key": "ui_version",
											"value": ""
										},
										{
											"key": "pre_page",
											"value": ""
										},
										{
											"key": "cur_page",
											"value": ""
										},
										{
											"key": "dev_info",
											"value": ""
										},
										{
											"key": "os_info",
											"value": ""
										},
										{
											"key": "nw_info",
											"value": ""
										},
										{
											"key": "dev_model",
											"value": ""
										},
										{
											"key": "carrier_type",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "/smartux/getMainPanelInterlockingInfo_NTC83_검수 가입자_SMA_null_O,O = (AB대상아님) Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// 공통",
											"// WAS 정상응답 체크 (200여부)",
											"pm.test(\"[공통]WAS 정상응답 체크 (200여부)\", function () {",
											"    pm.response.to.have.status(200);   ",
											"});",
											"",
											"// 응답속도 체크(0.5초미만) 여부",
											"pm.test(\"[공통]응답속도 체크(0.5초미만)\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(500);",
											"});",
											"",
											"// 1) 가입자(일반/검수) 구분에 따른 응답 확인",
											"pm.test(\"1) 가입자(일반/검수) 구분에 따른 응답 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"// 2) 어플타입에 따른 응답 구분",
											"pm.test(\"2) 어플타입에 따른 응답 구분\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"// 3) 카테고리 타입 확인",
											"pm.test(\"3) 카테고리 타입 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"let query = {};",
											"pm.request.url.query.all().forEach((param) => { query[param.key] = param.value});",
											"// 4) AB 테스트 확인",
											"pm.test(\"4) AB 테스트 확인\", function () {",
											"    let code = new RegExp(\"(A\\\\d+_\"+query[\"panel_id\"]+\"_\\\\d+|\"+query[\"panel_id\"]+\"_\\\\d+)\");",
											"    let jsonData = pm.response.json();",
											"    let recordset = jsonData.result.recordset;",
											"",
											"    pm.expect(recordset).to.not.empty;",
											"    for(let i in recordset){",
											"        pm.expect(recordset[i].code).to.match(code);",
											"    }",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Host",
										"value": "programming.fleta.com",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://{{mims}}/smartux/getMainPanelInterlockingInfo?sa_id=T61060140414&stb_mac=v000.3529.4486&app_type=SMA&panel_id=ST02&category_gb=&testId=T000000237&variationId=Q000000500&app_name=&ui_version=&pre_page=&cur_page=&dev_info=&os_info=&nw_info=&dev_model=&carrier_type=",
									"protocol": "http",
									"host": [
										"{{mims}}"
									],
									"path": [
										"smartux",
										"getMainPanelInterlockingInfo"
									],
									"query": [
										{
											"key": "sa_id",
											"value": "T61060140414"
										},
										{
											"key": "stb_mac",
											"value": "v000.3529.4486"
										},
										{
											"key": "app_type",
											"value": "SMA"
										},
										{
											"key": "panel_id",
											"value": "ST02"
										},
										{
											"key": "category_gb",
											"value": ""
										},
										{
											"key": "testId",
											"value": "T000000237"
										},
										{
											"key": "variationId",
											"value": "Q000000500"
										},
										{
											"key": "app_name",
											"value": ""
										},
										{
											"key": "ui_version",
											"value": ""
										},
										{
											"key": "pre_page",
											"value": ""
										},
										{
											"key": "cur_page",
											"value": ""
										},
										{
											"key": "dev_info",
											"value": ""
										},
										{
											"key": "os_info",
											"value": ""
										},
										{
											"key": "nw_info",
											"value": ""
										},
										{
											"key": "dev_model",
											"value": ""
										},
										{
											"key": "carrier_type",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "/smartux/getMainPanelInterlockingInfo_ATC10_category_gb 가 미정의된 입력값일때 Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// 공통",
											"// WAS 정상응답 체크 (200여부)",
											"pm.test(\"[공통]WAS 정상응답 체크 (200여부)\", function () {",
											"    pm.response.to.have.status(200);   ",
											"});",
											"",
											"// 응답속도 체크(0.5초미만) 여부",
											"pm.test(\"[공통]응답속도 체크(0.5초미만)\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(500);",
											"});",
											"",
											"// 1) category_gb 가 미정의된 입력값일때\r",
											"pm.test(\"1) category_gb 가 미정의된 입력값일때\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");\r",
											"});\r"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Host",
										"value": "programming.fleta.com",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://{{mims}}/smartux/getMainPanelInterlockingInfo?sa_id=T61060140414&stb_mac=8c6d.5044.45dd&app_type=UX&panel_id=ST02&category_gb=QQQ&testId=&variationId=&app_name=&ui_version=&pre_page=&cur_page=&dev_info=&os_info=&nw_info=&dev_model=&carrier_type=",
									"protocol": "http",
									"host": [
										"{{mims}}"
									],
									"path": [
										"smartux",
										"getMainPanelInterlockingInfo"
									],
									"query": [
										{
											"key": "sa_id",
											"value": "T61060140414"
										},
										{
											"key": "stb_mac",
											"value": "8c6d.5044.45dd"
										},
										{
											"key": "app_type",
											"value": "UX"
										},
										{
											"key": "panel_id",
											"value": "ST02"
										},
										{
											"key": "category_gb",
											"value": "QQQ"
										},
										{
											"key": "testId",
											"value": ""
										},
										{
											"key": "variationId",
											"value": ""
										},
										{
											"key": "app_name",
											"value": ""
										},
										{
											"key": "ui_version",
											"value": ""
										},
										{
											"key": "pre_page",
											"value": ""
										},
										{
											"key": "cur_page",
											"value": ""
										},
										{
											"key": "dev_info",
											"value": ""
										},
										{
											"key": "os_info",
											"value": ""
										},
										{
											"key": "nw_info",
											"value": ""
										},
										{
											"key": "dev_model",
											"value": ""
										},
										{
											"key": "carrier_type",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "/smartux/getMainPanelInterlockingInfo_NTC10_일반 가입자_UX_null_O,O = (AB대상) Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// 공통",
											"// WAS 정상응답 체크 (200여부)",
											"pm.test(\"[공통]WAS 정상응답 체크 (200여부)\", function () {",
											"    pm.response.to.have.status(200);   ",
											"});",
											"",
											"// 응답속도 체크(0.5초미만) 여부",
											"pm.test(\"[공통]응답속도 체크(0.5초미만)\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(500);",
											"});",
											"",
											"// 1) 가입자(일반/검수) 구분에 따른 응답 확인",
											"pm.test(\"1) 가입자(일반/검수) 구분에 따른 응답 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"// 2) 어플타입에 따른 응답 구분",
											"pm.test(\"2) 어플타입에 따른 응답 구분\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"// 3) 카테고리 타입 확인",
											"pm.test(\"3) 카테고리 타입 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"let query = {};",
											"pm.request.url.query.all().forEach((param) => { query[param.key] = param.value});",
											"// 4) AB 테스트 확인",
											"pm.test(\"4) AB 테스트 확인\", function () {",
											"    let code = new RegExp(\"(A\\\\d+_\"+query[\"panel_id\"]+\"_\\\\d+|\"+query[\"panel_id\"]+\"_\\\\d+)\");",
											"    let jsonData = pm.response.json();",
											"    let recordset = jsonData.result.recordset;",
											"",
											"    pm.expect(recordset).to.not.empty;",
											"    for(let i in recordset){",
											"        pm.expect(recordset[i].code).to.match(code);",
											"    }",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Host",
										"value": "programming.fleta.com",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://{{mims}}/smartux/getMainPanelInterlockingInfo?sa_id=T61060140414&stb_mac=8c6d.5044.45dd&app_type=UX&panel_id=CP01&category_gb=&testId=T000000237&variationId=V000000500&app_name=&ui_version=&pre_page=&cur_page=&dev_info=&os_info=&nw_info=&dev_model=&carrier_type=",
									"protocol": "http",
									"host": [
										"{{mims}}"
									],
									"path": [
										"smartux",
										"getMainPanelInterlockingInfo"
									],
									"query": [
										{
											"key": "sa_id",
											"value": "T61060140414"
										},
										{
											"key": "stb_mac",
											"value": "8c6d.5044.45dd"
										},
										{
											"key": "app_type",
											"value": "UX"
										},
										{
											"key": "panel_id",
											"value": "CP01"
										},
										{
											"key": "category_gb",
											"value": ""
										},
										{
											"key": "testId",
											"value": "T000000237"
										},
										{
											"key": "variationId",
											"value": "V000000500"
										},
										{
											"key": "app_name",
											"value": ""
										},
										{
											"key": "ui_version",
											"value": ""
										},
										{
											"key": "pre_page",
											"value": ""
										},
										{
											"key": "cur_page",
											"value": ""
										},
										{
											"key": "dev_info",
											"value": ""
										},
										{
											"key": "os_info",
											"value": ""
										},
										{
											"key": "nw_info",
											"value": ""
										},
										{
											"key": "dev_model",
											"value": ""
										},
										{
											"key": "carrier_type",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "/smartux/getMainPanelInterlockingInfo_NTC40_일반 가입자_SUSA_I20_O,O = (AB대상) Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// 공통",
											"// WAS 정상응답 체크 (200여부)",
											"pm.test(\"[공통]WAS 정상응답 체크 (200여부)\", function () {",
											"    pm.response.to.have.status(200);   ",
											"});",
											"",
											"// 응답속도 체크(0.5초미만) 여부",
											"pm.test(\"[공통]응답속도 체크(0.5초미만)\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(500);",
											"});",
											"",
											"// 1) 가입자(일반/검수) 구분에 따른 응답 확인",
											"pm.test(\"1) 가입자(일반/검수) 구분에 따른 응답 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"// 2) 어플타입에 따른 응답 구분",
											"pm.test(\"2) 어플타입에 따른 응답 구분\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"// 3) 카테고리 타입 확인",
											"pm.test(\"3) 카테고리 타입 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"let query = {};",
											"pm.request.url.query.all().forEach((param) => { query[param.key] = param.value});",
											"// 4) AB 테스트 확인",
											"pm.test(\"4) AB 테스트 확인\", function () {",
											"    let code = new RegExp(\"(A\\\\d+_\"+query[\"panel_id\"]+\"_\\\\d+|\"+query[\"panel_id\"]+\"_\\\\d+)\");",
											"    let jsonData = pm.response.json();",
											"    let recordset = jsonData.result.recordset;",
											"",
											"    pm.expect(recordset).to.not.empty;",
											"    for(let i in recordset){",
											"        pm.expect(recordset[i].code).to.match(code);",
											"    }",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Host",
										"value": "programming.fleta.com",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://{{mims}}/smartux/getMainPanelInterlockingInfo?sa_id=T61060140414&stb_mac=8c6d.5044.45dd&app_type=SUSA&panel_id=CP01&category_gb=I20&testId=T000000237&variationId=V000000500&app_name=&ui_version=&pre_page=&cur_page=&dev_info=&os_info=&nw_info=&dev_model=&carrier_type=",
									"protocol": "http",
									"host": [
										"{{mims}}"
									],
									"path": [
										"smartux",
										"getMainPanelInterlockingInfo"
									],
									"query": [
										{
											"key": "sa_id",
											"value": "T61060140414"
										},
										{
											"key": "stb_mac",
											"value": "8c6d.5044.45dd"
										},
										{
											"key": "app_type",
											"value": "SUSA"
										},
										{
											"key": "panel_id",
											"value": "CP01"
										},
										{
											"key": "category_gb",
											"value": "I20"
										},
										{
											"key": "testId",
											"value": "T000000237"
										},
										{
											"key": "variationId",
											"value": "V000000500"
										},
										{
											"key": "app_name",
											"value": ""
										},
										{
											"key": "ui_version",
											"value": ""
										},
										{
											"key": "pre_page",
											"value": ""
										},
										{
											"key": "cur_page",
											"value": ""
										},
										{
											"key": "dev_info",
											"value": ""
										},
										{
											"key": "os_info",
											"value": ""
										},
										{
											"key": "nw_info",
											"value": ""
										},
										{
											"key": "dev_model",
											"value": ""
										},
										{
											"key": "carrier_type",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "/smartux/getMainPanelInterlockingInfo_NTC22_일반 가입자_SMA_I20_O,O = (AB대상) Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// 공통",
											"// WAS 정상응답 체크 (200여부)",
											"pm.test(\"[공통]WAS 정상응답 체크 (200여부)\", function () {",
											"    pm.response.to.have.status(200);   ",
											"});",
											"",
											"// 응답속도 체크(0.5초미만) 여부",
											"pm.test(\"[공통]응답속도 체크(0.5초미만)\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(500);",
											"});",
											"",
											"// 1) 가입자(일반/검수) 구분에 따른 응답 확인",
											"pm.test(\"1) 가입자(일반/검수) 구분에 따른 응답 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"// 2) 어플타입에 따른 응답 구분",
											"pm.test(\"2) 어플타입에 따른 응답 구분\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"// 3) 카테고리 타입 확인",
											"pm.test(\"3) 카테고리 타입 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"let query = {};",
											"pm.request.url.query.all().forEach((param) => { query[param.key] = param.value});",
											"// 4) AB 테스트 확인",
											"pm.test(\"4) AB 테스트 확인\", function () {",
											"    let code = new RegExp(\"(A\\\\d+_\"+query[\"panel_id\"]+\"_\\\\d+|\"+query[\"panel_id\"]+\"_\\\\d+)\");",
											"    let jsonData = pm.response.json();",
											"    let recordset = jsonData.result.recordset;",
											"",
											"    pm.expect(recordset).to.not.empty;",
											"    for(let i in recordset){",
											"        pm.expect(recordset[i].code).to.match(code);",
											"    }",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Host",
										"value": "programming.fleta.com",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://{{mims}}/smartux/getMainPanelInterlockingInfo?sa_id=T61060140414&stb_mac=8c6d.5044.45dd&app_type=SMA&panel_id=CP01&category_gb=I20&testId=T000000237&variationId=V000000500&app_name=&ui_version=&pre_page=&cur_page=&dev_info=&os_info=&nw_info=&dev_model=&carrier_type=",
									"protocol": "http",
									"host": [
										"{{mims}}"
									],
									"path": [
										"smartux",
										"getMainPanelInterlockingInfo"
									],
									"query": [
										{
											"key": "sa_id",
											"value": "T61060140414"
										},
										{
											"key": "stb_mac",
											"value": "8c6d.5044.45dd"
										},
										{
											"key": "app_type",
											"value": "SMA"
										},
										{
											"key": "panel_id",
											"value": "CP01"
										},
										{
											"key": "category_gb",
											"value": "I20"
										},
										{
											"key": "testId",
											"value": "T000000237"
										},
										{
											"key": "variationId",
											"value": "V000000500"
										},
										{
											"key": "app_name",
											"value": ""
										},
										{
											"key": "ui_version",
											"value": ""
										},
										{
											"key": "pre_page",
											"value": ""
										},
										{
											"key": "cur_page",
											"value": ""
										},
										{
											"key": "dev_info",
											"value": ""
										},
										{
											"key": "os_info",
											"value": ""
										},
										{
											"key": "nw_info",
											"value": ""
										},
										{
											"key": "dev_model",
											"value": ""
										},
										{
											"key": "carrier_type",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "/smartux/getMainPanelInterlockingInfo_NTC92_검수 가입자_SUSA_I20_X,null Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// 공통",
											"// WAS 정상응답 체크 (200여부)",
											"pm.test(\"[공통]WAS 정상응답 체크 (200여부)\", function () {",
											"    pm.response.to.have.status(200);   ",
											"});",
											"",
											"// 응답속도 체크(0.5초미만) 여부",
											"pm.test(\"[공통]응답속도 체크(0.5초미만)\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(500);",
											"});",
											"",
											"// 1) 가입자(일반/검수) 구분에 따른 응답 확인",
											"pm.test(\"1) 가입자(일반/검수) 구분에 따른 응답 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"// 2) 어플타입에 따른 응답 구분",
											"pm.test(\"2) 어플타입에 따른 응답 구분\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"// 3) 카테고리 타입 확인",
											"pm.test(\"3) 카테고리 타입 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"let query = {};",
											"pm.request.url.query.all().forEach((param) => { query[param.key] = param.value});",
											"// 4) AB 테스트 확인",
											"pm.test(\"4) AB 테스트 확인\", function () {",
											"    let code = new RegExp(\"(A\\\\d+_\"+query[\"panel_id\"]+\"_\\\\d+|\"+query[\"panel_id\"]+\"_\\\\d+)\");",
											"    let jsonData = pm.response.json();",
											"    let recordset = jsonData.result.recordset;",
											"",
											"    pm.expect(recordset).to.not.empty;",
											"    for(let i in recordset){",
											"        pm.expect(recordset[i].code).to.match(code);",
											"    }",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Host",
										"value": "programming.fleta.com",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://{{mims}}/smartux/getMainPanelInterlockingInfo?sa_id=T61060140414&stb_mac=v000.3529.4486&app_type=SUSA&panel_id=ST02&category_gb=I20&testId=QQQQ&variationId=&app_name=&ui_version=&pre_page=&cur_page=&dev_info=&os_info=&nw_info=&dev_model=&carrier_type=",
									"protocol": "http",
									"host": [
										"{{mims}}"
									],
									"path": [
										"smartux",
										"getMainPanelInterlockingInfo"
									],
									"query": [
										{
											"key": "sa_id",
											"value": "T61060140414"
										},
										{
											"key": "stb_mac",
											"value": "v000.3529.4486"
										},
										{
											"key": "app_type",
											"value": "SUSA"
										},
										{
											"key": "panel_id",
											"value": "ST02"
										},
										{
											"key": "category_gb",
											"value": "I20"
										},
										{
											"key": "testId",
											"value": "QQQQ"
										},
										{
											"key": "variationId",
											"value": ""
										},
										{
											"key": "app_name",
											"value": ""
										},
										{
											"key": "ui_version",
											"value": ""
										},
										{
											"key": "pre_page",
											"value": ""
										},
										{
											"key": "cur_page",
											"value": ""
										},
										{
											"key": "dev_info",
											"value": ""
										},
										{
											"key": "os_info",
											"value": ""
										},
										{
											"key": "nw_info",
											"value": ""
										},
										{
											"key": "dev_model",
											"value": ""
										},
										{
											"key": "carrier_type",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "/smartux/getMainPanelInterlockingInfo_NTC101_검수 가입자_SUSA_null_O,O = (AB대상아님) Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// 공통",
											"// WAS 정상응답 체크 (200여부)",
											"pm.test(\"[공통]WAS 정상응답 체크 (200여부)\", function () {",
											"    pm.response.to.have.status(200);   ",
											"});",
											"",
											"// 응답속도 체크(0.5초미만) 여부",
											"pm.test(\"[공통]응답속도 체크(0.5초미만)\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(500);",
											"});",
											"",
											"// 1) 가입자(일반/검수) 구분에 따른 응답 확인",
											"pm.test(\"1) 가입자(일반/검수) 구분에 따른 응답 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"// 2) 어플타입에 따른 응답 구분",
											"pm.test(\"2) 어플타입에 따른 응답 구분\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"// 3) 카테고리 타입 확인",
											"pm.test(\"3) 카테고리 타입 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"let query = {};",
											"pm.request.url.query.all().forEach((param) => { query[param.key] = param.value});",
											"// 4) AB 테스트 확인",
											"pm.test(\"4) AB 테스트 확인\", function () {",
											"    let code = new RegExp(\"(A\\\\d+_\"+query[\"panel_id\"]+\"_\\\\d+|\"+query[\"panel_id\"]+\"_\\\\d+)\");",
											"    let jsonData = pm.response.json();",
											"    let recordset = jsonData.result.recordset;",
											"",
											"    pm.expect(recordset).to.not.empty;",
											"    for(let i in recordset){",
											"        pm.expect(recordset[i].code).to.match(code);",
											"    }",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Host",
										"value": "programming.fleta.com",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://{{mims}}/smartux/getMainPanelInterlockingInfo?sa_id=T61060140414&stb_mac=v000.3529.4486&app_type=SUSA&panel_id=ST02&category_gb=&testId=T000000237&variationId=Q000000500&app_name=&ui_version=&pre_page=&cur_page=&dev_info=&os_info=&nw_info=&dev_model=&carrier_type=",
									"protocol": "http",
									"host": [
										"{{mims}}"
									],
									"path": [
										"smartux",
										"getMainPanelInterlockingInfo"
									],
									"query": [
										{
											"key": "sa_id",
											"value": "T61060140414"
										},
										{
											"key": "stb_mac",
											"value": "v000.3529.4486"
										},
										{
											"key": "app_type",
											"value": "SUSA"
										},
										{
											"key": "panel_id",
											"value": "ST02"
										},
										{
											"key": "category_gb",
											"value": ""
										},
										{
											"key": "testId",
											"value": "T000000237"
										},
										{
											"key": "variationId",
											"value": "Q000000500"
										},
										{
											"key": "app_name",
											"value": ""
										},
										{
											"key": "ui_version",
											"value": ""
										},
										{
											"key": "pre_page",
											"value": ""
										},
										{
											"key": "cur_page",
											"value": ""
										},
										{
											"key": "dev_info",
											"value": ""
										},
										{
											"key": "os_info",
											"value": ""
										},
										{
											"key": "nw_info",
											"value": ""
										},
										{
											"key": "dev_model",
											"value": ""
										},
										{
											"key": "carrier_type",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "/smartux/getMainPanelInterlockingInfo_NTC19_일반 가입자_SMA_I20_null,null Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// 공통",
											"// WAS 정상응답 체크 (200여부)",
											"pm.test(\"[공통]WAS 정상응답 체크 (200여부)\", function () {",
											"    pm.response.to.have.status(200);   ",
											"});",
											"",
											"// 응답속도 체크(0.5초미만) 여부",
											"pm.test(\"[공통]응답속도 체크(0.5초미만)\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(500);",
											"});",
											"",
											"// 1) 가입자(일반/검수) 구분에 따른 응답 확인",
											"pm.test(\"1) 가입자(일반/검수) 구분에 따른 응답 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"// 2) 어플타입에 따른 응답 구분",
											"pm.test(\"2) 어플타입에 따른 응답 구분\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"// 3) 카테고리 타입 확인",
											"pm.test(\"3) 카테고리 타입 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"let query = {};",
											"pm.request.url.query.all().forEach((param) => { query[param.key] = param.value});",
											"// 4) AB 테스트 확인",
											"pm.test(\"4) AB 테스트 확인\", function () {",
											"    let code = new RegExp(\"(A\\\\d+_\"+query[\"panel_id\"]+\"_\\\\d+|\"+query[\"panel_id\"]+\"_\\\\d+)\");",
											"    let jsonData = pm.response.json();",
											"    let recordset = jsonData.result.recordset;",
											"",
											"    pm.expect(recordset).to.not.empty;",
											"    for(let i in recordset){",
											"        pm.expect(recordset[i].code).to.match(code);",
											"    }",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Host",
										"value": "programming.fleta.com",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://{{mims}}/smartux/getMainPanelInterlockingInfo?sa_id=T61060140414&stb_mac=8c6d.5044.45dd&app_type=SMA&panel_id=ST02&category_gb=I20&testId=&variationId=&app_name=&ui_version=&pre_page=&cur_page=&dev_info=&os_info=&nw_info=&dev_model=&carrier_type=",
									"protocol": "http",
									"host": [
										"{{mims}}"
									],
									"path": [
										"smartux",
										"getMainPanelInterlockingInfo"
									],
									"query": [
										{
											"key": "sa_id",
											"value": "T61060140414"
										},
										{
											"key": "stb_mac",
											"value": "8c6d.5044.45dd"
										},
										{
											"key": "app_type",
											"value": "SMA"
										},
										{
											"key": "panel_id",
											"value": "ST02"
										},
										{
											"key": "category_gb",
											"value": "I20"
										},
										{
											"key": "testId",
											"value": ""
										},
										{
											"key": "variationId",
											"value": ""
										},
										{
											"key": "app_name",
											"value": ""
										},
										{
											"key": "ui_version",
											"value": ""
										},
										{
											"key": "pre_page",
											"value": ""
										},
										{
											"key": "cur_page",
											"value": ""
										},
										{
											"key": "dev_info",
											"value": ""
										},
										{
											"key": "os_info",
											"value": ""
										},
										{
											"key": "nw_info",
											"value": ""
										},
										{
											"key": "dev_model",
											"value": ""
										},
										{
											"key": "carrier_type",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "/smartux/getMainPanelInterlockingInfo_NTC55_검수 가입자_UX_I20_null,null Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// 공통",
											"// WAS 정상응답 체크 (200여부)",
											"pm.test(\"[공통]WAS 정상응답 체크 (200여부)\", function () {",
											"    pm.response.to.have.status(200);   ",
											"});",
											"",
											"// 응답속도 체크(0.5초미만) 여부",
											"pm.test(\"[공통]응답속도 체크(0.5초미만)\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(500);",
											"});",
											"",
											"// 1) 가입자(일반/검수) 구분에 따른 응답 확인",
											"pm.test(\"1) 가입자(일반/검수) 구분에 따른 응답 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"// 2) 어플타입에 따른 응답 구분",
											"pm.test(\"2) 어플타입에 따른 응답 구분\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"// 3) 카테고리 타입 확인",
											"pm.test(\"3) 카테고리 타입 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"let query = {};",
											"pm.request.url.query.all().forEach((param) => { query[param.key] = param.value});",
											"// 4) AB 테스트 확인",
											"pm.test(\"4) AB 테스트 확인\", function () {",
											"    let code = new RegExp(\"(A\\\\d+_\"+query[\"panel_id\"]+\"_\\\\d+|\"+query[\"panel_id\"]+\"_\\\\d+)\");",
											"    let jsonData = pm.response.json();",
											"    let recordset = jsonData.result.recordset;",
											"",
											"    pm.expect(recordset).to.not.empty;",
											"    for(let i in recordset){",
											"        pm.expect(recordset[i].code).to.match(code);",
											"    }",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Host",
										"value": "programming.fleta.com",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://{{mims}}/smartux/getMainPanelInterlockingInfo?sa_id=T61060140414&stb_mac=v000.3529.4486&app_type=UX&panel_id=ST02&category_gb=I20&testId=&variationId=&app_name=&ui_version=&pre_page=&cur_page=&dev_info=&os_info=&nw_info=&dev_model=&carrier_type=",
									"protocol": "http",
									"host": [
										"{{mims}}"
									],
									"path": [
										"smartux",
										"getMainPanelInterlockingInfo"
									],
									"query": [
										{
											"key": "sa_id",
											"value": "T61060140414"
										},
										{
											"key": "stb_mac",
											"value": "v000.3529.4486"
										},
										{
											"key": "app_type",
											"value": "UX"
										},
										{
											"key": "panel_id",
											"value": "ST02"
										},
										{
											"key": "category_gb",
											"value": "I20"
										},
										{
											"key": "testId",
											"value": ""
										},
										{
											"key": "variationId",
											"value": ""
										},
										{
											"key": "app_name",
											"value": ""
										},
										{
											"key": "ui_version",
											"value": ""
										},
										{
											"key": "pre_page",
											"value": ""
										},
										{
											"key": "cur_page",
											"value": ""
										},
										{
											"key": "dev_info",
											"value": ""
										},
										{
											"key": "os_info",
											"value": ""
										},
										{
											"key": "nw_info",
											"value": ""
										},
										{
											"key": "dev_model",
											"value": ""
										},
										{
											"key": "carrier_type",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "/smartux/getMainPanelInterlockingInfo_ATC8_testId 가 영문/숫자 format 이 아닐때 Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// 공통",
											"// WAS 정상응답 체크 (200여부)",
											"pm.test(\"[공통]WAS 정상응답 체크 (200여부)\", function () {",
											"    pm.response.to.have.status(200);   ",
											"});",
											"",
											"// 응답속도 체크(0.5초미만) 여부",
											"pm.test(\"[공통]응답속도 체크(0.5초미만)\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(500);",
											"});",
											"",
											"// 1) testId 가 영문/숫자 format 이 아닐때\r",
											"pm.test(\"1) testId 가 영문/숫자 format 이 아닐때\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");\r",
											"});\r"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Host",
										"value": "programming.fleta.com",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://{{mims}}/smartux/getMainPanelInterlockingInfo?sa_id=T61060140414&stb_mac=8c6d.5044.45dd&app_type=UX&panel_id=ST02&category_gb=I20&testId=한글яз01&variationId=&app_name=&ui_version=&pre_page=&cur_page=&dev_info=&os_info=&nw_info=&dev_model=&carrier_type=",
									"protocol": "http",
									"host": [
										"{{mims}}"
									],
									"path": [
										"smartux",
										"getMainPanelInterlockingInfo"
									],
									"query": [
										{
											"key": "sa_id",
											"value": "T61060140414"
										},
										{
											"key": "stb_mac",
											"value": "8c6d.5044.45dd"
										},
										{
											"key": "app_type",
											"value": "UX"
										},
										{
											"key": "panel_id",
											"value": "ST02"
										},
										{
											"key": "category_gb",
											"value": "I20"
										},
										{
											"key": "testId",
											"value": "한글яз01"
										},
										{
											"key": "variationId",
											"value": ""
										},
										{
											"key": "app_name",
											"value": ""
										},
										{
											"key": "ui_version",
											"value": ""
										},
										{
											"key": "pre_page",
											"value": ""
										},
										{
											"key": "cur_page",
											"value": ""
										},
										{
											"key": "dev_info",
											"value": ""
										},
										{
											"key": "os_info",
											"value": ""
										},
										{
											"key": "nw_info",
											"value": ""
										},
										{
											"key": "dev_model",
											"value": ""
										},
										{
											"key": "carrier_type",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "/smartux/getMainPanelInterlockingInfo_NTC11_일반 가입자_UX_null_O,O = (AB대상아님) Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// 공통",
											"// WAS 정상응답 체크 (200여부)",
											"pm.test(\"[공통]WAS 정상응답 체크 (200여부)\", function () {",
											"    pm.response.to.have.status(200);   ",
											"});",
											"",
											"// 응답속도 체크(0.5초미만) 여부",
											"pm.test(\"[공통]응답속도 체크(0.5초미만)\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(500);",
											"});",
											"",
											"// 1) 가입자(일반/검수) 구분에 따른 응답 확인",
											"pm.test(\"1) 가입자(일반/검수) 구분에 따른 응답 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"// 2) 어플타입에 따른 응답 구분",
											"pm.test(\"2) 어플타입에 따른 응답 구분\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"// 3) 카테고리 타입 확인",
											"pm.test(\"3) 카테고리 타입 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"let query = {};",
											"pm.request.url.query.all().forEach((param) => { query[param.key] = param.value});",
											"// 4) AB 테스트 확인",
											"pm.test(\"4) AB 테스트 확인\", function () {",
											"    let code = new RegExp(\"(A\\\\d+_\"+query[\"panel_id\"]+\"_\\\\d+|\"+query[\"panel_id\"]+\"_\\\\d+)\");",
											"    let jsonData = pm.response.json();",
											"    let recordset = jsonData.result.recordset;",
											"",
											"    pm.expect(recordset).to.not.empty;",
											"    for(let i in recordset){",
											"        pm.expect(recordset[i].code).to.match(code);",
											"    }",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Host",
										"value": "programming.fleta.com",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://{{mims}}/smartux/getMainPanelInterlockingInfo?sa_id=T61060140414&stb_mac=8c6d.5044.45dd&app_type=UX&panel_id=ST02&category_gb=&testId=T000000237&variationId=Q000000500&app_name=&ui_version=&pre_page=&cur_page=&dev_info=&os_info=&nw_info=&dev_model=&carrier_type=",
									"protocol": "http",
									"host": [
										"{{mims}}"
									],
									"path": [
										"smartux",
										"getMainPanelInterlockingInfo"
									],
									"query": [
										{
											"key": "sa_id",
											"value": "T61060140414"
										},
										{
											"key": "stb_mac",
											"value": "8c6d.5044.45dd"
										},
										{
											"key": "app_type",
											"value": "UX"
										},
										{
											"key": "panel_id",
											"value": "ST02"
										},
										{
											"key": "category_gb",
											"value": ""
										},
										{
											"key": "testId",
											"value": "T000000237"
										},
										{
											"key": "variationId",
											"value": "Q000000500"
										},
										{
											"key": "app_name",
											"value": ""
										},
										{
											"key": "ui_version",
											"value": ""
										},
										{
											"key": "pre_page",
											"value": ""
										},
										{
											"key": "cur_page",
											"value": ""
										},
										{
											"key": "dev_info",
											"value": ""
										},
										{
											"key": "os_info",
											"value": ""
										},
										{
											"key": "nw_info",
											"value": ""
										},
										{
											"key": "dev_model",
											"value": ""
										},
										{
											"key": "carrier_type",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "/smartux/getMainPanelInterlockingInfo_NTC82_검수 가입자_SMA_null_O,O = (AB대상) Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// 공통",
											"// WAS 정상응답 체크 (200여부)",
											"pm.test(\"[공통]WAS 정상응답 체크 (200여부)\", function () {",
											"    pm.response.to.have.status(200);   ",
											"});",
											"",
											"// 응답속도 체크(0.5초미만) 여부",
											"pm.test(\"[공통]응답속도 체크(0.5초미만)\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(500);",
											"});",
											"",
											"// 1) 가입자(일반/검수) 구분에 따른 응답 확인",
											"pm.test(\"1) 가입자(일반/검수) 구분에 따른 응답 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"// 2) 어플타입에 따른 응답 구분",
											"pm.test(\"2) 어플타입에 따른 응답 구분\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"// 3) 카테고리 타입 확인",
											"pm.test(\"3) 카테고리 타입 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"let query = {};",
											"pm.request.url.query.all().forEach((param) => { query[param.key] = param.value});",
											"// 4) AB 테스트 확인",
											"pm.test(\"4) AB 테스트 확인\", function () {",
											"    let code = new RegExp(\"(A\\\\d+_\"+query[\"panel_id\"]+\"_\\\\d+|\"+query[\"panel_id\"]+\"_\\\\d+)\");",
											"    let jsonData = pm.response.json();",
											"    let recordset = jsonData.result.recordset;",
											"",
											"    pm.expect(recordset).to.not.empty;",
											"    for(let i in recordset){",
											"        pm.expect(recordset[i].code).to.match(code);",
											"    }",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Host",
										"value": "programming.fleta.com",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://{{mims}}/smartux/getMainPanelInterlockingInfo?sa_id=T61060140414&stb_mac=v000.3529.4486&app_type=SMA&panel_id=CP01&category_gb=&testId=T000000237&variationId=V000000500&app_name=&ui_version=&pre_page=&cur_page=&dev_info=&os_info=&nw_info=&dev_model=&carrier_type=",
									"protocol": "http",
									"host": [
										"{{mims}}"
									],
									"path": [
										"smartux",
										"getMainPanelInterlockingInfo"
									],
									"query": [
										{
											"key": "sa_id",
											"value": "T61060140414"
										},
										{
											"key": "stb_mac",
											"value": "v000.3529.4486"
										},
										{
											"key": "app_type",
											"value": "SMA"
										},
										{
											"key": "panel_id",
											"value": "CP01"
										},
										{
											"key": "category_gb",
											"value": ""
										},
										{
											"key": "testId",
											"value": "T000000237"
										},
										{
											"key": "variationId",
											"value": "V000000500"
										},
										{
											"key": "app_name",
											"value": ""
										},
										{
											"key": "ui_version",
											"value": ""
										},
										{
											"key": "pre_page",
											"value": ""
										},
										{
											"key": "cur_page",
											"value": ""
										},
										{
											"key": "dev_info",
											"value": ""
										},
										{
											"key": "os_info",
											"value": ""
										},
										{
											"key": "nw_info",
											"value": ""
										},
										{
											"key": "dev_model",
											"value": ""
										},
										{
											"key": "carrier_type",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "/smartux/getMainPanelInterlockingInfo_NTC35_일반 가입자_SMA_I30_O,O = (AB대상아님) Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// 공통",
											"// WAS 정상응답 체크 (200여부)",
											"pm.test(\"[공통]WAS 정상응답 체크 (200여부)\", function () {",
											"    pm.response.to.have.status(200);   ",
											"});",
											"",
											"// 응답속도 체크(0.5초미만) 여부",
											"pm.test(\"[공통]응답속도 체크(0.5초미만)\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(500);",
											"});",
											"",
											"// 1) 가입자(일반/검수) 구분에 따른 응답 확인",
											"pm.test(\"1) 가입자(일반/검수) 구분에 따른 응답 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"// 2) 어플타입에 따른 응답 구분",
											"pm.test(\"2) 어플타입에 따른 응답 구분\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"// 3) 카테고리 타입 확인",
											"pm.test(\"3) 카테고리 타입 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"let query = {};",
											"pm.request.url.query.all().forEach((param) => { query[param.key] = param.value});",
											"// 4) AB 테스트 확인",
											"pm.test(\"4) AB 테스트 확인\", function () {",
											"    let code = new RegExp(\"(A\\\\d+_\"+query[\"panel_id\"]+\"_\\\\d+|\"+query[\"panel_id\"]+\"_\\\\d+)\");",
											"    let jsonData = pm.response.json();",
											"    let recordset = jsonData.result.recordset;",
											"",
											"    pm.expect(recordset).to.not.empty;",
											"    for(let i in recordset){",
											"        pm.expect(recordset[i].code).to.match(code);",
											"    }",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Host",
										"value": "programming.fleta.com",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://{{mims}}/smartux/getMainPanelInterlockingInfo?sa_id=T61060140414&stb_mac=8c6d.5044.45dd&app_type=SMA&panel_id=ST01&category_gb=I30&testId=T000000237&variationId=Q000000500&app_name=&ui_version=&pre_page=&cur_page=&dev_info=&os_info=&nw_info=&dev_model=&carrier_type=",
									"protocol": "http",
									"host": [
										"{{mims}}"
									],
									"path": [
										"smartux",
										"getMainPanelInterlockingInfo"
									],
									"query": [
										{
											"key": "sa_id",
											"value": "T61060140414"
										},
										{
											"key": "stb_mac",
											"value": "8c6d.5044.45dd"
										},
										{
											"key": "app_type",
											"value": "SMA"
										},
										{
											"key": "panel_id",
											"value": "ST01"
										},
										{
											"key": "category_gb",
											"value": "I30"
										},
										{
											"key": "testId",
											"value": "T000000237"
										},
										{
											"key": "variationId",
											"value": "Q000000500"
										},
										{
											"key": "app_name",
											"value": ""
										},
										{
											"key": "ui_version",
											"value": ""
										},
										{
											"key": "pre_page",
											"value": ""
										},
										{
											"key": "cur_page",
											"value": ""
										},
										{
											"key": "dev_info",
											"value": ""
										},
										{
											"key": "os_info",
											"value": ""
										},
										{
											"key": "nw_info",
											"value": ""
										},
										{
											"key": "dev_model",
											"value": ""
										},
										{
											"key": "carrier_type",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "/smartux/getMainPanelInterlockingInfo_NTC5_일반 가입자_UX_I20_O,O = (AB대상아님) Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// 공통",
											"// WAS 정상응답 체크 (200여부)",
											"pm.test(\"[공통]WAS 정상응답 체크 (200여부)\", function () {",
											"    pm.response.to.have.status(200);   ",
											"});",
											"",
											"// 응답속도 체크(0.5초미만) 여부",
											"pm.test(\"[공통]응답속도 체크(0.5초미만)\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(500);",
											"});",
											"",
											"// 1) 가입자(일반/검수) 구분에 따른 응답 확인",
											"pm.test(\"1) 가입자(일반/검수) 구분에 따른 응답 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"// 2) 어플타입에 따른 응답 구분",
											"pm.test(\"2) 어플타입에 따른 응답 구분\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"// 3) 카테고리 타입 확인",
											"pm.test(\"3) 카테고리 타입 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"let query = {};",
											"pm.request.url.query.all().forEach((param) => { query[param.key] = param.value});",
											"// 4) AB 테스트 확인",
											"pm.test(\"4) AB 테스트 확인\", function () {",
											"    let code = new RegExp(\"(A\\\\d+_\"+query[\"panel_id\"]+\"_\\\\d+|\"+query[\"panel_id\"]+\"_\\\\d+)\");",
											"    let jsonData = pm.response.json();",
											"    let recordset = jsonData.result.recordset;",
											"",
											"    pm.expect(recordset).to.not.empty;",
											"    for(let i in recordset){",
											"        pm.expect(recordset[i].code).to.match(code);",
											"    }",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Host",
										"value": "programming.fleta.com",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://{{mims}}/smartux/getMainPanelInterlockingInfo?sa_id=T61060140414&stb_mac=8c6d.5044.45dd&app_type=UX&panel_id=ST02&category_gb=I20&testId=T000000237&variationId=Q000000500&app_name=&ui_version=&pre_page=&cur_page=&dev_info=&os_info=&nw_info=&dev_model=&carrier_type=",
									"protocol": "http",
									"host": [
										"{{mims}}"
									],
									"path": [
										"smartux",
										"getMainPanelInterlockingInfo"
									],
									"query": [
										{
											"key": "sa_id",
											"value": "T61060140414"
										},
										{
											"key": "stb_mac",
											"value": "8c6d.5044.45dd"
										},
										{
											"key": "app_type",
											"value": "UX"
										},
										{
											"key": "panel_id",
											"value": "ST02"
										},
										{
											"key": "category_gb",
											"value": "I20"
										},
										{
											"key": "testId",
											"value": "T000000237"
										},
										{
											"key": "variationId",
											"value": "Q000000500"
										},
										{
											"key": "app_name",
											"value": ""
										},
										{
											"key": "ui_version",
											"value": ""
										},
										{
											"key": "pre_page",
											"value": ""
										},
										{
											"key": "cur_page",
											"value": ""
										},
										{
											"key": "dev_info",
											"value": ""
										},
										{
											"key": "os_info",
											"value": ""
										},
										{
											"key": "nw_info",
											"value": ""
										},
										{
											"key": "dev_model",
											"value": ""
										},
										{
											"key": "carrier_type",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "/smartux/getMainPanelInterlockingInfo_NTC16_일반 가입자_UX_I30_O,O = (AB대상) Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// 공통",
											"// WAS 정상응답 체크 (200여부)",
											"pm.test(\"[공통]WAS 정상응답 체크 (200여부)\", function () {",
											"    pm.response.to.have.status(200);   ",
											"});",
											"",
											"// 응답속도 체크(0.5초미만) 여부",
											"pm.test(\"[공통]응답속도 체크(0.5초미만)\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(500);",
											"});",
											"",
											"// 1) 가입자(일반/검수) 구분에 따른 응답 확인",
											"pm.test(\"1) 가입자(일반/검수) 구분에 따른 응답 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"// 2) 어플타입에 따른 응답 구분",
											"pm.test(\"2) 어플타입에 따른 응답 구분\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"// 3) 카테고리 타입 확인",
											"pm.test(\"3) 카테고리 타입 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"let query = {};",
											"pm.request.url.query.all().forEach((param) => { query[param.key] = param.value});",
											"// 4) AB 테스트 확인",
											"pm.test(\"4) AB 테스트 확인\", function () {",
											"    let code = new RegExp(\"(A\\\\d+_\"+query[\"panel_id\"]+\"_\\\\d+|\"+query[\"panel_id\"]+\"_\\\\d+)\");",
											"    let jsonData = pm.response.json();",
											"    let recordset = jsonData.result.recordset;",
											"",
											"    pm.expect(recordset).to.not.empty;",
											"    for(let i in recordset){",
											"        pm.expect(recordset[i].code).to.match(code);",
											"    }",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Host",
										"value": "programming.fleta.com",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://{{mims}}/smartux/getMainPanelInterlockingInfo?sa_id=T61060140414&stb_mac=8c6d.5044.45dd&app_type=UX&panel_id=CP01&category_gb=I30&testId=T000000237&variationId=V000000500&app_name=&ui_version=&pre_page=&cur_page=&dev_info=&os_info=&nw_info=&dev_model=&carrier_type=",
									"protocol": "http",
									"host": [
										"{{mims}}"
									],
									"path": [
										"smartux",
										"getMainPanelInterlockingInfo"
									],
									"query": [
										{
											"key": "sa_id",
											"value": "T61060140414"
										},
										{
											"key": "stb_mac",
											"value": "8c6d.5044.45dd"
										},
										{
											"key": "app_type",
											"value": "UX"
										},
										{
											"key": "panel_id",
											"value": "CP01"
										},
										{
											"key": "category_gb",
											"value": "I30"
										},
										{
											"key": "testId",
											"value": "T000000237"
										},
										{
											"key": "variationId",
											"value": "V000000500"
										},
										{
											"key": "app_name",
											"value": ""
										},
										{
											"key": "ui_version",
											"value": ""
										},
										{
											"key": "pre_page",
											"value": ""
										},
										{
											"key": "cur_page",
											"value": ""
										},
										{
											"key": "dev_info",
											"value": ""
										},
										{
											"key": "os_info",
											"value": ""
										},
										{
											"key": "nw_info",
											"value": ""
										},
										{
											"key": "dev_model",
											"value": ""
										},
										{
											"key": "carrier_type",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "/smartux/getMainPanelInterlockingInfo_NTC28_일반 가입자_SMA_null_O,O = (AB대상) Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// 공통",
											"// WAS 정상응답 체크 (200여부)",
											"pm.test(\"[공통]WAS 정상응답 체크 (200여부)\", function () {",
											"    pm.response.to.have.status(200);   ",
											"});",
											"",
											"// 응답속도 체크(0.5초미만) 여부",
											"pm.test(\"[공통]응답속도 체크(0.5초미만)\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(500);",
											"});",
											"",
											"// 1) 가입자(일반/검수) 구분에 따른 응답 확인",
											"pm.test(\"1) 가입자(일반/검수) 구분에 따른 응답 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"// 2) 어플타입에 따른 응답 구분",
											"pm.test(\"2) 어플타입에 따른 응답 구분\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"// 3) 카테고리 타입 확인",
											"pm.test(\"3) 카테고리 타입 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"let query = {};",
											"pm.request.url.query.all().forEach((param) => { query[param.key] = param.value});",
											"// 4) AB 테스트 확인",
											"pm.test(\"4) AB 테스트 확인\", function () {",
											"    let code = new RegExp(\"(A\\\\d+_\"+query[\"panel_id\"]+\"_\\\\d+|\"+query[\"panel_id\"]+\"_\\\\d+)\");",
											"    let jsonData = pm.response.json();",
											"    let recordset = jsonData.result.recordset;",
											"",
											"    pm.expect(recordset).to.not.empty;",
											"    for(let i in recordset){",
											"        pm.expect(recordset[i].code).to.match(code);",
											"    }",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Host",
										"value": "programming.fleta.com",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://{{mims}}/smartux/getMainPanelInterlockingInfo?sa_id=T61060140414&stb_mac=8c6d.5044.45dd&app_type=SMA&panel_id=CP01&category_gb=&testId=T000000237&variationId=V000000500&app_name=&ui_version=&pre_page=&cur_page=&dev_info=&os_info=&nw_info=&dev_model=&carrier_type=",
									"protocol": "http",
									"host": [
										"{{mims}}"
									],
									"path": [
										"smartux",
										"getMainPanelInterlockingInfo"
									],
									"query": [
										{
											"key": "sa_id",
											"value": "T61060140414"
										},
										{
											"key": "stb_mac",
											"value": "8c6d.5044.45dd"
										},
										{
											"key": "app_type",
											"value": "SMA"
										},
										{
											"key": "panel_id",
											"value": "CP01"
										},
										{
											"key": "category_gb",
											"value": ""
										},
										{
											"key": "testId",
											"value": "T000000237"
										},
										{
											"key": "variationId",
											"value": "V000000500"
										},
										{
											"key": "app_name",
											"value": ""
										},
										{
											"key": "ui_version",
											"value": ""
										},
										{
											"key": "pre_page",
											"value": ""
										},
										{
											"key": "cur_page",
											"value": ""
										},
										{
											"key": "dev_info",
											"value": ""
										},
										{
											"key": "os_info",
											"value": ""
										},
										{
											"key": "nw_info",
											"value": ""
										},
										{
											"key": "dev_model",
											"value": ""
										},
										{
											"key": "carrier_type",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "/smartux/getMainPanelInterlockingInfo_NTC89_검수 가입자_SMA_I30_O,O = (AB대상아님) Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// 공통",
											"// WAS 정상응답 체크 (200여부)",
											"pm.test(\"[공통]WAS 정상응답 체크 (200여부)\", function () {",
											"    pm.response.to.have.status(200);   ",
											"});",
											"",
											"// 응답속도 체크(0.5초미만) 여부",
											"pm.test(\"[공통]응답속도 체크(0.5초미만)\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(500);",
											"});",
											"",
											"// 1) 가입자(일반/검수) 구분에 따른 응답 확인",
											"pm.test(\"1) 가입자(일반/검수) 구분에 따른 응답 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"// 2) 어플타입에 따른 응답 구분",
											"pm.test(\"2) 어플타입에 따른 응답 구분\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"// 3) 카테고리 타입 확인",
											"pm.test(\"3) 카테고리 타입 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"let query = {};",
											"pm.request.url.query.all().forEach((param) => { query[param.key] = param.value});",
											"// 4) AB 테스트 확인",
											"pm.test(\"4) AB 테스트 확인\", function () {",
											"    let code = new RegExp(\"(A\\\\d+_\"+query[\"panel_id\"]+\"_\\\\d+|\"+query[\"panel_id\"]+\"_\\\\d+)\");",
											"    let jsonData = pm.response.json();",
											"    let recordset = jsonData.result.recordset;",
											"",
											"    pm.expect(recordset).to.not.empty;",
											"    for(let i in recordset){",
											"        pm.expect(recordset[i].code).to.match(code);",
											"    }",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Host",
										"value": "programming.fleta.com",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://{{mims}}/smartux/getMainPanelInterlockingInfo?sa_id=T61060140414&stb_mac=v000.3529.4486&app_type=SMA&panel_id=ST01&category_gb=I30&testId=T000000237&variationId=Q000000500&app_name=&ui_version=&pre_page=&cur_page=&dev_info=&os_info=&nw_info=&dev_model=&carrier_type=",
									"protocol": "http",
									"host": [
										"{{mims}}"
									],
									"path": [
										"smartux",
										"getMainPanelInterlockingInfo"
									],
									"query": [
										{
											"key": "sa_id",
											"value": "T61060140414"
										},
										{
											"key": "stb_mac",
											"value": "v000.3529.4486"
										},
										{
											"key": "app_type",
											"value": "SMA"
										},
										{
											"key": "panel_id",
											"value": "ST01"
										},
										{
											"key": "category_gb",
											"value": "I30"
										},
										{
											"key": "testId",
											"value": "T000000237"
										},
										{
											"key": "variationId",
											"value": "Q000000500"
										},
										{
											"key": "app_name",
											"value": ""
										},
										{
											"key": "ui_version",
											"value": ""
										},
										{
											"key": "pre_page",
											"value": ""
										},
										{
											"key": "cur_page",
											"value": ""
										},
										{
											"key": "dev_info",
											"value": ""
										},
										{
											"key": "os_info",
											"value": ""
										},
										{
											"key": "nw_info",
											"value": ""
										},
										{
											"key": "dev_model",
											"value": ""
										},
										{
											"key": "carrier_type",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "/smartux/getMainPanelInterlockingInfo_ATC9_variationId 가 영문/숫자 format 이 아닐때 Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// 공통",
											"// WAS 정상응답 체크 (200여부)",
											"pm.test(\"[공통]WAS 정상응답 체크 (200여부)\", function () {",
											"    pm.response.to.have.status(200);   ",
											"});",
											"",
											"// 응답속도 체크(0.5초미만) 여부",
											"pm.test(\"[공통]응답속도 체크(0.5초미만)\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(500);",
											"});",
											"",
											"// 1) variationId 가 영문/숫자 format 이 아닐때\r",
											"pm.test(\"1) variationId 가 영문/숫자 format 이 아닐때\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");\r",
											"});\r"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Host",
										"value": "programming.fleta.com",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://{{mims}}/smartux/getMainPanelInterlockingInfo?sa_id=T61060140414&stb_mac=8c6d.5044.45dd&app_type=UX&panel_id=ST02&category_gb=I20&testId=&variationId=한글яз01&app_name=&ui_version=&pre_page=&cur_page=&dev_info=&os_info=&nw_info=&dev_model=&carrier_type=",
									"protocol": "http",
									"host": [
										"{{mims}}"
									],
									"path": [
										"smartux",
										"getMainPanelInterlockingInfo"
									],
									"query": [
										{
											"key": "sa_id",
											"value": "T61060140414"
										},
										{
											"key": "stb_mac",
											"value": "8c6d.5044.45dd"
										},
										{
											"key": "app_type",
											"value": "UX"
										},
										{
											"key": "panel_id",
											"value": "ST02"
										},
										{
											"key": "category_gb",
											"value": "I20"
										},
										{
											"key": "testId",
											"value": ""
										},
										{
											"key": "variationId",
											"value": "한글яз01"
										},
										{
											"key": "app_name",
											"value": ""
										},
										{
											"key": "ui_version",
											"value": ""
										},
										{
											"key": "pre_page",
											"value": ""
										},
										{
											"key": "cur_page",
											"value": ""
										},
										{
											"key": "dev_info",
											"value": ""
										},
										{
											"key": "os_info",
											"value": ""
										},
										{
											"key": "nw_info",
											"value": ""
										},
										{
											"key": "dev_model",
											"value": ""
										},
										{
											"key": "carrier_type",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "/smartux/getMainPanelInterlockingInfo_NTC41_일반 가입자_SUSA_I20_O,O = (AB대상아님) Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// 공통",
											"// WAS 정상응답 체크 (200여부)",
											"pm.test(\"[공통]WAS 정상응답 체크 (200여부)\", function () {",
											"    pm.response.to.have.status(200);   ",
											"});",
											"",
											"// 응답속도 체크(0.5초미만) 여부",
											"pm.test(\"[공통]응답속도 체크(0.5초미만)\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(500);",
											"});",
											"",
											"// 1) 가입자(일반/검수) 구분에 따른 응답 확인",
											"pm.test(\"1) 가입자(일반/검수) 구분에 따른 응답 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"// 2) 어플타입에 따른 응답 구분",
											"pm.test(\"2) 어플타입에 따른 응답 구분\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"// 3) 카테고리 타입 확인",
											"pm.test(\"3) 카테고리 타입 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"let query = {};",
											"pm.request.url.query.all().forEach((param) => { query[param.key] = param.value});",
											"// 4) AB 테스트 확인",
											"pm.test(\"4) AB 테스트 확인\", function () {",
											"    let code = new RegExp(\"(A\\\\d+_\"+query[\"panel_id\"]+\"_\\\\d+|\"+query[\"panel_id\"]+\"_\\\\d+)\");",
											"    let jsonData = pm.response.json();",
											"    let recordset = jsonData.result.recordset;",
											"",
											"    pm.expect(recordset).to.not.empty;",
											"    for(let i in recordset){",
											"        pm.expect(recordset[i].code).to.match(code);",
											"    }",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Host",
										"value": "programming.fleta.com",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://{{mims}}/smartux/getMainPanelInterlockingInfo?sa_id=T61060140414&stb_mac=8c6d.5044.45dd&app_type=SUSA&panel_id=ST02&category_gb=I20&testId=T000000237&variationId=Q000000500&app_name=&ui_version=&pre_page=&cur_page=&dev_info=&os_info=&nw_info=&dev_model=&carrier_type=",
									"protocol": "http",
									"host": [
										"{{mims}}"
									],
									"path": [
										"smartux",
										"getMainPanelInterlockingInfo"
									],
									"query": [
										{
											"key": "sa_id",
											"value": "T61060140414"
										},
										{
											"key": "stb_mac",
											"value": "8c6d.5044.45dd"
										},
										{
											"key": "app_type",
											"value": "SUSA"
										},
										{
											"key": "panel_id",
											"value": "ST02"
										},
										{
											"key": "category_gb",
											"value": "I20"
										},
										{
											"key": "testId",
											"value": "T000000237"
										},
										{
											"key": "variationId",
											"value": "Q000000500"
										},
										{
											"key": "app_name",
											"value": ""
										},
										{
											"key": "ui_version",
											"value": ""
										},
										{
											"key": "pre_page",
											"value": ""
										},
										{
											"key": "cur_page",
											"value": ""
										},
										{
											"key": "dev_info",
											"value": ""
										},
										{
											"key": "os_info",
											"value": ""
										},
										{
											"key": "nw_info",
											"value": ""
										},
										{
											"key": "dev_model",
											"value": ""
										},
										{
											"key": "carrier_type",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "/smartux/getMainPanelInterlockingInfo_NTC45_일반 가입자_SUSA_null_null,X Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// 공통",
											"// WAS 정상응답 체크 (200여부)",
											"pm.test(\"[공통]WAS 정상응답 체크 (200여부)\", function () {",
											"    pm.response.to.have.status(200);   ",
											"});",
											"",
											"// 응답속도 체크(0.5초미만) 여부",
											"pm.test(\"[공통]응답속도 체크(0.5초미만)\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(500);",
											"});",
											"",
											"// 1) 가입자(일반/검수) 구분에 따른 응답 확인",
											"pm.test(\"1) 가입자(일반/검수) 구분에 따른 응답 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"// 2) 어플타입에 따른 응답 구분",
											"pm.test(\"2) 어플타입에 따른 응답 구분\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"// 3) 카테고리 타입 확인",
											"pm.test(\"3) 카테고리 타입 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"let query = {};",
											"pm.request.url.query.all().forEach((param) => { query[param.key] = param.value});",
											"// 4) AB 테스트 확인",
											"pm.test(\"4) AB 테스트 확인\", function () {",
											"    let code = new RegExp(\"(A\\\\d+_\"+query[\"panel_id\"]+\"_\\\\d+|\"+query[\"panel_id\"]+\"_\\\\d+)\");",
											"    let jsonData = pm.response.json();",
											"    let recordset = jsonData.result.recordset;",
											"",
											"    pm.expect(recordset).to.not.empty;",
											"    for(let i in recordset){",
											"        pm.expect(recordset[i].code).to.match(code);",
											"    }",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Host",
										"value": "programming.fleta.com",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://{{mims}}/smartux/getMainPanelInterlockingInfo?sa_id=T61060140414&stb_mac=8c6d.5044.45dd&app_type=SUSA&panel_id=ST02&category_gb=&testId=&variationId=QQQQ&app_name=&ui_version=&pre_page=&cur_page=&dev_info=&os_info=&nw_info=&dev_model=&carrier_type=",
									"protocol": "http",
									"host": [
										"{{mims}}"
									],
									"path": [
										"smartux",
										"getMainPanelInterlockingInfo"
									],
									"query": [
										{
											"key": "sa_id",
											"value": "T61060140414"
										},
										{
											"key": "stb_mac",
											"value": "8c6d.5044.45dd"
										},
										{
											"key": "app_type",
											"value": "SUSA"
										},
										{
											"key": "panel_id",
											"value": "ST02"
										},
										{
											"key": "category_gb",
											"value": ""
										},
										{
											"key": "testId",
											"value": ""
										},
										{
											"key": "variationId",
											"value": "QQQQ"
										},
										{
											"key": "app_name",
											"value": ""
										},
										{
											"key": "ui_version",
											"value": ""
										},
										{
											"key": "pre_page",
											"value": ""
										},
										{
											"key": "cur_page",
											"value": ""
										},
										{
											"key": "dev_info",
											"value": ""
										},
										{
											"key": "os_info",
											"value": ""
										},
										{
											"key": "nw_info",
											"value": ""
										},
										{
											"key": "dev_model",
											"value": ""
										},
										{
											"key": "carrier_type",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "/smartux/getMainPanelInterlockingInfo_NTC47_일반 가입자_SUSA_null_O,O = (AB대상아님) Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// 공통",
											"// WAS 정상응답 체크 (200여부)",
											"pm.test(\"[공통]WAS 정상응답 체크 (200여부)\", function () {",
											"    pm.response.to.have.status(200);   ",
											"});",
											"",
											"// 응답속도 체크(0.5초미만) 여부",
											"pm.test(\"[공통]응답속도 체크(0.5초미만)\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(500);",
											"});",
											"",
											"// 1) 가입자(일반/검수) 구분에 따른 응답 확인",
											"pm.test(\"1) 가입자(일반/검수) 구분에 따른 응답 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"// 2) 어플타입에 따른 응답 구분",
											"pm.test(\"2) 어플타입에 따른 응답 구분\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"// 3) 카테고리 타입 확인",
											"pm.test(\"3) 카테고리 타입 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"let query = {};",
											"pm.request.url.query.all().forEach((param) => { query[param.key] = param.value});",
											"// 4) AB 테스트 확인",
											"pm.test(\"4) AB 테스트 확인\", function () {",
											"    let code = new RegExp(\"(A\\\\d+_\"+query[\"panel_id\"]+\"_\\\\d+|\"+query[\"panel_id\"]+\"_\\\\d+)\");",
											"    let jsonData = pm.response.json();",
											"    let recordset = jsonData.result.recordset;",
											"",
											"    pm.expect(recordset).to.not.empty;",
											"    for(let i in recordset){",
											"        pm.expect(recordset[i].code).to.match(code);",
											"    }",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Host",
										"value": "programming.fleta.com",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://{{mims}}/smartux/getMainPanelInterlockingInfo?sa_id=T61060140414&stb_mac=8c6d.5044.45dd&app_type=SUSA&panel_id=ST02&category_gb=&testId=T000000237&variationId=Q000000500&app_name=&ui_version=&pre_page=&cur_page=&dev_info=&os_info=&nw_info=&dev_model=&carrier_type=",
									"protocol": "http",
									"host": [
										"{{mims}}"
									],
									"path": [
										"smartux",
										"getMainPanelInterlockingInfo"
									],
									"query": [
										{
											"key": "sa_id",
											"value": "T61060140414"
										},
										{
											"key": "stb_mac",
											"value": "8c6d.5044.45dd"
										},
										{
											"key": "app_type",
											"value": "SUSA"
										},
										{
											"key": "panel_id",
											"value": "ST02"
										},
										{
											"key": "category_gb",
											"value": ""
										},
										{
											"key": "testId",
											"value": "T000000237"
										},
										{
											"key": "variationId",
											"value": "Q000000500"
										},
										{
											"key": "app_name",
											"value": ""
										},
										{
											"key": "ui_version",
											"value": ""
										},
										{
											"key": "pre_page",
											"value": ""
										},
										{
											"key": "cur_page",
											"value": ""
										},
										{
											"key": "dev_info",
											"value": ""
										},
										{
											"key": "os_info",
											"value": ""
										},
										{
											"key": "nw_info",
											"value": ""
										},
										{
											"key": "dev_model",
											"value": ""
										},
										{
											"key": "carrier_type",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "/smartux/getMainPanelInterlockingInfo_NTC62_검수 가입자_UX_null_X,null Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// 공통",
											"// WAS 정상응답 체크 (200여부)",
											"pm.test(\"[공통]WAS 정상응답 체크 (200여부)\", function () {",
											"    pm.response.to.have.status(200);   ",
											"});",
											"",
											"// 응답속도 체크(0.5초미만) 여부",
											"pm.test(\"[공통]응답속도 체크(0.5초미만)\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(500);",
											"});",
											"",
											"// 1) 가입자(일반/검수) 구분에 따른 응답 확인",
											"pm.test(\"1) 가입자(일반/검수) 구분에 따른 응답 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"// 2) 어플타입에 따른 응답 구분",
											"pm.test(\"2) 어플타입에 따른 응답 구분\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"// 3) 카테고리 타입 확인",
											"pm.test(\"3) 카테고리 타입 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"let query = {};",
											"pm.request.url.query.all().forEach((param) => { query[param.key] = param.value});",
											"// 4) AB 테스트 확인",
											"pm.test(\"4) AB 테스트 확인\", function () {",
											"    let code = new RegExp(\"(A\\\\d+_\"+query[\"panel_id\"]+\"_\\\\d+|\"+query[\"panel_id\"]+\"_\\\\d+)\");",
											"    let jsonData = pm.response.json();",
											"    let recordset = jsonData.result.recordset;",
											"",
											"    pm.expect(recordset).to.not.empty;",
											"    for(let i in recordset){",
											"        pm.expect(recordset[i].code).to.match(code);",
											"    }",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Host",
										"value": "programming.fleta.com",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://{{mims}}/smartux/getMainPanelInterlockingInfo?sa_id=T61060140414&stb_mac=v000.3529.4486&app_type=UX&panel_id=ST02&category_gb=&testId=QQQQ&variationId=&app_name=&ui_version=&pre_page=&cur_page=&dev_info=&os_info=&nw_info=&dev_model=&carrier_type=",
									"protocol": "http",
									"host": [
										"{{mims}}"
									],
									"path": [
										"smartux",
										"getMainPanelInterlockingInfo"
									],
									"query": [
										{
											"key": "sa_id",
											"value": "T61060140414"
										},
										{
											"key": "stb_mac",
											"value": "v000.3529.4486"
										},
										{
											"key": "app_type",
											"value": "UX"
										},
										{
											"key": "panel_id",
											"value": "ST02"
										},
										{
											"key": "category_gb",
											"value": ""
										},
										{
											"key": "testId",
											"value": "QQQQ"
										},
										{
											"key": "variationId",
											"value": ""
										},
										{
											"key": "app_name",
											"value": ""
										},
										{
											"key": "ui_version",
											"value": ""
										},
										{
											"key": "pre_page",
											"value": ""
										},
										{
											"key": "cur_page",
											"value": ""
										},
										{
											"key": "dev_info",
											"value": ""
										},
										{
											"key": "os_info",
											"value": ""
										},
										{
											"key": "nw_info",
											"value": ""
										},
										{
											"key": "dev_model",
											"value": ""
										},
										{
											"key": "carrier_type",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "/smartux/getMainPanelInterlockingInfo_NTC67_검수 가입자_UX_I30_null,null Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// 공통",
											"// WAS 정상응답 체크 (200여부)",
											"pm.test(\"[공통]WAS 정상응답 체크 (200여부)\", function () {",
											"    pm.response.to.have.status(200);   ",
											"});",
											"",
											"// 응답속도 체크(0.5초미만) 여부",
											"pm.test(\"[공통]응답속도 체크(0.5초미만)\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(500);",
											"});",
											"",
											"// 1) 가입자(일반/검수) 구분에 따른 응답 확인",
											"pm.test(\"1) 가입자(일반/검수) 구분에 따른 응답 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"// 2) 어플타입에 따른 응답 구분",
											"pm.test(\"2) 어플타입에 따른 응답 구분\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"// 3) 카테고리 타입 확인",
											"pm.test(\"3) 카테고리 타입 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"let query = {};",
											"pm.request.url.query.all().forEach((param) => { query[param.key] = param.value});",
											"// 4) AB 테스트 확인",
											"pm.test(\"4) AB 테스트 확인\", function () {",
											"    let code = new RegExp(\"(A\\\\d+_\"+query[\"panel_id\"]+\"_\\\\d+|\"+query[\"panel_id\"]+\"_\\\\d+)\");",
											"    let jsonData = pm.response.json();",
											"    let recordset = jsonData.result.recordset;",
											"",
											"    pm.expect(recordset).to.not.empty;",
											"    for(let i in recordset){",
											"        pm.expect(recordset[i].code).to.match(code);",
											"    }",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Host",
										"value": "programming.fleta.com",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://{{mims}}/smartux/getMainPanelInterlockingInfo?sa_id=T61060140414&stb_mac=v000.3529.4486&app_type=UX&panel_id=ST01&category_gb=I30&testId=&variationId=&app_name=&ui_version=&pre_page=&cur_page=&dev_info=&os_info=&nw_info=&dev_model=&carrier_type=",
									"protocol": "http",
									"host": [
										"{{mims}}"
									],
									"path": [
										"smartux",
										"getMainPanelInterlockingInfo"
									],
									"query": [
										{
											"key": "sa_id",
											"value": "T61060140414"
										},
										{
											"key": "stb_mac",
											"value": "v000.3529.4486"
										},
										{
											"key": "app_type",
											"value": "UX"
										},
										{
											"key": "panel_id",
											"value": "ST01"
										},
										{
											"key": "category_gb",
											"value": "I30"
										},
										{
											"key": "testId",
											"value": ""
										},
										{
											"key": "variationId",
											"value": ""
										},
										{
											"key": "app_name",
											"value": ""
										},
										{
											"key": "ui_version",
											"value": ""
										},
										{
											"key": "pre_page",
											"value": ""
										},
										{
											"key": "cur_page",
											"value": ""
										},
										{
											"key": "dev_info",
											"value": ""
										},
										{
											"key": "os_info",
											"value": ""
										},
										{
											"key": "nw_info",
											"value": ""
										},
										{
											"key": "dev_model",
											"value": ""
										},
										{
											"key": "carrier_type",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "/smartux/getMainPanelInterlockingInfo_NTC76_검수 가입자_SMA_I20_O,O = (AB대상) Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// 공통",
											"// WAS 정상응답 체크 (200여부)",
											"pm.test(\"[공통]WAS 정상응답 체크 (200여부)\", function () {",
											"    pm.response.to.have.status(200);   ",
											"});",
											"",
											"// 응답속도 체크(0.5초미만) 여부",
											"pm.test(\"[공통]응답속도 체크(0.5초미만)\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(500);",
											"});",
											"",
											"// 1) 가입자(일반/검수) 구분에 따른 응답 확인",
											"pm.test(\"1) 가입자(일반/검수) 구분에 따른 응답 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"// 2) 어플타입에 따른 응답 구분",
											"pm.test(\"2) 어플타입에 따른 응답 구분\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"// 3) 카테고리 타입 확인",
											"pm.test(\"3) 카테고리 타입 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"let query = {};",
											"pm.request.url.query.all().forEach((param) => { query[param.key] = param.value});",
											"// 4) AB 테스트 확인",
											"pm.test(\"4) AB 테스트 확인\", function () {",
											"    let code = new RegExp(\"(A\\\\d+_\"+query[\"panel_id\"]+\"_\\\\d+|\"+query[\"panel_id\"]+\"_\\\\d+)\");",
											"    let jsonData = pm.response.json();",
											"    let recordset = jsonData.result.recordset;",
											"",
											"    pm.expect(recordset).to.not.empty;",
											"    for(let i in recordset){",
											"        pm.expect(recordset[i].code).to.match(code);",
											"    }",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Host",
										"value": "programming.fleta.com",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://{{mims}}/smartux/getMainPanelInterlockingInfo?sa_id=T61060140414&stb_mac=v000.3529.4486&app_type=SMA&panel_id=CP01&category_gb=I20&testId=T000000237&variationId=V000000500&app_name=&ui_version=&pre_page=&cur_page=&dev_info=&os_info=&nw_info=&dev_model=&carrier_type=",
									"protocol": "http",
									"host": [
										"{{mims}}"
									],
									"path": [
										"smartux",
										"getMainPanelInterlockingInfo"
									],
									"query": [
										{
											"key": "sa_id",
											"value": "T61060140414"
										},
										{
											"key": "stb_mac",
											"value": "v000.3529.4486"
										},
										{
											"key": "app_type",
											"value": "SMA"
										},
										{
											"key": "panel_id",
											"value": "CP01"
										},
										{
											"key": "category_gb",
											"value": "I20"
										},
										{
											"key": "testId",
											"value": "T000000237"
										},
										{
											"key": "variationId",
											"value": "V000000500"
										},
										{
											"key": "app_name",
											"value": ""
										},
										{
											"key": "ui_version",
											"value": ""
										},
										{
											"key": "pre_page",
											"value": ""
										},
										{
											"key": "cur_page",
											"value": ""
										},
										{
											"key": "dev_info",
											"value": ""
										},
										{
											"key": "os_info",
											"value": ""
										},
										{
											"key": "nw_info",
											"value": ""
										},
										{
											"key": "dev_model",
											"value": ""
										},
										{
											"key": "carrier_type",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "/smartux/getMainPanelInterlockingInfo_NTC71_검수 가입자_UX_I30_O,O = (AB대상아님) Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// 공통",
											"// WAS 정상응답 체크 (200여부)",
											"pm.test(\"[공통]WAS 정상응답 체크 (200여부)\", function () {",
											"    pm.response.to.have.status(200);   ",
											"});",
											"",
											"// 응답속도 체크(0.5초미만) 여부",
											"pm.test(\"[공통]응답속도 체크(0.5초미만)\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(500);",
											"});",
											"",
											"// 1) 가입자(일반/검수) 구분에 따른 응답 확인",
											"pm.test(\"1) 가입자(일반/검수) 구분에 따른 응답 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"// 2) 어플타입에 따른 응답 구분",
											"pm.test(\"2) 어플타입에 따른 응답 구분\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"// 3) 카테고리 타입 확인",
											"pm.test(\"3) 카테고리 타입 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"let query = {};",
											"pm.request.url.query.all().forEach((param) => { query[param.key] = param.value});",
											"// 4) AB 테스트 확인",
											"pm.test(\"4) AB 테스트 확인\", function () {",
											"    let code = new RegExp(\"(A\\\\d+_\"+query[\"panel_id\"]+\"_\\\\d+|\"+query[\"panel_id\"]+\"_\\\\d+)\");",
											"    let jsonData = pm.response.json();",
											"    let recordset = jsonData.result.recordset;",
											"",
											"    pm.expect(recordset).to.not.empty;",
											"    for(let i in recordset){",
											"        pm.expect(recordset[i].code).to.match(code);",
											"    }",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Host",
										"value": "programming.fleta.com",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://{{mims}}/smartux/getMainPanelInterlockingInfo?sa_id=T61060140414&stb_mac=v000.3529.4486&app_type=UX&panel_id=ST01&category_gb=I30&testId=T000000237&variationId=Q000000500&app_name=&ui_version=&pre_page=&cur_page=&dev_info=&os_info=&nw_info=&dev_model=&carrier_type=",
									"protocol": "http",
									"host": [
										"{{mims}}"
									],
									"path": [
										"smartux",
										"getMainPanelInterlockingInfo"
									],
									"query": [
										{
											"key": "sa_id",
											"value": "T61060140414"
										},
										{
											"key": "stb_mac",
											"value": "v000.3529.4486"
										},
										{
											"key": "app_type",
											"value": "UX"
										},
										{
											"key": "panel_id",
											"value": "ST01"
										},
										{
											"key": "category_gb",
											"value": "I30"
										},
										{
											"key": "testId",
											"value": "T000000237"
										},
										{
											"key": "variationId",
											"value": "Q000000500"
										},
										{
											"key": "app_name",
											"value": ""
										},
										{
											"key": "ui_version",
											"value": ""
										},
										{
											"key": "pre_page",
											"value": ""
										},
										{
											"key": "cur_page",
											"value": ""
										},
										{
											"key": "dev_info",
											"value": ""
										},
										{
											"key": "os_info",
											"value": ""
										},
										{
											"key": "nw_info",
											"value": ""
										},
										{
											"key": "dev_model",
											"value": ""
										},
										{
											"key": "carrier_type",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "/smartux/getMainPanelInterlockingInfo_NTC64_검수 가입자_UX_null_O,O = (AB대상) Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// 공통",
											"// WAS 정상응답 체크 (200여부)",
											"pm.test(\"[공통]WAS 정상응답 체크 (200여부)\", function () {",
											"    pm.response.to.have.status(200);   ",
											"});",
											"",
											"// 응답속도 체크(0.5초미만) 여부",
											"pm.test(\"[공통]응답속도 체크(0.5초미만)\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(500);",
											"});",
											"",
											"// 1) 가입자(일반/검수) 구분에 따른 응답 확인",
											"pm.test(\"1) 가입자(일반/검수) 구분에 따른 응답 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"// 2) 어플타입에 따른 응답 구분",
											"pm.test(\"2) 어플타입에 따른 응답 구분\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"// 3) 카테고리 타입 확인",
											"pm.test(\"3) 카테고리 타입 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"let query = {};",
											"pm.request.url.query.all().forEach((param) => { query[param.key] = param.value});",
											"// 4) AB 테스트 확인",
											"pm.test(\"4) AB 테스트 확인\", function () {",
											"    let code = new RegExp(\"(A\\\\d+_\"+query[\"panel_id\"]+\"_\\\\d+|\"+query[\"panel_id\"]+\"_\\\\d+)\");",
											"    let jsonData = pm.response.json();",
											"    let recordset = jsonData.result.recordset;",
											"",
											"    pm.expect(recordset).to.not.empty;",
											"    for(let i in recordset){",
											"        pm.expect(recordset[i].code).to.match(code);",
											"    }",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Host",
										"value": "programming.fleta.com",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://{{mims}}/smartux/getMainPanelInterlockingInfo?sa_id=T61060140414&stb_mac=v000.3529.4486&app_type=UX&panel_id=CP01&category_gb=&testId=T000000237&variationId=V000000500&app_name=&ui_version=&pre_page=&cur_page=&dev_info=&os_info=&nw_info=&dev_model=&carrier_type=",
									"protocol": "http",
									"host": [
										"{{mims}}"
									],
									"path": [
										"smartux",
										"getMainPanelInterlockingInfo"
									],
									"query": [
										{
											"key": "sa_id",
											"value": "T61060140414"
										},
										{
											"key": "stb_mac",
											"value": "v000.3529.4486"
										},
										{
											"key": "app_type",
											"value": "UX"
										},
										{
											"key": "panel_id",
											"value": "CP01"
										},
										{
											"key": "category_gb",
											"value": ""
										},
										{
											"key": "testId",
											"value": "T000000237"
										},
										{
											"key": "variationId",
											"value": "V000000500"
										},
										{
											"key": "app_name",
											"value": ""
										},
										{
											"key": "ui_version",
											"value": ""
										},
										{
											"key": "pre_page",
											"value": ""
										},
										{
											"key": "cur_page",
											"value": ""
										},
										{
											"key": "dev_info",
											"value": ""
										},
										{
											"key": "os_info",
											"value": ""
										},
										{
											"key": "nw_info",
											"value": ""
										},
										{
											"key": "dev_model",
											"value": ""
										},
										{
											"key": "carrier_type",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "/smartux/getMainPanelInterlockingInfo_NTC86_검수 가입자_SMA_I30_X,null Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// 공통",
											"// WAS 정상응답 체크 (200여부)",
											"pm.test(\"[공통]WAS 정상응답 체크 (200여부)\", function () {",
											"    pm.response.to.have.status(200);   ",
											"});",
											"",
											"// 응답속도 체크(0.5초미만) 여부",
											"pm.test(\"[공통]응답속도 체크(0.5초미만)\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(500);",
											"});",
											"",
											"// 1) 가입자(일반/검수) 구분에 따른 응답 확인",
											"pm.test(\"1) 가입자(일반/검수) 구분에 따른 응답 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"// 2) 어플타입에 따른 응답 구분",
											"pm.test(\"2) 어플타입에 따른 응답 구분\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"// 3) 카테고리 타입 확인",
											"pm.test(\"3) 카테고리 타입 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"let query = {};",
											"pm.request.url.query.all().forEach((param) => { query[param.key] = param.value});",
											"// 4) AB 테스트 확인",
											"pm.test(\"4) AB 테스트 확인\", function () {",
											"    let code = new RegExp(\"(A\\\\d+_\"+query[\"panel_id\"]+\"_\\\\d+|\"+query[\"panel_id\"]+\"_\\\\d+)\");",
											"    let jsonData = pm.response.json();",
											"    let recordset = jsonData.result.recordset;",
											"",
											"    pm.expect(recordset).to.not.empty;",
											"    for(let i in recordset){",
											"        pm.expect(recordset[i].code).to.match(code);",
											"    }",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Host",
										"value": "programming.fleta.com",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://{{mims}}/smartux/getMainPanelInterlockingInfo?sa_id=T61060140414&stb_mac=v000.3529.4486&app_type=SMA&panel_id=ST01&category_gb=I30&testId=QQQQ&variationId=&app_name=&ui_version=&pre_page=&cur_page=&dev_info=&os_info=&nw_info=&dev_model=&carrier_type=",
									"protocol": "http",
									"host": [
										"{{mims}}"
									],
									"path": [
										"smartux",
										"getMainPanelInterlockingInfo"
									],
									"query": [
										{
											"key": "sa_id",
											"value": "T61060140414"
										},
										{
											"key": "stb_mac",
											"value": "v000.3529.4486"
										},
										{
											"key": "app_type",
											"value": "SMA"
										},
										{
											"key": "panel_id",
											"value": "ST01"
										},
										{
											"key": "category_gb",
											"value": "I30"
										},
										{
											"key": "testId",
											"value": "QQQQ"
										},
										{
											"key": "variationId",
											"value": ""
										},
										{
											"key": "app_name",
											"value": ""
										},
										{
											"key": "ui_version",
											"value": ""
										},
										{
											"key": "pre_page",
											"value": ""
										},
										{
											"key": "cur_page",
											"value": ""
										},
										{
											"key": "dev_info",
											"value": ""
										},
										{
											"key": "os_info",
											"value": ""
										},
										{
											"key": "nw_info",
											"value": ""
										},
										{
											"key": "dev_model",
											"value": ""
										},
										{
											"key": "carrier_type",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "/smartux/getMainPanelInterlockingInfo_NTC94_검수 가입자_SUSA_I20_O,O = (AB대상) Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// 공통",
											"// WAS 정상응답 체크 (200여부)",
											"pm.test(\"[공통]WAS 정상응답 체크 (200여부)\", function () {",
											"    pm.response.to.have.status(200);   ",
											"});",
											"",
											"// 응답속도 체크(0.5초미만) 여부",
											"pm.test(\"[공통]응답속도 체크(0.5초미만)\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(500);",
											"});",
											"",
											"// 1) 가입자(일반/검수) 구분에 따른 응답 확인",
											"pm.test(\"1) 가입자(일반/검수) 구분에 따른 응답 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"// 2) 어플타입에 따른 응답 구분",
											"pm.test(\"2) 어플타입에 따른 응답 구분\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"// 3) 카테고리 타입 확인",
											"pm.test(\"3) 카테고리 타입 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"let query = {};",
											"pm.request.url.query.all().forEach((param) => { query[param.key] = param.value});",
											"// 4) AB 테스트 확인",
											"pm.test(\"4) AB 테스트 확인\", function () {",
											"    let code = new RegExp(\"(A\\\\d+_\"+query[\"panel_id\"]+\"_\\\\d+|\"+query[\"panel_id\"]+\"_\\\\d+)\");",
											"    let jsonData = pm.response.json();",
											"    let recordset = jsonData.result.recordset;",
											"",
											"    pm.expect(recordset).to.not.empty;",
											"    for(let i in recordset){",
											"        pm.expect(recordset[i].code).to.match(code);",
											"    }",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Host",
										"value": "programming.fleta.com",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://{{mims}}/smartux/getMainPanelInterlockingInfo?sa_id=T61060140414&stb_mac=v000.3529.4486&app_type=SUSA&panel_id=CP01&category_gb=I20&testId=T000000237&variationId=V000000500&app_name=&ui_version=&pre_page=&cur_page=&dev_info=&os_info=&nw_info=&dev_model=&carrier_type=",
									"protocol": "http",
									"host": [
										"{{mims}}"
									],
									"path": [
										"smartux",
										"getMainPanelInterlockingInfo"
									],
									"query": [
										{
											"key": "sa_id",
											"value": "T61060140414"
										},
										{
											"key": "stb_mac",
											"value": "v000.3529.4486"
										},
										{
											"key": "app_type",
											"value": "SUSA"
										},
										{
											"key": "panel_id",
											"value": "CP01"
										},
										{
											"key": "category_gb",
											"value": "I20"
										},
										{
											"key": "testId",
											"value": "T000000237"
										},
										{
											"key": "variationId",
											"value": "V000000500"
										},
										{
											"key": "app_name",
											"value": ""
										},
										{
											"key": "ui_version",
											"value": ""
										},
										{
											"key": "pre_page",
											"value": ""
										},
										{
											"key": "cur_page",
											"value": ""
										},
										{
											"key": "dev_info",
											"value": ""
										},
										{
											"key": "os_info",
											"value": ""
										},
										{
											"key": "nw_info",
											"value": ""
										},
										{
											"key": "dev_model",
											"value": ""
										},
										{
											"key": "carrier_type",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "/smartux/getMainPanelInterlockingInfo_NTC34_일반 가입자_SMA_I30_O,O = (AB대상) Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// 공통",
											"// WAS 정상응답 체크 (200여부)",
											"pm.test(\"[공통]WAS 정상응답 체크 (200여부)\", function () {",
											"    pm.response.to.have.status(200);   ",
											"});",
											"",
											"// 응답속도 체크(0.5초미만) 여부",
											"pm.test(\"[공통]응답속도 체크(0.5초미만)\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(500);",
											"});",
											"",
											"// 1) 가입자(일반/검수) 구분에 따른 응답 확인",
											"pm.test(\"1) 가입자(일반/검수) 구분에 따른 응답 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"// 2) 어플타입에 따른 응답 구분",
											"pm.test(\"2) 어플타입에 따른 응답 구분\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"// 3) 카테고리 타입 확인",
											"pm.test(\"3) 카테고리 타입 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"let query = {};",
											"pm.request.url.query.all().forEach((param) => { query[param.key] = param.value});",
											"// 4) AB 테스트 확인",
											"pm.test(\"4) AB 테스트 확인\", function () {",
											"    let code = new RegExp(\"(A\\\\d+_\"+query[\"panel_id\"]+\"_\\\\d+|\"+query[\"panel_id\"]+\"_\\\\d+)\");",
											"    let jsonData = pm.response.json();",
											"    let recordset = jsonData.result.recordset;",
											"",
											"    pm.expect(recordset).to.not.empty;",
											"    for(let i in recordset){",
											"        pm.expect(recordset[i].code).to.match(code);",
											"    }",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Host",
										"value": "programming.fleta.com",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://{{mims}}/smartux/getMainPanelInterlockingInfo?sa_id=T61060140414&stb_mac=8c6d.5044.45dd&app_type=SMA&panel_id=CP01&category_gb=I30&testId=T000000237&variationId=V000000500&app_name=&ui_version=&pre_page=&cur_page=&dev_info=&os_info=&nw_info=&dev_model=&carrier_type=",
									"protocol": "http",
									"host": [
										"{{mims}}"
									],
									"path": [
										"smartux",
										"getMainPanelInterlockingInfo"
									],
									"query": [
										{
											"key": "sa_id",
											"value": "T61060140414"
										},
										{
											"key": "stb_mac",
											"value": "8c6d.5044.45dd"
										},
										{
											"key": "app_type",
											"value": "SMA"
										},
										{
											"key": "panel_id",
											"value": "CP01"
										},
										{
											"key": "category_gb",
											"value": "I30"
										},
										{
											"key": "testId",
											"value": "T000000237"
										},
										{
											"key": "variationId",
											"value": "V000000500"
										},
										{
											"key": "app_name",
											"value": ""
										},
										{
											"key": "ui_version",
											"value": ""
										},
										{
											"key": "pre_page",
											"value": ""
										},
										{
											"key": "cur_page",
											"value": ""
										},
										{
											"key": "dev_info",
											"value": ""
										},
										{
											"key": "os_info",
											"value": ""
										},
										{
											"key": "nw_info",
											"value": ""
										},
										{
											"key": "dev_model",
											"value": ""
										},
										{
											"key": "carrier_type",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "/smartux/getMainPanelInterlockingInfo_NTC100_검수 가입자_SUSA_null_O,O = (AB대상) Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// 공통",
											"// WAS 정상응답 체크 (200여부)",
											"pm.test(\"[공통]WAS 정상응답 체크 (200여부)\", function () {",
											"    pm.response.to.have.status(200);   ",
											"});",
											"",
											"// 응답속도 체크(0.5초미만) 여부",
											"pm.test(\"[공통]응답속도 체크(0.5초미만)\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(500);",
											"});",
											"",
											"// 1) 가입자(일반/검수) 구분에 따른 응답 확인",
											"pm.test(\"1) 가입자(일반/검수) 구분에 따른 응답 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"// 2) 어플타입에 따른 응답 구분",
											"pm.test(\"2) 어플타입에 따른 응답 구분\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"// 3) 카테고리 타입 확인",
											"pm.test(\"3) 카테고리 타입 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"let query = {};",
											"pm.request.url.query.all().forEach((param) => { query[param.key] = param.value});",
											"// 4) AB 테스트 확인",
											"pm.test(\"4) AB 테스트 확인\", function () {",
											"    let code = new RegExp(\"(A\\\\d+_\"+query[\"panel_id\"]+\"_\\\\d+|\"+query[\"panel_id\"]+\"_\\\\d+)\");",
											"    let jsonData = pm.response.json();",
											"    let recordset = jsonData.result.recordset;",
											"",
											"    pm.expect(recordset).to.not.empty;",
											"    for(let i in recordset){",
											"        pm.expect(recordset[i].code).to.match(code);",
											"    }",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Host",
										"value": "programming.fleta.com",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://{{mims}}/smartux/getMainPanelInterlockingInfo?sa_id=T61060140414&stb_mac=v000.3529.4486&app_type=SUSA&panel_id=CP01&category_gb=&testId=T000000237&variationId=V000000500&app_name=&ui_version=&pre_page=&cur_page=&dev_info=&os_info=&nw_info=&dev_model=&carrier_type=",
									"protocol": "http",
									"host": [
										"{{mims}}"
									],
									"path": [
										"smartux",
										"getMainPanelInterlockingInfo"
									],
									"query": [
										{
											"key": "sa_id",
											"value": "T61060140414"
										},
										{
											"key": "stb_mac",
											"value": "v000.3529.4486"
										},
										{
											"key": "app_type",
											"value": "SUSA"
										},
										{
											"key": "panel_id",
											"value": "CP01"
										},
										{
											"key": "category_gb",
											"value": ""
										},
										{
											"key": "testId",
											"value": "T000000237"
										},
										{
											"key": "variationId",
											"value": "V000000500"
										},
										{
											"key": "app_name",
											"value": ""
										},
										{
											"key": "ui_version",
											"value": ""
										},
										{
											"key": "pre_page",
											"value": ""
										},
										{
											"key": "cur_page",
											"value": ""
										},
										{
											"key": "dev_info",
											"value": ""
										},
										{
											"key": "os_info",
											"value": ""
										},
										{
											"key": "nw_info",
											"value": ""
										},
										{
											"key": "dev_model",
											"value": ""
										},
										{
											"key": "carrier_type",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "/smartux/getMainPanelInterlockingInfo_NTC106_검수 가입자_SUSA_I30_O,O = (AB대상) Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// 공통",
											"// WAS 정상응답 체크 (200여부)",
											"pm.test(\"[공통]WAS 정상응답 체크 (200여부)\", function () {",
											"    pm.response.to.have.status(200);   ",
											"});",
											"",
											"// 응답속도 체크(0.5초미만) 여부",
											"pm.test(\"[공통]응답속도 체크(0.5초미만)\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(500);",
											"});",
											"",
											"// 1) 가입자(일반/검수) 구분에 따른 응답 확인",
											"pm.test(\"1) 가입자(일반/검수) 구분에 따른 응답 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"// 2) 어플타입에 따른 응답 구분",
											"pm.test(\"2) 어플타입에 따른 응답 구분\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"// 3) 카테고리 타입 확인",
											"pm.test(\"3) 카테고리 타입 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"let query = {};",
											"pm.request.url.query.all().forEach((param) => { query[param.key] = param.value});",
											"// 4) AB 테스트 확인",
											"pm.test(\"4) AB 테스트 확인\", function () {",
											"    let code = new RegExp(\"(A\\\\d+_\"+query[\"panel_id\"]+\"_\\\\d+|\"+query[\"panel_id\"]+\"_\\\\d+)\");",
											"    let jsonData = pm.response.json();",
											"    let recordset = jsonData.result.recordset;",
											"",
											"    pm.expect(recordset).to.not.empty;",
											"    for(let i in recordset){",
											"        pm.expect(recordset[i].code).to.match(code);",
											"    }",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Host",
										"value": "programming.fleta.com",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://{{mims}}/smartux/getMainPanelInterlockingInfo?sa_id=T61060140414&stb_mac=v000.3529.4486&app_type=SUSA&panel_id=CP01&category_gb=I30&testId=T000000237&variationId=V000000500&app_name=&ui_version=&pre_page=&cur_page=&dev_info=&os_info=&nw_info=&dev_model=&carrier_type=",
									"protocol": "http",
									"host": [
										"{{mims}}"
									],
									"path": [
										"smartux",
										"getMainPanelInterlockingInfo"
									],
									"query": [
										{
											"key": "sa_id",
											"value": "T61060140414"
										},
										{
											"key": "stb_mac",
											"value": "v000.3529.4486"
										},
										{
											"key": "app_type",
											"value": "SUSA"
										},
										{
											"key": "panel_id",
											"value": "CP01"
										},
										{
											"key": "category_gb",
											"value": "I30"
										},
										{
											"key": "testId",
											"value": "T000000237"
										},
										{
											"key": "variationId",
											"value": "V000000500"
										},
										{
											"key": "app_name",
											"value": ""
										},
										{
											"key": "ui_version",
											"value": ""
										},
										{
											"key": "pre_page",
											"value": ""
										},
										{
											"key": "cur_page",
											"value": ""
										},
										{
											"key": "dev_info",
											"value": ""
										},
										{
											"key": "os_info",
											"value": ""
										},
										{
											"key": "nw_info",
											"value": ""
										},
										{
											"key": "dev_model",
											"value": ""
										},
										{
											"key": "carrier_type",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "/smartux/getMainPanelInterlockingInfo_NTC29_일반 가입자_SMA_null_O,O = (AB대상아님) Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// 공통",
											"// WAS 정상응답 체크 (200여부)",
											"pm.test(\"[공통]WAS 정상응답 체크 (200여부)\", function () {",
											"    pm.response.to.have.status(200);   ",
											"});",
											"",
											"// 응답속도 체크(0.5초미만) 여부",
											"pm.test(\"[공통]응답속도 체크(0.5초미만)\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(500);",
											"});",
											"",
											"// 1) 가입자(일반/검수) 구분에 따른 응답 확인",
											"pm.test(\"1) 가입자(일반/검수) 구분에 따른 응답 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"// 2) 어플타입에 따른 응답 구분",
											"pm.test(\"2) 어플타입에 따른 응답 구분\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"// 3) 카테고리 타입 확인",
											"pm.test(\"3) 카테고리 타입 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"let query = {};",
											"pm.request.url.query.all().forEach((param) => { query[param.key] = param.value});",
											"// 4) AB 테스트 확인",
											"pm.test(\"4) AB 테스트 확인\", function () {",
											"    let code = new RegExp(\"(A\\\\d+_\"+query[\"panel_id\"]+\"_\\\\d+|\"+query[\"panel_id\"]+\"_\\\\d+)\");",
											"    let jsonData = pm.response.json();",
											"    let recordset = jsonData.result.recordset;",
											"",
											"    pm.expect(recordset).to.not.empty;",
											"    for(let i in recordset){",
											"        pm.expect(recordset[i].code).to.match(code);",
											"    }",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Host",
										"value": "programming.fleta.com",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://{{mims}}/smartux/getMainPanelInterlockingInfo?sa_id=T61060140414&stb_mac=8c6d.5044.45dd&app_type=SMA&panel_id=ST02&category_gb=&testId=T000000237&variationId=Q000000500&app_name=&ui_version=&pre_page=&cur_page=&dev_info=&os_info=&nw_info=&dev_model=&carrier_type=",
									"protocol": "http",
									"host": [
										"{{mims}}"
									],
									"path": [
										"smartux",
										"getMainPanelInterlockingInfo"
									],
									"query": [
										{
											"key": "sa_id",
											"value": "T61060140414"
										},
										{
											"key": "stb_mac",
											"value": "8c6d.5044.45dd"
										},
										{
											"key": "app_type",
											"value": "SMA"
										},
										{
											"key": "panel_id",
											"value": "ST02"
										},
										{
											"key": "category_gb",
											"value": ""
										},
										{
											"key": "testId",
											"value": "T000000237"
										},
										{
											"key": "variationId",
											"value": "Q000000500"
										},
										{
											"key": "app_name",
											"value": ""
										},
										{
											"key": "ui_version",
											"value": ""
										},
										{
											"key": "pre_page",
											"value": ""
										},
										{
											"key": "cur_page",
											"value": ""
										},
										{
											"key": "dev_info",
											"value": ""
										},
										{
											"key": "os_info",
											"value": ""
										},
										{
											"key": "nw_info",
											"value": ""
										},
										{
											"key": "dev_model",
											"value": ""
										},
										{
											"key": "carrier_type",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "/smartux/getMainPanelInterlockingInfo_NTC46_일반 가입자_SUSA_null_O,O = (AB대상) Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// 공통",
											"// WAS 정상응답 체크 (200여부)",
											"pm.test(\"[공통]WAS 정상응답 체크 (200여부)\", function () {",
											"    pm.response.to.have.status(200);   ",
											"});",
											"",
											"// 응답속도 체크(0.5초미만) 여부",
											"pm.test(\"[공통]응답속도 체크(0.5초미만)\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(500);",
											"});",
											"",
											"// 1) 가입자(일반/검수) 구분에 따른 응답 확인",
											"pm.test(\"1) 가입자(일반/검수) 구분에 따른 응답 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"// 2) 어플타입에 따른 응답 구분",
											"pm.test(\"2) 어플타입에 따른 응답 구분\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"// 3) 카테고리 타입 확인",
											"pm.test(\"3) 카테고리 타입 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"let query = {};",
											"pm.request.url.query.all().forEach((param) => { query[param.key] = param.value});",
											"// 4) AB 테스트 확인",
											"pm.test(\"4) AB 테스트 확인\", function () {",
											"    let code = new RegExp(\"(A\\\\d+_\"+query[\"panel_id\"]+\"_\\\\d+|\"+query[\"panel_id\"]+\"_\\\\d+)\");",
											"    let jsonData = pm.response.json();",
											"    let recordset = jsonData.result.recordset;",
											"",
											"    pm.expect(recordset).to.not.empty;",
											"    for(let i in recordset){",
											"        pm.expect(recordset[i].code).to.match(code);",
											"    }",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Host",
										"value": "programming.fleta.com",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://{{mims}}/smartux/getMainPanelInterlockingInfo?sa_id=T61060140414&stb_mac=8c6d.5044.45dd&app_type=SUSA&panel_id=CP01&category_gb=&testId=T000000237&variationId=V000000500&app_name=&ui_version=&pre_page=&cur_page=&dev_info=&os_info=&nw_info=&dev_model=&carrier_type=",
									"protocol": "http",
									"host": [
										"{{mims}}"
									],
									"path": [
										"smartux",
										"getMainPanelInterlockingInfo"
									],
									"query": [
										{
											"key": "sa_id",
											"value": "T61060140414"
										},
										{
											"key": "stb_mac",
											"value": "8c6d.5044.45dd"
										},
										{
											"key": "app_type",
											"value": "SUSA"
										},
										{
											"key": "panel_id",
											"value": "CP01"
										},
										{
											"key": "category_gb",
											"value": ""
										},
										{
											"key": "testId",
											"value": "T000000237"
										},
										{
											"key": "variationId",
											"value": "V000000500"
										},
										{
											"key": "app_name",
											"value": ""
										},
										{
											"key": "ui_version",
											"value": ""
										},
										{
											"key": "pre_page",
											"value": ""
										},
										{
											"key": "cur_page",
											"value": ""
										},
										{
											"key": "dev_info",
											"value": ""
										},
										{
											"key": "os_info",
											"value": ""
										},
										{
											"key": "nw_info",
											"value": ""
										},
										{
											"key": "dev_model",
											"value": ""
										},
										{
											"key": "carrier_type",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "/smartux/getMainPanelInterlockingInfo_NTC56_검수 가입자_UX_I20_X,null Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// 공통",
											"// WAS 정상응답 체크 (200여부)",
											"pm.test(\"[공통]WAS 정상응답 체크 (200여부)\", function () {",
											"    pm.response.to.have.status(200);   ",
											"});",
											"",
											"// 응답속도 체크(0.5초미만) 여부",
											"pm.test(\"[공통]응답속도 체크(0.5초미만)\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(500);",
											"});",
											"",
											"// 1) 가입자(일반/검수) 구분에 따른 응답 확인",
											"pm.test(\"1) 가입자(일반/검수) 구분에 따른 응답 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"// 2) 어플타입에 따른 응답 구분",
											"pm.test(\"2) 어플타입에 따른 응답 구분\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"// 3) 카테고리 타입 확인",
											"pm.test(\"3) 카테고리 타입 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"let query = {};",
											"pm.request.url.query.all().forEach((param) => { query[param.key] = param.value});",
											"// 4) AB 테스트 확인",
											"pm.test(\"4) AB 테스트 확인\", function () {",
											"    let code = new RegExp(\"(A\\\\d+_\"+query[\"panel_id\"]+\"_\\\\d+|\"+query[\"panel_id\"]+\"_\\\\d+)\");",
											"    let jsonData = pm.response.json();",
											"    let recordset = jsonData.result.recordset;",
											"",
											"    pm.expect(recordset).to.not.empty;",
											"    for(let i in recordset){",
											"        pm.expect(recordset[i].code).to.match(code);",
											"    }",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Host",
										"value": "programming.fleta.com",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://{{mims}}/smartux/getMainPanelInterlockingInfo?sa_id=T61060140414&stb_mac=v000.3529.4486&app_type=UX&panel_id=ST02&category_gb=I20&testId=QQQQ&variationId=&app_name=&ui_version=&pre_page=&cur_page=&dev_info=&os_info=&nw_info=&dev_model=&carrier_type=",
									"protocol": "http",
									"host": [
										"{{mims}}"
									],
									"path": [
										"smartux",
										"getMainPanelInterlockingInfo"
									],
									"query": [
										{
											"key": "sa_id",
											"value": "T61060140414"
										},
										{
											"key": "stb_mac",
											"value": "v000.3529.4486"
										},
										{
											"key": "app_type",
											"value": "UX"
										},
										{
											"key": "panel_id",
											"value": "ST02"
										},
										{
											"key": "category_gb",
											"value": "I20"
										},
										{
											"key": "testId",
											"value": "QQQQ"
										},
										{
											"key": "variationId",
											"value": ""
										},
										{
											"key": "app_name",
											"value": ""
										},
										{
											"key": "ui_version",
											"value": ""
										},
										{
											"key": "pre_page",
											"value": ""
										},
										{
											"key": "cur_page",
											"value": ""
										},
										{
											"key": "dev_info",
											"value": ""
										},
										{
											"key": "os_info",
											"value": ""
										},
										{
											"key": "nw_info",
											"value": ""
										},
										{
											"key": "dev_model",
											"value": ""
										},
										{
											"key": "carrier_type",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "/smartux/getMainPanelInterlockingInfo_NTC77_검수 가입자_SMA_I20_O,O = (AB대상아님) Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// 공통",
											"// WAS 정상응답 체크 (200여부)",
											"pm.test(\"[공통]WAS 정상응답 체크 (200여부)\", function () {",
											"    pm.response.to.have.status(200);   ",
											"});",
											"",
											"// 응답속도 체크(0.5초미만) 여부",
											"pm.test(\"[공통]응답속도 체크(0.5초미만)\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(500);",
											"});",
											"",
											"// 1) 가입자(일반/검수) 구분에 따른 응답 확인",
											"pm.test(\"1) 가입자(일반/검수) 구분에 따른 응답 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"// 2) 어플타입에 따른 응답 구분",
											"pm.test(\"2) 어플타입에 따른 응답 구분\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"// 3) 카테고리 타입 확인",
											"pm.test(\"3) 카테고리 타입 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"let query = {};",
											"pm.request.url.query.all().forEach((param) => { query[param.key] = param.value});",
											"// 4) AB 테스트 확인",
											"pm.test(\"4) AB 테스트 확인\", function () {",
											"    let code = new RegExp(\"(A\\\\d+_\"+query[\"panel_id\"]+\"_\\\\d+|\"+query[\"panel_id\"]+\"_\\\\d+)\");",
											"    let jsonData = pm.response.json();",
											"    let recordset = jsonData.result.recordset;",
											"",
											"    pm.expect(recordset).to.not.empty;",
											"    for(let i in recordset){",
											"        pm.expect(recordset[i].code).to.match(code);",
											"    }",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Host",
										"value": "programming.fleta.com",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://{{mims}}/smartux/getMainPanelInterlockingInfo?sa_id=T61060140414&stb_mac=v000.3529.4486&app_type=SMA&panel_id=ST02&category_gb=I20&testId=T000000237&variationId=Q000000500&app_name=&ui_version=&pre_page=&cur_page=&dev_info=&os_info=&nw_info=&dev_model=&carrier_type=",
									"protocol": "http",
									"host": [
										"{{mims}}"
									],
									"path": [
										"smartux",
										"getMainPanelInterlockingInfo"
									],
									"query": [
										{
											"key": "sa_id",
											"value": "T61060140414"
										},
										{
											"key": "stb_mac",
											"value": "v000.3529.4486"
										},
										{
											"key": "app_type",
											"value": "SMA"
										},
										{
											"key": "panel_id",
											"value": "ST02"
										},
										{
											"key": "category_gb",
											"value": "I20"
										},
										{
											"key": "testId",
											"value": "T000000237"
										},
										{
											"key": "variationId",
											"value": "Q000000500"
										},
										{
											"key": "app_name",
											"value": ""
										},
										{
											"key": "ui_version",
											"value": ""
										},
										{
											"key": "pre_page",
											"value": ""
										},
										{
											"key": "cur_page",
											"value": ""
										},
										{
											"key": "dev_info",
											"value": ""
										},
										{
											"key": "os_info",
											"value": ""
										},
										{
											"key": "nw_info",
											"value": ""
										},
										{
											"key": "dev_model",
											"value": ""
										},
										{
											"key": "carrier_type",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "/smartux/getMainPanelInterlockingInfo_NTC23_일반 가입자_SMA_I20_O,O = (AB대상아님) Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// 공통",
											"// WAS 정상응답 체크 (200여부)",
											"pm.test(\"[공통]WAS 정상응답 체크 (200여부)\", function () {",
											"    pm.response.to.have.status(200);   ",
											"});",
											"",
											"// 응답속도 체크(0.5초미만) 여부",
											"pm.test(\"[공통]응답속도 체크(0.5초미만)\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(500);",
											"});",
											"",
											"// 1) 가입자(일반/검수) 구분에 따른 응답 확인",
											"pm.test(\"1) 가입자(일반/검수) 구분에 따른 응답 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"// 2) 어플타입에 따른 응답 구분",
											"pm.test(\"2) 어플타입에 따른 응답 구분\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"// 3) 카테고리 타입 확인",
											"pm.test(\"3) 카테고리 타입 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"let query = {};",
											"pm.request.url.query.all().forEach((param) => { query[param.key] = param.value});",
											"// 4) AB 테스트 확인",
											"pm.test(\"4) AB 테스트 확인\", function () {",
											"    let code = new RegExp(\"(A\\\\d+_\"+query[\"panel_id\"]+\"_\\\\d+|\"+query[\"panel_id\"]+\"_\\\\d+)\");",
											"    let jsonData = pm.response.json();",
											"    let recordset = jsonData.result.recordset;",
											"",
											"    pm.expect(recordset).to.not.empty;",
											"    for(let i in recordset){",
											"        pm.expect(recordset[i].code).to.match(code);",
											"    }",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Host",
										"value": "programming.fleta.com",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://{{mims}}/smartux/getMainPanelInterlockingInfo?sa_id=T61060140414&stb_mac=8c6d.5044.45dd&app_type=SMA&panel_id=ST02&category_gb=I20&testId=T000000237&variationId=Q000000500&app_name=&ui_version=&pre_page=&cur_page=&dev_info=&os_info=&nw_info=&dev_model=&carrier_type=",
									"protocol": "http",
									"host": [
										"{{mims}}"
									],
									"path": [
										"smartux",
										"getMainPanelInterlockingInfo"
									],
									"query": [
										{
											"key": "sa_id",
											"value": "T61060140414"
										},
										{
											"key": "stb_mac",
											"value": "8c6d.5044.45dd"
										},
										{
											"key": "app_type",
											"value": "SMA"
										},
										{
											"key": "panel_id",
											"value": "ST02"
										},
										{
											"key": "category_gb",
											"value": "I20"
										},
										{
											"key": "testId",
											"value": "T000000237"
										},
										{
											"key": "variationId",
											"value": "Q000000500"
										},
										{
											"key": "app_name",
											"value": ""
										},
										{
											"key": "ui_version",
											"value": ""
										},
										{
											"key": "pre_page",
											"value": ""
										},
										{
											"key": "cur_page",
											"value": ""
										},
										{
											"key": "dev_info",
											"value": ""
										},
										{
											"key": "os_info",
											"value": ""
										},
										{
											"key": "nw_info",
											"value": ""
										},
										{
											"key": "dev_model",
											"value": ""
										},
										{
											"key": "carrier_type",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "/smartux/getMainPanelInterlockingInfo_NTC58_검수 가입자_UX_I20_O,O = (AB대상) Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// 공통",
											"// WAS 정상응답 체크 (200여부)",
											"pm.test(\"[공통]WAS 정상응답 체크 (200여부)\", function () {",
											"    pm.response.to.have.status(200);   ",
											"});",
											"",
											"// 응답속도 체크(0.5초미만) 여부",
											"pm.test(\"[공통]응답속도 체크(0.5초미만)\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(500);",
											"});",
											"",
											"// 1) 가입자(일반/검수) 구분에 따른 응답 확인",
											"pm.test(\"1) 가입자(일반/검수) 구분에 따른 응답 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"// 2) 어플타입에 따른 응답 구분",
											"pm.test(\"2) 어플타입에 따른 응답 구분\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"// 3) 카테고리 타입 확인",
											"pm.test(\"3) 카테고리 타입 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"let query = {};",
											"pm.request.url.query.all().forEach((param) => { query[param.key] = param.value});",
											"// 4) AB 테스트 확인",
											"pm.test(\"4) AB 테스트 확인\", function () {",
											"    let code = new RegExp(\"(A\\\\d+_\"+query[\"panel_id\"]+\"_\\\\d+|\"+query[\"panel_id\"]+\"_\\\\d+)\");",
											"    let jsonData = pm.response.json();",
											"    let recordset = jsonData.result.recordset;",
											"",
											"    pm.expect(recordset).to.not.empty;",
											"    for(let i in recordset){",
											"        pm.expect(recordset[i].code).to.match(code);",
											"    }",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Host",
										"value": "programming.fleta.com",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://{{mims}}/smartux/getMainPanelInterlockingInfo?sa_id=T61060140414&stb_mac=v000.3529.4486&app_type=UX&panel_id=CP01&category_gb=I20&testId=T000000237&variationId=V000000500&app_name=&ui_version=&pre_page=&cur_page=&dev_info=&os_info=&nw_info=&dev_model=&carrier_type=",
									"protocol": "http",
									"host": [
										"{{mims}}"
									],
									"path": [
										"smartux",
										"getMainPanelInterlockingInfo"
									],
									"query": [
										{
											"key": "sa_id",
											"value": "T61060140414"
										},
										{
											"key": "stb_mac",
											"value": "v000.3529.4486"
										},
										{
											"key": "app_type",
											"value": "UX"
										},
										{
											"key": "panel_id",
											"value": "CP01"
										},
										{
											"key": "category_gb",
											"value": "I20"
										},
										{
											"key": "testId",
											"value": "T000000237"
										},
										{
											"key": "variationId",
											"value": "V000000500"
										},
										{
											"key": "app_name",
											"value": ""
										},
										{
											"key": "ui_version",
											"value": ""
										},
										{
											"key": "pre_page",
											"value": ""
										},
										{
											"key": "cur_page",
											"value": ""
										},
										{
											"key": "dev_info",
											"value": ""
										},
										{
											"key": "os_info",
											"value": ""
										},
										{
											"key": "nw_info",
											"value": ""
										},
										{
											"key": "dev_model",
											"value": ""
										},
										{
											"key": "carrier_type",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "/smartux/getMainPanelInterlockingInfo_NTC70_검수 가입자_UX_I30_O,O = (AB대상) Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// 공통",
											"// WAS 정상응답 체크 (200여부)",
											"pm.test(\"[공통]WAS 정상응답 체크 (200여부)\", function () {",
											"    pm.response.to.have.status(200);   ",
											"});",
											"",
											"// 응답속도 체크(0.5초미만) 여부",
											"pm.test(\"[공통]응답속도 체크(0.5초미만)\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(500);",
											"});",
											"",
											"// 1) 가입자(일반/검수) 구분에 따른 응답 확인",
											"pm.test(\"1) 가입자(일반/검수) 구분에 따른 응답 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"// 2) 어플타입에 따른 응답 구분",
											"pm.test(\"2) 어플타입에 따른 응답 구분\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"// 3) 카테고리 타입 확인",
											"pm.test(\"3) 카테고리 타입 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"let query = {};",
											"pm.request.url.query.all().forEach((param) => { query[param.key] = param.value});",
											"// 4) AB 테스트 확인",
											"pm.test(\"4) AB 테스트 확인\", function () {",
											"    let code = new RegExp(\"(A\\\\d+_\"+query[\"panel_id\"]+\"_\\\\d+|\"+query[\"panel_id\"]+\"_\\\\d+)\");",
											"    let jsonData = pm.response.json();",
											"    let recordset = jsonData.result.recordset;",
											"",
											"    pm.expect(recordset).to.not.empty;",
											"    for(let i in recordset){",
											"        pm.expect(recordset[i].code).to.match(code);",
											"    }",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Host",
										"value": "programming.fleta.com",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://{{mims}}/smartux/getMainPanelInterlockingInfo?sa_id=T61060140414&stb_mac=v000.3529.4486&app_type=UX&panel_id=CP01&category_gb=I30&testId=T000000237&variationId=V000000500&app_name=&ui_version=&pre_page=&cur_page=&dev_info=&os_info=&nw_info=&dev_model=&carrier_type=",
									"protocol": "http",
									"host": [
										"{{mims}}"
									],
									"path": [
										"smartux",
										"getMainPanelInterlockingInfo"
									],
									"query": [
										{
											"key": "sa_id",
											"value": "T61060140414"
										},
										{
											"key": "stb_mac",
											"value": "v000.3529.4486"
										},
										{
											"key": "app_type",
											"value": "UX"
										},
										{
											"key": "panel_id",
											"value": "CP01"
										},
										{
											"key": "category_gb",
											"value": "I30"
										},
										{
											"key": "testId",
											"value": "T000000237"
										},
										{
											"key": "variationId",
											"value": "V000000500"
										},
										{
											"key": "app_name",
											"value": ""
										},
										{
											"key": "ui_version",
											"value": ""
										},
										{
											"key": "pre_page",
											"value": ""
										},
										{
											"key": "cur_page",
											"value": ""
										},
										{
											"key": "dev_info",
											"value": ""
										},
										{
											"key": "os_info",
											"value": ""
										},
										{
											"key": "nw_info",
											"value": ""
										},
										{
											"key": "dev_model",
											"value": ""
										},
										{
											"key": "carrier_type",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "/smartux/getMainPanelInterlockingInfo_NTC87_검수 가입자_SMA_I30_null,X Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// 공통",
											"// WAS 정상응답 체크 (200여부)",
											"pm.test(\"[공통]WAS 정상응답 체크 (200여부)\", function () {",
											"    pm.response.to.have.status(200);   ",
											"});",
											"",
											"// 응답속도 체크(0.5초미만) 여부",
											"pm.test(\"[공통]응답속도 체크(0.5초미만)\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(500);",
											"});",
											"",
											"// 1) 가입자(일반/검수) 구분에 따른 응답 확인",
											"pm.test(\"1) 가입자(일반/검수) 구분에 따른 응답 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"// 2) 어플타입에 따른 응답 구분",
											"pm.test(\"2) 어플타입에 따른 응답 구분\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"// 3) 카테고리 타입 확인",
											"pm.test(\"3) 카테고리 타입 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"let query = {};",
											"pm.request.url.query.all().forEach((param) => { query[param.key] = param.value});",
											"// 4) AB 테스트 확인",
											"pm.test(\"4) AB 테스트 확인\", function () {",
											"    let code = new RegExp(\"(A\\\\d+_\"+query[\"panel_id\"]+\"_\\\\d+|\"+query[\"panel_id\"]+\"_\\\\d+)\");",
											"    let jsonData = pm.response.json();",
											"    let recordset = jsonData.result.recordset;",
											"",
											"    pm.expect(recordset).to.not.empty;",
											"    for(let i in recordset){",
											"        pm.expect(recordset[i].code).to.match(code);",
											"    }",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Host",
										"value": "programming.fleta.com",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://{{mims}}/smartux/getMainPanelInterlockingInfo?sa_id=T61060140414&stb_mac=v000.3529.4486&app_type=SMA&panel_id=ST01&category_gb=I30&testId=&variationId=QQQQ&app_name=&ui_version=&pre_page=&cur_page=&dev_info=&os_info=&nw_info=&dev_model=&carrier_type=",
									"protocol": "http",
									"host": [
										"{{mims}}"
									],
									"path": [
										"smartux",
										"getMainPanelInterlockingInfo"
									],
									"query": [
										{
											"key": "sa_id",
											"value": "T61060140414"
										},
										{
											"key": "stb_mac",
											"value": "v000.3529.4486"
										},
										{
											"key": "app_type",
											"value": "SMA"
										},
										{
											"key": "panel_id",
											"value": "ST01"
										},
										{
											"key": "category_gb",
											"value": "I30"
										},
										{
											"key": "testId",
											"value": ""
										},
										{
											"key": "variationId",
											"value": "QQQQ"
										},
										{
											"key": "app_name",
											"value": ""
										},
										{
											"key": "ui_version",
											"value": ""
										},
										{
											"key": "pre_page",
											"value": ""
										},
										{
											"key": "cur_page",
											"value": ""
										},
										{
											"key": "dev_info",
											"value": ""
										},
										{
											"key": "os_info",
											"value": ""
										},
										{
											"key": "nw_info",
											"value": ""
										},
										{
											"key": "dev_model",
											"value": ""
										},
										{
											"key": "carrier_type",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "/smartux/getMainPanelInterlockingInfo_NTC32_일반 가입자_SMA_I30_X,null Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// 공통",
											"// WAS 정상응답 체크 (200여부)",
											"pm.test(\"[공통]WAS 정상응답 체크 (200여부)\", function () {",
											"    pm.response.to.have.status(200);   ",
											"});",
											"",
											"// 응답속도 체크(0.5초미만) 여부",
											"pm.test(\"[공통]응답속도 체크(0.5초미만)\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(500);",
											"});",
											"",
											"// 1) 가입자(일반/검수) 구분에 따른 응답 확인",
											"pm.test(\"1) 가입자(일반/검수) 구분에 따른 응답 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"// 2) 어플타입에 따른 응답 구분",
											"pm.test(\"2) 어플타입에 따른 응답 구분\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"// 3) 카테고리 타입 확인",
											"pm.test(\"3) 카테고리 타입 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"let query = {};",
											"pm.request.url.query.all().forEach((param) => { query[param.key] = param.value});",
											"// 4) AB 테스트 확인",
											"pm.test(\"4) AB 테스트 확인\", function () {",
											"    let code = new RegExp(\"(A\\\\d+_\"+query[\"panel_id\"]+\"_\\\\d+|\"+query[\"panel_id\"]+\"_\\\\d+)\");",
											"    let jsonData = pm.response.json();",
											"    let recordset = jsonData.result.recordset;",
											"",
											"    pm.expect(recordset).to.not.empty;",
											"    for(let i in recordset){",
											"        pm.expect(recordset[i].code).to.match(code);",
											"    }",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Host",
										"value": "programming.fleta.com",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://{{mims}}/smartux/getMainPanelInterlockingInfo?sa_id=T61060140414&stb_mac=8c6d.5044.45dd&app_type=SMA&panel_id=ST01&category_gb=I30&testId=QQQQ&variationId=&app_name=&ui_version=&pre_page=&cur_page=&dev_info=&os_info=&nw_info=&dev_model=&carrier_type=",
									"protocol": "http",
									"host": [
										"{{mims}}"
									],
									"path": [
										"smartux",
										"getMainPanelInterlockingInfo"
									],
									"query": [
										{
											"key": "sa_id",
											"value": "T61060140414"
										},
										{
											"key": "stb_mac",
											"value": "8c6d.5044.45dd"
										},
										{
											"key": "app_type",
											"value": "SMA"
										},
										{
											"key": "panel_id",
											"value": "ST01"
										},
										{
											"key": "category_gb",
											"value": "I30"
										},
										{
											"key": "testId",
											"value": "QQQQ"
										},
										{
											"key": "variationId",
											"value": ""
										},
										{
											"key": "app_name",
											"value": ""
										},
										{
											"key": "ui_version",
											"value": ""
										},
										{
											"key": "pre_page",
											"value": ""
										},
										{
											"key": "cur_page",
											"value": ""
										},
										{
											"key": "dev_info",
											"value": ""
										},
										{
											"key": "os_info",
											"value": ""
										},
										{
											"key": "nw_info",
											"value": ""
										},
										{
											"key": "dev_model",
											"value": ""
										},
										{
											"key": "carrier_type",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "/smartux/getMainPanelInterlockingInfo_NTC81_검수 가입자_SMA_null_null,X Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// 공통",
											"// WAS 정상응답 체크 (200여부)",
											"pm.test(\"[공통]WAS 정상응답 체크 (200여부)\", function () {",
											"    pm.response.to.have.status(200);   ",
											"});",
											"",
											"// 응답속도 체크(0.5초미만) 여부",
											"pm.test(\"[공통]응답속도 체크(0.5초미만)\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(500);",
											"});",
											"",
											"// 1) 가입자(일반/검수) 구분에 따른 응답 확인",
											"pm.test(\"1) 가입자(일반/검수) 구분에 따른 응답 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"// 2) 어플타입에 따른 응답 구분",
											"pm.test(\"2) 어플타입에 따른 응답 구분\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"// 3) 카테고리 타입 확인",
											"pm.test(\"3) 카테고리 타입 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"let query = {};",
											"pm.request.url.query.all().forEach((param) => { query[param.key] = param.value});",
											"// 4) AB 테스트 확인",
											"pm.test(\"4) AB 테스트 확인\", function () {",
											"    let code = new RegExp(\"(A\\\\d+_\"+query[\"panel_id\"]+\"_\\\\d+|\"+query[\"panel_id\"]+\"_\\\\d+)\");",
											"    let jsonData = pm.response.json();",
											"    let recordset = jsonData.result.recordset;",
											"",
											"    pm.expect(recordset).to.not.empty;",
											"    for(let i in recordset){",
											"        pm.expect(recordset[i].code).to.match(code);",
											"    }",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Host",
										"value": "programming.fleta.com",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://{{mims}}/smartux/getMainPanelInterlockingInfo?sa_id=T61060140414&stb_mac=v000.3529.4486&app_type=SMA&panel_id=ST02&category_gb=&testId=&variationId=QQQQ&app_name=&ui_version=&pre_page=&cur_page=&dev_info=&os_info=&nw_info=&dev_model=&carrier_type=",
									"protocol": "http",
									"host": [
										"{{mims}}"
									],
									"path": [
										"smartux",
										"getMainPanelInterlockingInfo"
									],
									"query": [
										{
											"key": "sa_id",
											"value": "T61060140414"
										},
										{
											"key": "stb_mac",
											"value": "v000.3529.4486"
										},
										{
											"key": "app_type",
											"value": "SMA"
										},
										{
											"key": "panel_id",
											"value": "ST02"
										},
										{
											"key": "category_gb",
											"value": ""
										},
										{
											"key": "testId",
											"value": ""
										},
										{
											"key": "variationId",
											"value": "QQQQ"
										},
										{
											"key": "app_name",
											"value": ""
										},
										{
											"key": "ui_version",
											"value": ""
										},
										{
											"key": "pre_page",
											"value": ""
										},
										{
											"key": "cur_page",
											"value": ""
										},
										{
											"key": "dev_info",
											"value": ""
										},
										{
											"key": "os_info",
											"value": ""
										},
										{
											"key": "nw_info",
											"value": ""
										},
										{
											"key": "dev_model",
											"value": ""
										},
										{
											"key": "carrier_type",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "/smartux/getMainPanelInterlockingInfo_ATC1_application/xml 확인 Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// 공통",
											"// WAS 정상응답 체크 (200여부)",
											"pm.test(\"[공통]WAS 정상응답 체크 (200여부)\", function () {",
											"    pm.response.to.have.status(200);   ",
											"});",
											"",
											"// 응답속도 체크(0.5초미만) 여부",
											"pm.test(\"[공통]응답속도 체크(0.5초미만)\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(500);",
											"});",
											"",
											"// 1) application/xml 확인\r",
											"pm.test(\"1) application/xml 확인\", function () {\r",
											"    let jsonObject = xml2Json(responseBody);\r",
											"    let flag = jsonObject.result.flag;\r",
											"    pm.expect(flag).to.eql(\"0000\");\r",
											"});\r"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/xml",
										"type": "text"
									},
									{
										"key": "Host",
										"value": "programming.fleta.com",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://{{mims}}/smartux/getMainPanelInterlockingInfo?sa_id=T61060140414&stb_mac=8c6d.5044.45dd&app_type=UX&panel_id=ST02&category_gb=I20&testId=&variationId=&app_name=&ui_version=&pre_page=&cur_page=&dev_info=&os_info=&nw_info=&dev_model=&carrier_type=",
									"protocol": "http",
									"host": [
										"{{mims}}"
									],
									"path": [
										"smartux",
										"getMainPanelInterlockingInfo"
									],
									"query": [
										{
											"key": "sa_id",
											"value": "T61060140414"
										},
										{
											"key": "stb_mac",
											"value": "8c6d.5044.45dd"
										},
										{
											"key": "app_type",
											"value": "UX"
										},
										{
											"key": "panel_id",
											"value": "ST02"
										},
										{
											"key": "category_gb",
											"value": "I20"
										},
										{
											"key": "testId",
											"value": ""
										},
										{
											"key": "variationId",
											"value": ""
										},
										{
											"key": "app_name",
											"value": ""
										},
										{
											"key": "ui_version",
											"value": ""
										},
										{
											"key": "pre_page",
											"value": ""
										},
										{
											"key": "cur_page",
											"value": ""
										},
										{
											"key": "dev_info",
											"value": ""
										},
										{
											"key": "os_info",
											"value": ""
										},
										{
											"key": "nw_info",
											"value": ""
										},
										{
											"key": "dev_model",
											"value": ""
										},
										{
											"key": "carrier_type",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "/smartux/getMainPanelInterlockingInfo_NTC2_일반 가입자_UX_I20_X,null Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// 공통",
											"// WAS 정상응답 체크 (200여부)",
											"pm.test(\"[공통]WAS 정상응답 체크 (200여부)\", function () {",
											"    pm.response.to.have.status(200);   ",
											"});",
											"",
											"// 응답속도 체크(0.5초미만) 여부",
											"pm.test(\"[공통]응답속도 체크(0.5초미만)\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(500);",
											"});",
											"",
											"// 1) 가입자(일반/검수) 구분에 따른 응답 확인",
											"pm.test(\"1) 가입자(일반/검수) 구분에 따른 응답 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"// 2) 어플타입에 따른 응답 구분",
											"pm.test(\"2) 어플타입에 따른 응답 구분\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"// 3) 카테고리 타입 확인",
											"pm.test(\"3) 카테고리 타입 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"let query = {};",
											"pm.request.url.query.all().forEach((param) => { query[param.key] = param.value});",
											"// 4) AB 테스트 확인",
											"pm.test(\"4) AB 테스트 확인\", function () {",
											"    let code = new RegExp(\"(A\\\\d+_\"+query[\"panel_id\"]+\"_\\\\d+|\"+query[\"panel_id\"]+\"_\\\\d+)\");",
											"    let jsonData = pm.response.json();",
											"    let recordset = jsonData.result.recordset;",
											"",
											"    pm.expect(recordset).to.not.empty;",
											"    for(let i in recordset){",
											"        pm.expect(recordset[i].code).to.match(code);",
											"    }",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Host",
										"value": "programming.fleta.com",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://{{mims}}/smartux/getMainPanelInterlockingInfo?sa_id=T61060140414&stb_mac=8c6d.5044.45dd&app_type=UX&panel_id=ST02&category_gb=I20&testId=QQQQ&variationId=&app_name=&ui_version=&pre_page=&cur_page=&dev_info=&os_info=&nw_info=&dev_model=&carrier_type=",
									"protocol": "http",
									"host": [
										"{{mims}}"
									],
									"path": [
										"smartux",
										"getMainPanelInterlockingInfo"
									],
									"query": [
										{
											"key": "sa_id",
											"value": "T61060140414"
										},
										{
											"key": "stb_mac",
											"value": "8c6d.5044.45dd"
										},
										{
											"key": "app_type",
											"value": "UX"
										},
										{
											"key": "panel_id",
											"value": "ST02"
										},
										{
											"key": "category_gb",
											"value": "I20"
										},
										{
											"key": "testId",
											"value": "QQQQ"
										},
										{
											"key": "variationId",
											"value": ""
										},
										{
											"key": "app_name",
											"value": ""
										},
										{
											"key": "ui_version",
											"value": ""
										},
										{
											"key": "pre_page",
											"value": ""
										},
										{
											"key": "cur_page",
											"value": ""
										},
										{
											"key": "dev_info",
											"value": ""
										},
										{
											"key": "os_info",
											"value": ""
										},
										{
											"key": "nw_info",
											"value": ""
										},
										{
											"key": "dev_model",
											"value": ""
										},
										{
											"key": "carrier_type",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "/smartux/getMainPanelInterlockingInfo_NTC37_일반 가입자_SUSA_I20_null,null Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// 공통",
											"// WAS 정상응답 체크 (200여부)",
											"pm.test(\"[공통]WAS 정상응답 체크 (200여부)\", function () {",
											"    pm.response.to.have.status(200);   ",
											"});",
											"",
											"// 응답속도 체크(0.5초미만) 여부",
											"pm.test(\"[공통]응답속도 체크(0.5초미만)\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(500);",
											"});",
											"",
											"// 1) 가입자(일반/검수) 구분에 따른 응답 확인",
											"pm.test(\"1) 가입자(일반/검수) 구분에 따른 응답 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"// 2) 어플타입에 따른 응답 구분",
											"pm.test(\"2) 어플타입에 따른 응답 구분\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"// 3) 카테고리 타입 확인",
											"pm.test(\"3) 카테고리 타입 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"let query = {};",
											"pm.request.url.query.all().forEach((param) => { query[param.key] = param.value});",
											"// 4) AB 테스트 확인",
											"pm.test(\"4) AB 테스트 확인\", function () {",
											"    let code = new RegExp(\"(A\\\\d+_\"+query[\"panel_id\"]+\"_\\\\d+|\"+query[\"panel_id\"]+\"_\\\\d+)\");",
											"    let jsonData = pm.response.json();",
											"    let recordset = jsonData.result.recordset;",
											"",
											"    pm.expect(recordset).to.not.empty;",
											"    for(let i in recordset){",
											"        pm.expect(recordset[i].code).to.match(code);",
											"    }",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Host",
										"value": "programming.fleta.com",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://{{mims}}/smartux/getMainPanelInterlockingInfo?sa_id=T61060140414&stb_mac=8c6d.5044.45dd&app_type=SUSA&panel_id=ST02&category_gb=I20&testId=&variationId=&app_name=&ui_version=&pre_page=&cur_page=&dev_info=&os_info=&nw_info=&dev_model=&carrier_type=",
									"protocol": "http",
									"host": [
										"{{mims}}"
									],
									"path": [
										"smartux",
										"getMainPanelInterlockingInfo"
									],
									"query": [
										{
											"key": "sa_id",
											"value": "T61060140414"
										},
										{
											"key": "stb_mac",
											"value": "8c6d.5044.45dd"
										},
										{
											"key": "app_type",
											"value": "SUSA"
										},
										{
											"key": "panel_id",
											"value": "ST02"
										},
										{
											"key": "category_gb",
											"value": "I20"
										},
										{
											"key": "testId",
											"value": ""
										},
										{
											"key": "variationId",
											"value": ""
										},
										{
											"key": "app_name",
											"value": ""
										},
										{
											"key": "ui_version",
											"value": ""
										},
										{
											"key": "pre_page",
											"value": ""
										},
										{
											"key": "cur_page",
											"value": ""
										},
										{
											"key": "dev_info",
											"value": ""
										},
										{
											"key": "os_info",
											"value": ""
										},
										{
											"key": "nw_info",
											"value": ""
										},
										{
											"key": "dev_model",
											"value": ""
										},
										{
											"key": "carrier_type",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "/smartux/getMainPanelInterlockingInfo_NTC103_검수 가입자_SUSA_I30_null,null Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// 공통",
											"// WAS 정상응답 체크 (200여부)",
											"pm.test(\"[공통]WAS 정상응답 체크 (200여부)\", function () {",
											"    pm.response.to.have.status(200);   ",
											"});",
											"",
											"// 응답속도 체크(0.5초미만) 여부",
											"pm.test(\"[공통]응답속도 체크(0.5초미만)\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(500);",
											"});",
											"",
											"// 1) 가입자(일반/검수) 구분에 따른 응답 확인",
											"pm.test(\"1) 가입자(일반/검수) 구분에 따른 응답 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"// 2) 어플타입에 따른 응답 구분",
											"pm.test(\"2) 어플타입에 따른 응답 구분\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"// 3) 카테고리 타입 확인",
											"pm.test(\"3) 카테고리 타입 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"let query = {};",
											"pm.request.url.query.all().forEach((param) => { query[param.key] = param.value});",
											"// 4) AB 테스트 확인",
											"pm.test(\"4) AB 테스트 확인\", function () {",
											"    let code = new RegExp(\"(A\\\\d+_\"+query[\"panel_id\"]+\"_\\\\d+|\"+query[\"panel_id\"]+\"_\\\\d+)\");",
											"    let jsonData = pm.response.json();",
											"    let recordset = jsonData.result.recordset;",
											"",
											"    pm.expect(recordset).to.not.empty;",
											"    for(let i in recordset){",
											"        pm.expect(recordset[i].code).to.match(code);",
											"    }",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Host",
										"value": "programming.fleta.com",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://{{mims}}/smartux/getMainPanelInterlockingInfo?sa_id=T61060140414&stb_mac=v000.3529.4486&app_type=SUSA&panel_id=ST01&category_gb=I30&testId=&variationId=&app_name=&ui_version=&pre_page=&cur_page=&dev_info=&os_info=&nw_info=&dev_model=&carrier_type=",
									"protocol": "http",
									"host": [
										"{{mims}}"
									],
									"path": [
										"smartux",
										"getMainPanelInterlockingInfo"
									],
									"query": [
										{
											"key": "sa_id",
											"value": "T61060140414"
										},
										{
											"key": "stb_mac",
											"value": "v000.3529.4486"
										},
										{
											"key": "app_type",
											"value": "SUSA"
										},
										{
											"key": "panel_id",
											"value": "ST01"
										},
										{
											"key": "category_gb",
											"value": "I30"
										},
										{
											"key": "testId",
											"value": ""
										},
										{
											"key": "variationId",
											"value": ""
										},
										{
											"key": "app_name",
											"value": ""
										},
										{
											"key": "ui_version",
											"value": ""
										},
										{
											"key": "pre_page",
											"value": ""
										},
										{
											"key": "cur_page",
											"value": ""
										},
										{
											"key": "dev_info",
											"value": ""
										},
										{
											"key": "os_info",
											"value": ""
										},
										{
											"key": "nw_info",
											"value": ""
										},
										{
											"key": "dev_model",
											"value": ""
										},
										{
											"key": "carrier_type",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "/smartux/getMainPanelInterlockingInfo_NTC31_일반 가입자_SMA_I30_null,null Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// 공통",
											"// WAS 정상응답 체크 (200여부)",
											"pm.test(\"[공통]WAS 정상응답 체크 (200여부)\", function () {",
											"    pm.response.to.have.status(200);   ",
											"});",
											"",
											"// 응답속도 체크(0.5초미만) 여부",
											"pm.test(\"[공통]응답속도 체크(0.5초미만)\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(500);",
											"});",
											"",
											"// 1) 가입자(일반/검수) 구분에 따른 응답 확인",
											"pm.test(\"1) 가입자(일반/검수) 구분에 따른 응답 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"// 2) 어플타입에 따른 응답 구분",
											"pm.test(\"2) 어플타입에 따른 응답 구분\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"// 3) 카테고리 타입 확인",
											"pm.test(\"3) 카테고리 타입 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"let query = {};",
											"pm.request.url.query.all().forEach((param) => { query[param.key] = param.value});",
											"// 4) AB 테스트 확인",
											"pm.test(\"4) AB 테스트 확인\", function () {",
											"    let code = new RegExp(\"(A\\\\d+_\"+query[\"panel_id\"]+\"_\\\\d+|\"+query[\"panel_id\"]+\"_\\\\d+)\");",
											"    let jsonData = pm.response.json();",
											"    let recordset = jsonData.result.recordset;",
											"",
											"    pm.expect(recordset).to.not.empty;",
											"    for(let i in recordset){",
											"        pm.expect(recordset[i].code).to.match(code);",
											"    }",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Host",
										"value": "programming.fleta.com",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://{{mims}}/smartux/getMainPanelInterlockingInfo?sa_id=T61060140414&stb_mac=8c6d.5044.45dd&app_type=SMA&panel_id=ST01&category_gb=I30&testId=&variationId=&app_name=&ui_version=&pre_page=&cur_page=&dev_info=&os_info=&nw_info=&dev_model=&carrier_type=",
									"protocol": "http",
									"host": [
										"{{mims}}"
									],
									"path": [
										"smartux",
										"getMainPanelInterlockingInfo"
									],
									"query": [
										{
											"key": "sa_id",
											"value": "T61060140414"
										},
										{
											"key": "stb_mac",
											"value": "8c6d.5044.45dd"
										},
										{
											"key": "app_type",
											"value": "SMA"
										},
										{
											"key": "panel_id",
											"value": "ST01"
										},
										{
											"key": "category_gb",
											"value": "I30"
										},
										{
											"key": "testId",
											"value": ""
										},
										{
											"key": "variationId",
											"value": ""
										},
										{
											"key": "app_name",
											"value": ""
										},
										{
											"key": "ui_version",
											"value": ""
										},
										{
											"key": "pre_page",
											"value": ""
										},
										{
											"key": "cur_page",
											"value": ""
										},
										{
											"key": "dev_info",
											"value": ""
										},
										{
											"key": "os_info",
											"value": ""
										},
										{
											"key": "nw_info",
											"value": ""
										},
										{
											"key": "dev_model",
											"value": ""
										},
										{
											"key": "carrier_type",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "/smartux/getMainPanelInterlockingInfo_NTC39_일반 가입자_SUSA_I20_null,X Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// 공통",
											"// WAS 정상응답 체크 (200여부)",
											"pm.test(\"[공통]WAS 정상응답 체크 (200여부)\", function () {",
											"    pm.response.to.have.status(200);   ",
											"});",
											"",
											"// 응답속도 체크(0.5초미만) 여부",
											"pm.test(\"[공통]응답속도 체크(0.5초미만)\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(500);",
											"});",
											"",
											"// 1) 가입자(일반/검수) 구분에 따른 응답 확인",
											"pm.test(\"1) 가입자(일반/검수) 구분에 따른 응답 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"// 2) 어플타입에 따른 응답 구분",
											"pm.test(\"2) 어플타입에 따른 응답 구분\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"// 3) 카테고리 타입 확인",
											"pm.test(\"3) 카테고리 타입 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"let query = {};",
											"pm.request.url.query.all().forEach((param) => { query[param.key] = param.value});",
											"// 4) AB 테스트 확인",
											"pm.test(\"4) AB 테스트 확인\", function () {",
											"    let code = new RegExp(\"(A\\\\d+_\"+query[\"panel_id\"]+\"_\\\\d+|\"+query[\"panel_id\"]+\"_\\\\d+)\");",
											"    let jsonData = pm.response.json();",
											"    let recordset = jsonData.result.recordset;",
											"",
											"    pm.expect(recordset).to.not.empty;",
											"    for(let i in recordset){",
											"        pm.expect(recordset[i].code).to.match(code);",
											"    }",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Host",
										"value": "programming.fleta.com",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://{{mims}}/smartux/getMainPanelInterlockingInfo?sa_id=T61060140414&stb_mac=8c6d.5044.45dd&app_type=SUSA&panel_id=ST02&category_gb=I20&testId=&variationId=QQQQ&app_name=&ui_version=&pre_page=&cur_page=&dev_info=&os_info=&nw_info=&dev_model=&carrier_type=",
									"protocol": "http",
									"host": [
										"{{mims}}"
									],
									"path": [
										"smartux",
										"getMainPanelInterlockingInfo"
									],
									"query": [
										{
											"key": "sa_id",
											"value": "T61060140414"
										},
										{
											"key": "stb_mac",
											"value": "8c6d.5044.45dd"
										},
										{
											"key": "app_type",
											"value": "SUSA"
										},
										{
											"key": "panel_id",
											"value": "ST02"
										},
										{
											"key": "category_gb",
											"value": "I20"
										},
										{
											"key": "testId",
											"value": ""
										},
										{
											"key": "variationId",
											"value": "QQQQ"
										},
										{
											"key": "app_name",
											"value": ""
										},
										{
											"key": "ui_version",
											"value": ""
										},
										{
											"key": "pre_page",
											"value": ""
										},
										{
											"key": "cur_page",
											"value": ""
										},
										{
											"key": "dev_info",
											"value": ""
										},
										{
											"key": "os_info",
											"value": ""
										},
										{
											"key": "nw_info",
											"value": ""
										},
										{
											"key": "dev_model",
											"value": ""
										},
										{
											"key": "carrier_type",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "/smartux/getMainPanelInterlockingInfo_NTC38_일반 가입자_SUSA_I20_X,null Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// 공통",
											"// WAS 정상응답 체크 (200여부)",
											"pm.test(\"[공통]WAS 정상응답 체크 (200여부)\", function () {",
											"    pm.response.to.have.status(200);   ",
											"});",
											"",
											"// 응답속도 체크(0.5초미만) 여부",
											"pm.test(\"[공통]응답속도 체크(0.5초미만)\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(500);",
											"});",
											"",
											"// 1) 가입자(일반/검수) 구분에 따른 응답 확인",
											"pm.test(\"1) 가입자(일반/검수) 구분에 따른 응답 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"// 2) 어플타입에 따른 응답 구분",
											"pm.test(\"2) 어플타입에 따른 응답 구분\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"// 3) 카테고리 타입 확인",
											"pm.test(\"3) 카테고리 타입 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"let query = {};",
											"pm.request.url.query.all().forEach((param) => { query[param.key] = param.value});",
											"// 4) AB 테스트 확인",
											"pm.test(\"4) AB 테스트 확인\", function () {",
											"    let code = new RegExp(\"(A\\\\d+_\"+query[\"panel_id\"]+\"_\\\\d+|\"+query[\"panel_id\"]+\"_\\\\d+)\");",
											"    let jsonData = pm.response.json();",
											"    let recordset = jsonData.result.recordset;",
											"",
											"    pm.expect(recordset).to.not.empty;",
											"    for(let i in recordset){",
											"        pm.expect(recordset[i].code).to.match(code);",
											"    }",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Host",
										"value": "programming.fleta.com",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://{{mims}}/smartux/getMainPanelInterlockingInfo?sa_id=T61060140414&stb_mac=8c6d.5044.45dd&app_type=SUSA&panel_id=ST02&category_gb=I20&testId=QQQQ&variationId=&app_name=&ui_version=&pre_page=&cur_page=&dev_info=&os_info=&nw_info=&dev_model=&carrier_type=",
									"protocol": "http",
									"host": [
										"{{mims}}"
									],
									"path": [
										"smartux",
										"getMainPanelInterlockingInfo"
									],
									"query": [
										{
											"key": "sa_id",
											"value": "T61060140414"
										},
										{
											"key": "stb_mac",
											"value": "8c6d.5044.45dd"
										},
										{
											"key": "app_type",
											"value": "SUSA"
										},
										{
											"key": "panel_id",
											"value": "ST02"
										},
										{
											"key": "category_gb",
											"value": "I20"
										},
										{
											"key": "testId",
											"value": "QQQQ"
										},
										{
											"key": "variationId",
											"value": ""
										},
										{
											"key": "app_name",
											"value": ""
										},
										{
											"key": "ui_version",
											"value": ""
										},
										{
											"key": "pre_page",
											"value": ""
										},
										{
											"key": "cur_page",
											"value": ""
										},
										{
											"key": "dev_info",
											"value": ""
										},
										{
											"key": "os_info",
											"value": ""
										},
										{
											"key": "nw_info",
											"value": ""
										},
										{
											"key": "dev_model",
											"value": ""
										},
										{
											"key": "carrier_type",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "/smartux/getMainPanelInterlockingInfo_NTC61_검수 가입자_UX_null_null,null Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// 공통",
											"// WAS 정상응답 체크 (200여부)",
											"pm.test(\"[공통]WAS 정상응답 체크 (200여부)\", function () {",
											"    pm.response.to.have.status(200);   ",
											"});",
											"",
											"// 응답속도 체크(0.5초미만) 여부",
											"pm.test(\"[공통]응답속도 체크(0.5초미만)\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(500);",
											"});",
											"",
											"// 1) 가입자(일반/검수) 구분에 따른 응답 확인",
											"pm.test(\"1) 가입자(일반/검수) 구분에 따른 응답 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"// 2) 어플타입에 따른 응답 구분",
											"pm.test(\"2) 어플타입에 따른 응답 구분\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"// 3) 카테고리 타입 확인",
											"pm.test(\"3) 카테고리 타입 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"let query = {};",
											"pm.request.url.query.all().forEach((param) => { query[param.key] = param.value});",
											"// 4) AB 테스트 확인",
											"pm.test(\"4) AB 테스트 확인\", function () {",
											"    let code = new RegExp(\"(A\\\\d+_\"+query[\"panel_id\"]+\"_\\\\d+|\"+query[\"panel_id\"]+\"_\\\\d+)\");",
											"    let jsonData = pm.response.json();",
											"    let recordset = jsonData.result.recordset;",
											"",
											"    pm.expect(recordset).to.not.empty;",
											"    for(let i in recordset){",
											"        pm.expect(recordset[i].code).to.match(code);",
											"    }",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Host",
										"value": "programming.fleta.com",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://{{mims}}/smartux/getMainPanelInterlockingInfo?sa_id=T61060140414&stb_mac=v000.3529.4486&app_type=UX&panel_id=ST02&category_gb=&testId=&variationId=&app_name=&ui_version=&pre_page=&cur_page=&dev_info=&os_info=&nw_info=&dev_model=&carrier_type=",
									"protocol": "http",
									"host": [
										"{{mims}}"
									],
									"path": [
										"smartux",
										"getMainPanelInterlockingInfo"
									],
									"query": [
										{
											"key": "sa_id",
											"value": "T61060140414"
										},
										{
											"key": "stb_mac",
											"value": "v000.3529.4486"
										},
										{
											"key": "app_type",
											"value": "UX"
										},
										{
											"key": "panel_id",
											"value": "ST02"
										},
										{
											"key": "category_gb",
											"value": ""
										},
										{
											"key": "testId",
											"value": ""
										},
										{
											"key": "variationId",
											"value": ""
										},
										{
											"key": "app_name",
											"value": ""
										},
										{
											"key": "ui_version",
											"value": ""
										},
										{
											"key": "pre_page",
											"value": ""
										},
										{
											"key": "cur_page",
											"value": ""
										},
										{
											"key": "dev_info",
											"value": ""
										},
										{
											"key": "os_info",
											"value": ""
										},
										{
											"key": "nw_info",
											"value": ""
										},
										{
											"key": "dev_model",
											"value": ""
										},
										{
											"key": "carrier_type",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "/smartux/getMainPanelInterlockingInfo_NTC91_검수 가입자_SUSA_I20_null,null Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// 공통",
											"// WAS 정상응답 체크 (200여부)",
											"pm.test(\"[공통]WAS 정상응답 체크 (200여부)\", function () {",
											"    pm.response.to.have.status(200);   ",
											"});",
											"",
											"// 응답속도 체크(0.5초미만) 여부",
											"pm.test(\"[공통]응답속도 체크(0.5초미만)\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(500);",
											"});",
											"",
											"// 1) 가입자(일반/검수) 구분에 따른 응답 확인",
											"pm.test(\"1) 가입자(일반/검수) 구분에 따른 응답 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"// 2) 어플타입에 따른 응답 구분",
											"pm.test(\"2) 어플타입에 따른 응답 구분\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"// 3) 카테고리 타입 확인",
											"pm.test(\"3) 카테고리 타입 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"let query = {};",
											"pm.request.url.query.all().forEach((param) => { query[param.key] = param.value});",
											"// 4) AB 테스트 확인",
											"pm.test(\"4) AB 테스트 확인\", function () {",
											"    let code = new RegExp(\"(A\\\\d+_\"+query[\"panel_id\"]+\"_\\\\d+|\"+query[\"panel_id\"]+\"_\\\\d+)\");",
											"    let jsonData = pm.response.json();",
											"    let recordset = jsonData.result.recordset;",
											"",
											"    pm.expect(recordset).to.not.empty;",
											"    for(let i in recordset){",
											"        pm.expect(recordset[i].code).to.match(code);",
											"    }",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Host",
										"value": "programming.fleta.com",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://{{mims}}/smartux/getMainPanelInterlockingInfo?sa_id=T61060140414&stb_mac=v000.3529.4486&app_type=SUSA&panel_id=ST02&category_gb=I20&testId=&variationId=&app_name=&ui_version=&pre_page=&cur_page=&dev_info=&os_info=&nw_info=&dev_model=&carrier_type=",
									"protocol": "http",
									"host": [
										"{{mims}}"
									],
									"path": [
										"smartux",
										"getMainPanelInterlockingInfo"
									],
									"query": [
										{
											"key": "sa_id",
											"value": "T61060140414"
										},
										{
											"key": "stb_mac",
											"value": "v000.3529.4486"
										},
										{
											"key": "app_type",
											"value": "SUSA"
										},
										{
											"key": "panel_id",
											"value": "ST02"
										},
										{
											"key": "category_gb",
											"value": "I20"
										},
										{
											"key": "testId",
											"value": ""
										},
										{
											"key": "variationId",
											"value": ""
										},
										{
											"key": "app_name",
											"value": ""
										},
										{
											"key": "ui_version",
											"value": ""
										},
										{
											"key": "pre_page",
											"value": ""
										},
										{
											"key": "cur_page",
											"value": ""
										},
										{
											"key": "dev_info",
											"value": ""
										},
										{
											"key": "os_info",
											"value": ""
										},
										{
											"key": "nw_info",
											"value": ""
										},
										{
											"key": "dev_model",
											"value": ""
										},
										{
											"key": "carrier_type",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "/smartux/getMainPanelInterlockingInfo_NTC9_일반 가입자_UX_null_null,X Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// 공통",
											"// WAS 정상응답 체크 (200여부)",
											"pm.test(\"[공통]WAS 정상응답 체크 (200여부)\", function () {",
											"    pm.response.to.have.status(200);   ",
											"});",
											"",
											"// 응답속도 체크(0.5초미만) 여부",
											"pm.test(\"[공통]응답속도 체크(0.5초미만)\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(500);",
											"});",
											"",
											"// 1) 가입자(일반/검수) 구분에 따른 응답 확인",
											"pm.test(\"1) 가입자(일반/검수) 구분에 따른 응답 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"// 2) 어플타입에 따른 응답 구분",
											"pm.test(\"2) 어플타입에 따른 응답 구분\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"// 3) 카테고리 타입 확인",
											"pm.test(\"3) 카테고리 타입 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"let query = {};",
											"pm.request.url.query.all().forEach((param) => { query[param.key] = param.value});",
											"// 4) AB 테스트 확인",
											"pm.test(\"4) AB 테스트 확인\", function () {",
											"    let code = new RegExp(\"(A\\\\d+_\"+query[\"panel_id\"]+\"_\\\\d+|\"+query[\"panel_id\"]+\"_\\\\d+)\");",
											"    let jsonData = pm.response.json();",
											"    let recordset = jsonData.result.recordset;",
											"",
											"    pm.expect(recordset).to.not.empty;",
											"    for(let i in recordset){",
											"        pm.expect(recordset[i].code).to.match(code);",
											"    }",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Host",
										"value": "programming.fleta.com",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://{{mims}}/smartux/getMainPanelInterlockingInfo?sa_id=T61060140414&stb_mac=8c6d.5044.45dd&app_type=UX&panel_id=ST02&category_gb=&testId=&variationId=QQQQ&app_name=&ui_version=&pre_page=&cur_page=&dev_info=&os_info=&nw_info=&dev_model=&carrier_type=",
									"protocol": "http",
									"host": [
										"{{mims}}"
									],
									"path": [
										"smartux",
										"getMainPanelInterlockingInfo"
									],
									"query": [
										{
											"key": "sa_id",
											"value": "T61060140414"
										},
										{
											"key": "stb_mac",
											"value": "8c6d.5044.45dd"
										},
										{
											"key": "app_type",
											"value": "UX"
										},
										{
											"key": "panel_id",
											"value": "ST02"
										},
										{
											"key": "category_gb",
											"value": ""
										},
										{
											"key": "testId",
											"value": ""
										},
										{
											"key": "variationId",
											"value": "QQQQ"
										},
										{
											"key": "app_name",
											"value": ""
										},
										{
											"key": "ui_version",
											"value": ""
										},
										{
											"key": "pre_page",
											"value": ""
										},
										{
											"key": "cur_page",
											"value": ""
										},
										{
											"key": "dev_info",
											"value": ""
										},
										{
											"key": "os_info",
											"value": ""
										},
										{
											"key": "nw_info",
											"value": ""
										},
										{
											"key": "dev_model",
											"value": ""
										},
										{
											"key": "carrier_type",
											"value": ""
										}
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"// 공통",
									"",
									"// WAS 정상응답 체크 (200여부)",
									"pm.test(\"[공통]WAS 정상응답 체크 (200여부)\", function () {",
									"    pm.response.to.have.status(200);   ",
									"});",
									"",
									"// 응답속도 체크(0.5초미만) 여부",
									"pm.test(\"[공통]응답속도 체크(0.5초미만)\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(500);",
									"});"
								]
							}
						}
					]
				},
				{
					"name": "getMainPanelVersionInfo",
					"item": [
						{
							"name": "/smartux/getMainPanelVersionInfo_ATC7_app_type 이 미정의된 입력값일때 Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// 공통\r",
											"// WAS 정상응답 체크 (200여부)\r",
											"pm.test(\"[공통]WAS 정상응답 체크 (200여부)\", function () {\r",
											"    pm.response.to.have.status(200);   \r",
											"});\r",
											"\r",
											"// 응답속도 체크(0.5초미만) 여부\r",
											"pm.test(\"[공통]응답속도 체크(0.5초미만)\", function () {\r",
											"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
											"});\r",
											"\r",
											"// 1) app_type 이 미정의된 입력값일때\r",
											"pm.test(\"1) app_type 이 미정의된 입력값일때\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Host",
										"value": "programming.fleta.com",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://{{mims}}/smartux/getMainPanelVersionInfo?sa_id=T61060140414&stb_mac=8c6d.5044.45dd&app_type=QQQ&app_name=&ui_version=&pre_page=&cur_page=&dev_info=&os_info=&nw_info=&dev_model=&carrier_type=",
									"protocol": "http",
									"host": [
										"{{mims}}"
									],
									"path": [
										"smartux",
										"getMainPanelVersionInfo"
									],
									"query": [
										{
											"key": "sa_id",
											"value": "T61060140414"
										},
										{
											"key": "stb_mac",
											"value": "8c6d.5044.45dd"
										},
										{
											"key": "app_type",
											"value": "QQQ"
										},
										{
											"key": "app_name",
											"value": ""
										},
										{
											"key": "ui_version",
											"value": ""
										},
										{
											"key": "pre_page",
											"value": ""
										},
										{
											"key": "cur_page",
											"value": ""
										},
										{
											"key": "dev_info",
											"value": ""
										},
										{
											"key": "os_info",
											"value": ""
										},
										{
											"key": "nw_info",
											"value": ""
										},
										{
											"key": "dev_model",
											"value": ""
										},
										{
											"key": "carrier_type",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "/smartux/getMainPanelVersionInfo_NTC1_일반 가입자_UX Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// 공통",
											"// WAS 정상응답 체크 (200여부)",
											"pm.test(\"[공통]WAS 정상응답 체크 (200여부)\", function () {",
											"    pm.response.to.have.status(200);   ",
											"});",
											"",
											"// 응답속도 체크(0.5초미만) 여부",
											"pm.test(\"[공통]응답속도 체크(0.5초미만)\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(500);",
											"});",
											"",
											"// 1) 가입자(일반/검수) 구분에 따른 응답 확인",
											"pm.test(\"1) 가입자(일반/검수) 구분에 따른 응답 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"// 2) 어플타입에 따른 응답 구분",
											"pm.test(\"2) 어플타입에 따른 응답 구분\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Host",
										"value": "programming.fleta.com",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://{{mims}}/smartux/getMainPanelVersionInfo?sa_id=T61060140414&stb_mac=8c6d.5044.45dd&app_type=UX&app_name=&ui_version=&pre_page=&cur_page=&dev_info=&os_info=&nw_info=&dev_model=&carrier_type=",
									"protocol": "http",
									"host": [
										"{{mims}}"
									],
									"path": [
										"smartux",
										"getMainPanelVersionInfo"
									],
									"query": [
										{
											"key": "sa_id",
											"value": "T61060140414"
										},
										{
											"key": "stb_mac",
											"value": "8c6d.5044.45dd"
										},
										{
											"key": "app_type",
											"value": "UX"
										},
										{
											"key": "app_name",
											"value": ""
										},
										{
											"key": "ui_version",
											"value": ""
										},
										{
											"key": "pre_page",
											"value": ""
										},
										{
											"key": "cur_page",
											"value": ""
										},
										{
											"key": "dev_info",
											"value": ""
										},
										{
											"key": "os_info",
											"value": ""
										},
										{
											"key": "nw_info",
											"value": ""
										},
										{
											"key": "dev_model",
											"value": ""
										},
										{
											"key": "carrier_type",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "/smartux/getMainPanelVersionInfo_NTC4_검수 가입자_UX Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// 공통",
											"// WAS 정상응답 체크 (200여부)",
											"pm.test(\"[공통]WAS 정상응답 체크 (200여부)\", function () {",
											"    pm.response.to.have.status(200);   ",
											"});",
											"",
											"// 응답속도 체크(0.5초미만) 여부",
											"pm.test(\"[공통]응답속도 체크(0.5초미만)\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(500);",
											"});",
											"",
											"// 1) 가입자(일반/검수) 구분에 따른 응답 확인",
											"pm.test(\"1) 가입자(일반/검수) 구분에 따른 응답 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"// 2) 어플타입에 따른 응답 구분",
											"pm.test(\"2) 어플타입에 따른 응답 구분\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Host",
										"value": "programming.fleta.com",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://{{mims}}/smartux/getMainPanelVersionInfo?sa_id=T61060140414&stb_mac=v000.3529.4486&app_type=UX&app_name=&ui_version=&pre_page=&cur_page=&dev_info=&os_info=&nw_info=&dev_model=&carrier_type=",
									"protocol": "http",
									"host": [
										"{{mims}}"
									],
									"path": [
										"smartux",
										"getMainPanelVersionInfo"
									],
									"query": [
										{
											"key": "sa_id",
											"value": "T61060140414"
										},
										{
											"key": "stb_mac",
											"value": "v000.3529.4486"
										},
										{
											"key": "app_type",
											"value": "UX"
										},
										{
											"key": "app_name",
											"value": ""
										},
										{
											"key": "ui_version",
											"value": ""
										},
										{
											"key": "pre_page",
											"value": ""
										},
										{
											"key": "cur_page",
											"value": ""
										},
										{
											"key": "dev_info",
											"value": ""
										},
										{
											"key": "os_info",
											"value": ""
										},
										{
											"key": "nw_info",
											"value": ""
										},
										{
											"key": "dev_model",
											"value": ""
										},
										{
											"key": "carrier_type",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "/smartux/getMainPanelVersionInfo_NTC6_검수 가입자_SUSA Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// 공통",
											"// WAS 정상응답 체크 (200여부)",
											"pm.test(\"[공통]WAS 정상응답 체크 (200여부)\", function () {",
											"    pm.response.to.have.status(200);   ",
											"});",
											"",
											"// 응답속도 체크(0.5초미만) 여부",
											"pm.test(\"[공통]응답속도 체크(0.5초미만)\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(500);",
											"});",
											"",
											"// 1) 가입자(일반/검수) 구분에 따른 응답 확인",
											"pm.test(\"1) 가입자(일반/검수) 구분에 따른 응답 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"// 2) 어플타입에 따른 응답 구분",
											"pm.test(\"2) 어플타입에 따른 응답 구분\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Host",
										"value": "programming.fleta.com",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://{{mims}}/smartux/getMainPanelVersionInfo?sa_id=T61060140414&stb_mac=v000.3529.4486&app_type=SUSA&app_name=&ui_version=&pre_page=&cur_page=&dev_info=&os_info=&nw_info=&dev_model=&carrier_type=",
									"protocol": "http",
									"host": [
										"{{mims}}"
									],
									"path": [
										"smartux",
										"getMainPanelVersionInfo"
									],
									"query": [
										{
											"key": "sa_id",
											"value": "T61060140414"
										},
										{
											"key": "stb_mac",
											"value": "v000.3529.4486"
										},
										{
											"key": "app_type",
											"value": "SUSA"
										},
										{
											"key": "app_name",
											"value": ""
										},
										{
											"key": "ui_version",
											"value": ""
										},
										{
											"key": "pre_page",
											"value": ""
										},
										{
											"key": "cur_page",
											"value": ""
										},
										{
											"key": "dev_info",
											"value": ""
										},
										{
											"key": "os_info",
											"value": ""
										},
										{
											"key": "nw_info",
											"value": ""
										},
										{
											"key": "dev_model",
											"value": ""
										},
										{
											"key": "carrier_type",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "/smartux/getMainPanelVersionInfo_ATC2_text/plain 확인 Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// 공통",
											"// WAS 정상응답 체크 (200여부)",
											"pm.test(\"[공통]WAS 정상응답 체크 (200여부)\", function () {",
											"    pm.response.to.have.status(200);   ",
											"});",
											"",
											"// 응답속도 체크(0.5초미만) 여부",
											"pm.test(\"[공통]응답속도 체크(0.5초미만)\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(500);",
											"});",
											"",
											"// 1) text/plain 확인\r",
											"pm.test(\"1) text/plain 확인\", function () {\r",
											"    let textData = pm.response.text();\r",
											"    pm.expect(textData.split(\"!^\")[0]).to.eql(\"0000\");\r",
											"});\r"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "text/plain",
										"type": "text"
									},
									{
										"key": "Host",
										"value": "programming.fleta.com",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://{{mims}}/smartux/getMainPanelVersionInfo?sa_id=T61060140414&stb_mac=8c6d.5044.45dd&app_type=UX&app_name=&ui_version=&pre_page=&cur_page=&dev_info=&os_info=&nw_info=&dev_model=&carrier_type=",
									"protocol": "http",
									"host": [
										"{{mims}}"
									],
									"path": [
										"smartux",
										"getMainPanelVersionInfo"
									],
									"query": [
										{
											"key": "sa_id",
											"value": "T61060140414"
										},
										{
											"key": "stb_mac",
											"value": "8c6d.5044.45dd"
										},
										{
											"key": "app_type",
											"value": "UX"
										},
										{
											"key": "app_name",
											"value": ""
										},
										{
											"key": "ui_version",
											"value": ""
										},
										{
											"key": "pre_page",
											"value": ""
										},
										{
											"key": "cur_page",
											"value": ""
										},
										{
											"key": "dev_info",
											"value": ""
										},
										{
											"key": "os_info",
											"value": ""
										},
										{
											"key": "nw_info",
											"value": ""
										},
										{
											"key": "dev_model",
											"value": ""
										},
										{
											"key": "carrier_type",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "/smartux/getMainPanelVersionInfo_ATC3_sa_id 가 영문/숫자 format 이 아닐때 Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// 공통",
											"// WAS 정상응답 체크 (200여부)",
											"pm.test(\"[공통]WAS 정상응답 체크 (200여부)\", function () {",
											"    pm.response.to.have.status(200);   ",
											"});",
											"",
											"// 응답속도 체크(0.5초미만) 여부",
											"pm.test(\"[공통]응답속도 체크(0.5초미만)\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(500);",
											"});",
											"",
											"// 1) sa_id 가 영문/숫자 format 이 아닐때\r",
											"pm.test(\"1) sa_id 가 영문/숫자 format 이 아닐때\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");\r",
											"});\r"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Host",
										"value": "programming.fleta.com",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://{{mims}}/smartux/getMainPanelVersionInfo?sa_id=한글яз01&stb_mac=8c6d.5044.45dd&app_type=UX&app_name=&ui_version=&pre_page=&cur_page=&dev_info=&os_info=&nw_info=&dev_model=&carrier_type=",
									"protocol": "http",
									"host": [
										"{{mims}}"
									],
									"path": [
										"smartux",
										"getMainPanelVersionInfo"
									],
									"query": [
										{
											"key": "sa_id",
											"value": "한글яз01"
										},
										{
											"key": "stb_mac",
											"value": "8c6d.5044.45dd"
										},
										{
											"key": "app_type",
											"value": "UX"
										},
										{
											"key": "app_name",
											"value": ""
										},
										{
											"key": "ui_version",
											"value": ""
										},
										{
											"key": "pre_page",
											"value": ""
										},
										{
											"key": "cur_page",
											"value": ""
										},
										{
											"key": "dev_info",
											"value": ""
										},
										{
											"key": "os_info",
											"value": ""
										},
										{
											"key": "nw_info",
											"value": ""
										},
										{
											"key": "dev_model",
											"value": ""
										},
										{
											"key": "carrier_type",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "/smartux/getMainPanelVersionInfo_ATC4_stb_mac 가 영문/숫자 format 이 아닐때 Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// 공통",
											"// WAS 정상응답 체크 (200여부)",
											"pm.test(\"[공통]WAS 정상응답 체크 (200여부)\", function () {",
											"    pm.response.to.have.status(200);   ",
											"});",
											"",
											"// 응답속도 체크(0.5초미만) 여부",
											"pm.test(\"[공통]응답속도 체크(0.5초미만)\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(500);",
											"});",
											"",
											"// 1) stb_mac 가 영문/숫자 format 이 아닐때\r",
											"pm.test(\"1) stb_mac 가 영문/숫자 format 이 아닐때\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");\r",
											"});\r"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Host",
										"value": "programming.fleta.com",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://{{mims}}/smartux/getMainPanelVersionInfo?sa_id=T61060140414&stb_mac=한글яз01&app_type=UX&app_name=&ui_version=&pre_page=&cur_page=&dev_info=&os_info=&nw_info=&dev_model=&carrier_type=",
									"protocol": "http",
									"host": [
										"{{mims}}"
									],
									"path": [
										"smartux",
										"getMainPanelVersionInfo"
									],
									"query": [
										{
											"key": "sa_id",
											"value": "T61060140414"
										},
										{
											"key": "stb_mac",
											"value": "한글яз01"
										},
										{
											"key": "app_type",
											"value": "UX"
										},
										{
											"key": "app_name",
											"value": ""
										},
										{
											"key": "ui_version",
											"value": ""
										},
										{
											"key": "pre_page",
											"value": ""
										},
										{
											"key": "cur_page",
											"value": ""
										},
										{
											"key": "dev_info",
											"value": ""
										},
										{
											"key": "os_info",
											"value": ""
										},
										{
											"key": "nw_info",
											"value": ""
										},
										{
											"key": "dev_model",
											"value": ""
										},
										{
											"key": "carrier_type",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "/smartux/getMainPanelVersionInfo_ATC6_미등록 가입자일때 Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// 공통",
											"// WAS 정상응답 체크 (200여부)",
											"pm.test(\"[공통]WAS 정상응답 체크 (200여부)\", function () {",
											"    pm.response.to.have.status(200);   ",
											"});",
											"",
											"// 응답속도 체크(0.5초미만) 여부",
											"pm.test(\"[공통]응답속도 체크(0.5초미만)\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(500);",
											"});",
											"",
											"// 1) 미등록 가입자일때\r",
											"pm.test(\"1) 미등록 가입자일때\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");\r",
											"});\r"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Host",
										"value": "programming.fleta.com",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://{{mims}}/smartux/getMainPanelVersionInfo?sa_id=999999999999&stb_mac=a123.b234.c345&app_type=UX&app_name=&ui_version=&pre_page=&cur_page=&dev_info=&os_info=&nw_info=&dev_model=&carrier_type=",
									"protocol": "http",
									"host": [
										"{{mims}}"
									],
									"path": [
										"smartux",
										"getMainPanelVersionInfo"
									],
									"query": [
										{
											"key": "sa_id",
											"value": "999999999999"
										},
										{
											"key": "stb_mac",
											"value": "a123.b234.c345"
										},
										{
											"key": "app_type",
											"value": "UX"
										},
										{
											"key": "app_name",
											"value": ""
										},
										{
											"key": "ui_version",
											"value": ""
										},
										{
											"key": "pre_page",
											"value": ""
										},
										{
											"key": "cur_page",
											"value": ""
										},
										{
											"key": "dev_info",
											"value": ""
										},
										{
											"key": "os_info",
											"value": ""
										},
										{
											"key": "nw_info",
											"value": ""
										},
										{
											"key": "dev_model",
											"value": ""
										},
										{
											"key": "carrier_type",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "/smartux/getMainPanelVersionInfo_NTC2_일반 가입자_SMA Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// 공통",
											"// WAS 정상응답 체크 (200여부)",
											"pm.test(\"[공통]WAS 정상응답 체크 (200여부)\", function () {",
											"    pm.response.to.have.status(200);   ",
											"});",
											"",
											"// 응답속도 체크(0.5초미만) 여부",
											"pm.test(\"[공통]응답속도 체크(0.5초미만)\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(500);",
											"});",
											"",
											"// 1) 가입자(일반/검수) 구분에 따른 응답 확인",
											"pm.test(\"1) 가입자(일반/검수) 구분에 따른 응답 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"// 2) 어플타입에 따른 응답 구분",
											"pm.test(\"2) 어플타입에 따른 응답 구분\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Host",
										"value": "programming.fleta.com",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://{{mims}}/smartux/getMainPanelVersionInfo?sa_id=T61060140414&stb_mac=8c6d.5044.45dd&app_type=SMA&app_name=&ui_version=&pre_page=&cur_page=&dev_info=&os_info=&nw_info=&dev_model=&carrier_type=",
									"protocol": "http",
									"host": [
										"{{mims}}"
									],
									"path": [
										"smartux",
										"getMainPanelVersionInfo"
									],
									"query": [
										{
											"key": "sa_id",
											"value": "T61060140414"
										},
										{
											"key": "stb_mac",
											"value": "8c6d.5044.45dd"
										},
										{
											"key": "app_type",
											"value": "SMA"
										},
										{
											"key": "app_name",
											"value": ""
										},
										{
											"key": "ui_version",
											"value": ""
										},
										{
											"key": "pre_page",
											"value": ""
										},
										{
											"key": "cur_page",
											"value": ""
										},
										{
											"key": "dev_info",
											"value": ""
										},
										{
											"key": "os_info",
											"value": ""
										},
										{
											"key": "nw_info",
											"value": ""
										},
										{
											"key": "dev_model",
											"value": ""
										},
										{
											"key": "carrier_type",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "/smartux/getMainPanelVersionInfo_NTC5_검수 가입자_SMA Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// 공통",
											"// WAS 정상응답 체크 (200여부)",
											"pm.test(\"[공통]WAS 정상응답 체크 (200여부)\", function () {",
											"    pm.response.to.have.status(200);   ",
											"});",
											"",
											"// 응답속도 체크(0.5초미만) 여부",
											"pm.test(\"[공통]응답속도 체크(0.5초미만)\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(500);",
											"});",
											"",
											"// 1) 가입자(일반/검수) 구분에 따른 응답 확인",
											"pm.test(\"1) 가입자(일반/검수) 구분에 따른 응답 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"// 2) 어플타입에 따른 응답 구분",
											"pm.test(\"2) 어플타입에 따른 응답 구분\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Host",
										"value": "programming.fleta.com",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://{{mims}}/smartux/getMainPanelVersionInfo?sa_id=T61060140414&stb_mac=v000.3529.4486&app_type=SMA&app_name=&ui_version=&pre_page=&cur_page=&dev_info=&os_info=&nw_info=&dev_model=&carrier_type=",
									"protocol": "http",
									"host": [
										"{{mims}}"
									],
									"path": [
										"smartux",
										"getMainPanelVersionInfo"
									],
									"query": [
										{
											"key": "sa_id",
											"value": "T61060140414"
										},
										{
											"key": "stb_mac",
											"value": "v000.3529.4486"
										},
										{
											"key": "app_type",
											"value": "SMA"
										},
										{
											"key": "app_name",
											"value": ""
										},
										{
											"key": "ui_version",
											"value": ""
										},
										{
											"key": "pre_page",
											"value": ""
										},
										{
											"key": "cur_page",
											"value": ""
										},
										{
											"key": "dev_info",
											"value": ""
										},
										{
											"key": "os_info",
											"value": ""
										},
										{
											"key": "nw_info",
											"value": ""
										},
										{
											"key": "dev_model",
											"value": ""
										},
										{
											"key": "carrier_type",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "/smartux/getMainPanelVersionInfo_ATC5_app_type 가 영문/숫자 format 이 아닐때 Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// 공통",
											"// WAS 정상응답 체크 (200여부)",
											"pm.test(\"[공통]WAS 정상응답 체크 (200여부)\", function () {",
											"    pm.response.to.have.status(200);   ",
											"});",
											"",
											"// 응답속도 체크(0.5초미만) 여부",
											"pm.test(\"[공통]응답속도 체크(0.5초미만)\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(500);",
											"});",
											"",
											"// 1) app_type 가 영문/숫자 format 이 아닐때\r",
											"pm.test(\"1) app_type 가 영문/숫자 format 이 아닐때\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");\r",
											"});\r"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Host",
										"value": "programming.fleta.com",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://{{mims}}/smartux/getMainPanelVersionInfo?sa_id=T61060140414&stb_mac=8c6d.5044.45dd&app_type=한글яз01&app_name=&ui_version=&pre_page=&cur_page=&dev_info=&os_info=&nw_info=&dev_model=&carrier_type=",
									"protocol": "http",
									"host": [
										"{{mims}}"
									],
									"path": [
										"smartux",
										"getMainPanelVersionInfo"
									],
									"query": [
										{
											"key": "sa_id",
											"value": "T61060140414"
										},
										{
											"key": "stb_mac",
											"value": "8c6d.5044.45dd"
										},
										{
											"key": "app_type",
											"value": "한글яз01"
										},
										{
											"key": "app_name",
											"value": ""
										},
										{
											"key": "ui_version",
											"value": ""
										},
										{
											"key": "pre_page",
											"value": ""
										},
										{
											"key": "cur_page",
											"value": ""
										},
										{
											"key": "dev_info",
											"value": ""
										},
										{
											"key": "os_info",
											"value": ""
										},
										{
											"key": "nw_info",
											"value": ""
										},
										{
											"key": "dev_model",
											"value": ""
										},
										{
											"key": "carrier_type",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "/smartux/getMainPanelVersionInfo_NTC3_일반 가입자_SUSA Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// 공통",
											"// WAS 정상응답 체크 (200여부)",
											"pm.test(\"[공통]WAS 정상응답 체크 (200여부)\", function () {",
											"    pm.response.to.have.status(200);   ",
											"});",
											"",
											"// 응답속도 체크(0.5초미만) 여부",
											"pm.test(\"[공통]응답속도 체크(0.5초미만)\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(500);",
											"});",
											"",
											"// 1) 가입자(일반/검수) 구분에 따른 응답 확인",
											"pm.test(\"1) 가입자(일반/검수) 구분에 따른 응답 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"// 2) 어플타입에 따른 응답 구분",
											"pm.test(\"2) 어플타입에 따른 응답 구분\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Host",
										"value": "programming.fleta.com",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://{{mims}}/smartux/getMainPanelVersionInfo?sa_id=T61060140414&stb_mac=8c6d.5044.45dd&app_type=SUSA&app_name=&ui_version=&pre_page=&cur_page=&dev_info=&os_info=&nw_info=&dev_model=&carrier_type=",
									"protocol": "http",
									"host": [
										"{{mims}}"
									],
									"path": [
										"smartux",
										"getMainPanelVersionInfo"
									],
									"query": [
										{
											"key": "sa_id",
											"value": "T61060140414"
										},
										{
											"key": "stb_mac",
											"value": "8c6d.5044.45dd"
										},
										{
											"key": "app_type",
											"value": "SUSA"
										},
										{
											"key": "app_name",
											"value": ""
										},
										{
											"key": "ui_version",
											"value": ""
										},
										{
											"key": "pre_page",
											"value": ""
										},
										{
											"key": "cur_page",
											"value": ""
										},
										{
											"key": "dev_info",
											"value": ""
										},
										{
											"key": "os_info",
											"value": ""
										},
										{
											"key": "nw_info",
											"value": ""
										},
										{
											"key": "dev_model",
											"value": ""
										},
										{
											"key": "carrier_type",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "/smartux/getMainPanelVersionInfo_ATC1_application/xml 확인 Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// 공통",
											"// WAS 정상응답 체크 (200여부)",
											"pm.test(\"[공통]WAS 정상응답 체크 (200여부)\", function () {",
											"    pm.response.to.have.status(200);   ",
											"});",
											"",
											"// 응답속도 체크(0.5초미만) 여부",
											"pm.test(\"[공통]응답속도 체크(0.5초미만)\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(500);",
											"});",
											"",
											"// 1) application/xml 확인\r",
											"pm.test(\"1) application/xml 확인\", function () {\r",
											"    let jsonObject = xml2Json(responseBody);\r",
											"    let flag = jsonObject.result.flag;\r",
											"    pm.expect(flag).to.eql(\"0000\");\r",
											"});\r"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/xml",
										"type": "text"
									},
									{
										"key": "Host",
										"value": "programming.fleta.com",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://{{mims}}/smartux/getMainPanelVersionInfo?sa_id=T61060140414&stb_mac=8c6d.5044.45dd&app_type=UX&app_name=&ui_version=&pre_page=&cur_page=&dev_info=&os_info=&nw_info=&dev_model=&carrier_type=",
									"protocol": "http",
									"host": [
										"{{mims}}"
									],
									"path": [
										"smartux",
										"getMainPanelVersionInfo"
									],
									"query": [
										{
											"key": "sa_id",
											"value": "T61060140414"
										},
										{
											"key": "stb_mac",
											"value": "8c6d.5044.45dd"
										},
										{
											"key": "app_type",
											"value": "UX"
										},
										{
											"key": "app_name",
											"value": ""
										},
										{
											"key": "ui_version",
											"value": ""
										},
										{
											"key": "pre_page",
											"value": ""
										},
										{
											"key": "cur_page",
											"value": ""
										},
										{
											"key": "dev_info",
											"value": ""
										},
										{
											"key": "os_info",
											"value": ""
										},
										{
											"key": "nw_info",
											"value": ""
										},
										{
											"key": "dev_model",
											"value": ""
										},
										{
											"key": "carrier_type",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "/smartux/getMainPanelVersionInfo_NTC1_일반 가입자_UX Copy 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// 공통",
											"// WAS 정상응답 체크 (200여부)",
											"pm.test(\"[공통]WAS 정상응답 체크 (200여부)\", function () {",
											"    pm.response.to.have.status(200);   ",
											"});",
											"",
											"// 응답속도 체크(0.5초미만) 여부",
											"pm.test(\"[공통]응답속도 체크(0.5초미만)\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(500);",
											"});",
											"",
											"// 1) 가입자(일반/검수) 구분에 따른 응답 확인",
											"pm.test(\"1) 가입자(일반/검수) 구분에 따른 응답 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"// 2) 어플타입에 따른 응답 구분",
											"pm.test(\"2) 어플타입에 따른 응답 구분\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Host",
										"value": "programming.fleta.com",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://{{mims}}/smartux/getMainPanelVersionInfo?sa_id=T61060140414&stb_mac=8c6d.5044.45dd&app_type=UX&app_name=&ui_version=&pre_page=&cur_page=&dev_info=&os_info=&nw_info=&dev_model=&carrier_type=",
									"protocol": "http",
									"host": [
										"{{mims}}"
									],
									"path": [
										"smartux",
										"getMainPanelVersionInfo"
									],
									"query": [
										{
											"key": "sa_id",
											"value": "T61060140414"
										},
										{
											"key": "stb_mac",
											"value": "8c6d.5044.45dd"
										},
										{
											"key": "app_type",
											"value": "UX"
										},
										{
											"key": "app_name",
											"value": ""
										},
										{
											"key": "ui_version",
											"value": ""
										},
										{
											"key": "pre_page",
											"value": ""
										},
										{
											"key": "cur_page",
											"value": ""
										},
										{
											"key": "dev_info",
											"value": ""
										},
										{
											"key": "os_info",
											"value": ""
										},
										{
											"key": "nw_info",
											"value": ""
										},
										{
											"key": "dev_model",
											"value": ""
										},
										{
											"key": "carrier_type",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "/smartux/getMainPanelVersionInfo_NTC4_검수 가입자_UX Copy 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// 공통",
											"// WAS 정상응답 체크 (200여부)",
											"pm.test(\"[공통]WAS 정상응답 체크 (200여부)\", function () {",
											"    pm.response.to.have.status(200);   ",
											"});",
											"",
											"// 응답속도 체크(0.5초미만) 여부",
											"pm.test(\"[공통]응답속도 체크(0.5초미만)\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(500);",
											"});",
											"",
											"// 1) 가입자(일반/검수) 구분에 따른 응답 확인",
											"pm.test(\"1) 가입자(일반/검수) 구분에 따른 응답 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"// 2) 어플타입에 따른 응답 구분",
											"pm.test(\"2) 어플타입에 따른 응답 구분\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Host",
										"value": "programming.fleta.com",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://{{mims}}/smartux/getMainPanelVersionInfo?sa_id=T61060140414&stb_mac=v000.3529.4486&app_type=UX&app_name=&ui_version=&pre_page=&cur_page=&dev_info=&os_info=&nw_info=&dev_model=&carrier_type=",
									"protocol": "http",
									"host": [
										"{{mims}}"
									],
									"path": [
										"smartux",
										"getMainPanelVersionInfo"
									],
									"query": [
										{
											"key": "sa_id",
											"value": "T61060140414"
										},
										{
											"key": "stb_mac",
											"value": "v000.3529.4486"
										},
										{
											"key": "app_type",
											"value": "UX"
										},
										{
											"key": "app_name",
											"value": ""
										},
										{
											"key": "ui_version",
											"value": ""
										},
										{
											"key": "pre_page",
											"value": ""
										},
										{
											"key": "cur_page",
											"value": ""
										},
										{
											"key": "dev_info",
											"value": ""
										},
										{
											"key": "os_info",
											"value": ""
										},
										{
											"key": "nw_info",
											"value": ""
										},
										{
											"key": "dev_model",
											"value": ""
										},
										{
											"key": "carrier_type",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "/smartux/getMainPanelVersionInfo_NTC6_검수 가입자_SUSA Copy 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// 공통",
											"// WAS 정상응답 체크 (200여부)",
											"pm.test(\"[공통]WAS 정상응답 체크 (200여부)\", function () {",
											"    pm.response.to.have.status(200);   ",
											"});",
											"",
											"// 응답속도 체크(0.5초미만) 여부",
											"pm.test(\"[공통]응답속도 체크(0.5초미만)\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(500);",
											"});",
											"",
											"// 1) 가입자(일반/검수) 구분에 따른 응답 확인",
											"pm.test(\"1) 가입자(일반/검수) 구분에 따른 응답 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"// 2) 어플타입에 따른 응답 구분",
											"pm.test(\"2) 어플타입에 따른 응답 구분\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Host",
										"value": "programming.fleta.com",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://{{mims}}/smartux/getMainPanelVersionInfo?sa_id=T61060140414&stb_mac=v000.3529.4486&app_type=SUSA&app_name=&ui_version=&pre_page=&cur_page=&dev_info=&os_info=&nw_info=&dev_model=&carrier_type=",
									"protocol": "http",
									"host": [
										"{{mims}}"
									],
									"path": [
										"smartux",
										"getMainPanelVersionInfo"
									],
									"query": [
										{
											"key": "sa_id",
											"value": "T61060140414"
										},
										{
											"key": "stb_mac",
											"value": "v000.3529.4486"
										},
										{
											"key": "app_type",
											"value": "SUSA"
										},
										{
											"key": "app_name",
											"value": ""
										},
										{
											"key": "ui_version",
											"value": ""
										},
										{
											"key": "pre_page",
											"value": ""
										},
										{
											"key": "cur_page",
											"value": ""
										},
										{
											"key": "dev_info",
											"value": ""
										},
										{
											"key": "os_info",
											"value": ""
										},
										{
											"key": "nw_info",
											"value": ""
										},
										{
											"key": "dev_model",
											"value": ""
										},
										{
											"key": "carrier_type",
											"value": ""
										}
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"// 공통",
									"",
									"// WAS 정상응답 체크 (200여부)",
									"pm.test(\"[공통]WAS 정상응답 체크 (200여부)\", function () {",
									"    pm.response.to.have.status(200);   ",
									"});",
									"",
									"// 응답속도 체크(0.5초미만) 여부",
									"pm.test(\"[공통]응답속도 체크(0.5초미만)\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(500);",
									"});"
								]
							}
						}
					]
				},
				{
					"name": "getRealRating",
					"item": [
						{
							"name": "/smartux/getRealRating_ATC3_sa_id 가 영문/숫자 format 이 아닐때 Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// 공통",
											"// WAS 정상응답 체크 (200여부)",
											"pm.test(\"[공통]WAS 정상응답 체크 (200여부)\", function () {",
											"    pm.response.to.have.status(200);   ",
											"});",
											"",
											"// 응답속도 체크(0.5초미만) 여부",
											"pm.test(\"[공통]응답속도 체크(0.5초미만)\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(500);",
											"});",
											"",
											"// 1) sa_id 가 영문/숫자 format 이 아닐때\r",
											"pm.test(\"1) sa_id 가 영문/숫자 format 이 아닐때\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");\r",
											"});\r"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Host",
										"value": "programming.fleta.com",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://{{mims}}/smartux/getRealRating?sa_id=한글яз01&stb_mac=8c6d.5044.45dd&app_type=UX&start_num=-1&req_count=2&localareacode=010&app_name=&ui_version=&pre_page=&cur_page=&dev_info=&os_info=&nw_info=&dev_model=&carrier_type=",
									"protocol": "http",
									"host": [
										"{{mims}}"
									],
									"path": [
										"smartux",
										"getRealRating"
									],
									"query": [
										{
											"key": "sa_id",
											"value": "한글яз01"
										},
										{
											"key": "stb_mac",
											"value": "8c6d.5044.45dd"
										},
										{
											"key": "app_type",
											"value": "UX"
										},
										{
											"key": "start_num",
											"value": "-1"
										},
										{
											"key": "req_count",
											"value": "2"
										},
										{
											"key": "localareacode",
											"value": "010"
										},
										{
											"key": "app_name",
											"value": ""
										},
										{
											"key": "ui_version",
											"value": ""
										},
										{
											"key": "pre_page",
											"value": ""
										},
										{
											"key": "cur_page",
											"value": ""
										},
										{
											"key": "dev_info",
											"value": ""
										},
										{
											"key": "os_info",
											"value": ""
										},
										{
											"key": "nw_info",
											"value": ""
										},
										{
											"key": "dev_model",
											"value": ""
										},
										{
											"key": "carrier_type",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "/smartux/getRealRating_ATC4_stb_mac 가 영문/숫자 format 이 아닐때 Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// 공통",
											"// WAS 정상응답 체크 (200여부)",
											"pm.test(\"[공통]WAS 정상응답 체크 (200여부)\", function () {",
											"    pm.response.to.have.status(200);   ",
											"});",
											"",
											"// 응답속도 체크(0.5초미만) 여부",
											"pm.test(\"[공통]응답속도 체크(0.5초미만)\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(500);",
											"});",
											"",
											"// 1) stb_mac 가 영문/숫자 format 이 아닐때\r",
											"pm.test(\"1) stb_mac 가 영문/숫자 format 이 아닐때\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");\r",
											"});\r"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Host",
										"value": "programming.fleta.com",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://{{mims}}/smartux/getRealRating?sa_id=T61060140414&stb_mac=한글яз01&app_type=UX&start_num=-1&req_count=2&localareacode=010&app_name=&ui_version=&pre_page=&cur_page=&dev_info=&os_info=&nw_info=&dev_model=&carrier_type=",
									"protocol": "http",
									"host": [
										"{{mims}}"
									],
									"path": [
										"smartux",
										"getRealRating"
									],
									"query": [
										{
											"key": "sa_id",
											"value": "T61060140414"
										},
										{
											"key": "stb_mac",
											"value": "한글яз01"
										},
										{
											"key": "app_type",
											"value": "UX"
										},
										{
											"key": "start_num",
											"value": "-1"
										},
										{
											"key": "req_count",
											"value": "2"
										},
										{
											"key": "localareacode",
											"value": "010"
										},
										{
											"key": "app_name",
											"value": ""
										},
										{
											"key": "ui_version",
											"value": ""
										},
										{
											"key": "pre_page",
											"value": ""
										},
										{
											"key": "cur_page",
											"value": ""
										},
										{
											"key": "dev_info",
											"value": ""
										},
										{
											"key": "os_info",
											"value": ""
										},
										{
											"key": "nw_info",
											"value": ""
										},
										{
											"key": "dev_model",
											"value": ""
										},
										{
											"key": "carrier_type",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "/smartux/getRealRating_ATC5_app_type 가 영문/숫자 format 이 아닐때 Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// 공통",
											"// WAS 정상응답 체크 (200여부)",
											"pm.test(\"[공통]WAS 정상응답 체크 (200여부)\", function () {",
											"    pm.response.to.have.status(200);   ",
											"});",
											"",
											"// 응답속도 체크(0.5초미만) 여부",
											"pm.test(\"[공통]응답속도 체크(0.5초미만)\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(500);",
											"});",
											"",
											"// 1) app_type 가 영문/숫자 format 이 아닐때\r",
											"pm.test(\"1) app_type 가 영문/숫자 format 이 아닐때\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");\r",
											"});\r"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Host",
										"value": "programming.fleta.com",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://{{mims}}/smartux/getRealRating?sa_id=T61060140414&stb_mac=8c6d.5044.45dd&app_type=한글яз01&start_num=-1&req_count=2&localareacode=010&app_name=&ui_version=&pre_page=&cur_page=&dev_info=&os_info=&nw_info=&dev_model=&carrier_type=",
									"protocol": "http",
									"host": [
										"{{mims}}"
									],
									"path": [
										"smartux",
										"getRealRating"
									],
									"query": [
										{
											"key": "sa_id",
											"value": "T61060140414"
										},
										{
											"key": "stb_mac",
											"value": "8c6d.5044.45dd"
										},
										{
											"key": "app_type",
											"value": "한글яз01"
										},
										{
											"key": "start_num",
											"value": "-1"
										},
										{
											"key": "req_count",
											"value": "2"
										},
										{
											"key": "localareacode",
											"value": "010"
										},
										{
											"key": "app_name",
											"value": ""
										},
										{
											"key": "ui_version",
											"value": ""
										},
										{
											"key": "pre_page",
											"value": ""
										},
										{
											"key": "cur_page",
											"value": ""
										},
										{
											"key": "dev_info",
											"value": ""
										},
										{
											"key": "os_info",
											"value": ""
										},
										{
											"key": "nw_info",
											"value": ""
										},
										{
											"key": "dev_model",
											"value": ""
										},
										{
											"key": "carrier_type",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "/smartux/getRealRating_ATC8_localareacode 영문/숫자 format 이 아닐때 Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// 공통",
											"// WAS 정상응답 체크 (200여부)",
											"pm.test(\"[공통]WAS 정상응답 체크 (200여부)\", function () {",
											"    pm.response.to.have.status(200);   ",
											"});",
											"",
											"// 응답속도 체크(0.5초미만) 여부",
											"pm.test(\"[공통]응답속도 체크(0.5초미만)\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(500);",
											"});",
											"",
											"// 1) localareacode 영문/숫자 format 이 아닐때\r",
											"pm.test(\"1) localareacode 영문/숫자 format 이 아닐때\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");\r",
											"});\r"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Host",
										"value": "programming.fleta.com",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://{{mims}}/smartux/getRealRating?sa_id=T61060140414&stb_mac=8c6d.5044.45dd&app_type=UX&start_num=-1&req_count=2&localareacode=한글яз01&app_name=&ui_version=&pre_page=&cur_page=&dev_info=&os_info=&nw_info=&dev_model=&carrier_type=",
									"protocol": "http",
									"host": [
										"{{mims}}"
									],
									"path": [
										"smartux",
										"getRealRating"
									],
									"query": [
										{
											"key": "sa_id",
											"value": "T61060140414"
										},
										{
											"key": "stb_mac",
											"value": "8c6d.5044.45dd"
										},
										{
											"key": "app_type",
											"value": "UX"
										},
										{
											"key": "start_num",
											"value": "-1"
										},
										{
											"key": "req_count",
											"value": "2"
										},
										{
											"key": "localareacode",
											"value": "한글яз01"
										},
										{
											"key": "app_name",
											"value": ""
										},
										{
											"key": "ui_version",
											"value": ""
										},
										{
											"key": "pre_page",
											"value": ""
										},
										{
											"key": "cur_page",
											"value": ""
										},
										{
											"key": "dev_info",
											"value": ""
										},
										{
											"key": "os_info",
											"value": ""
										},
										{
											"key": "nw_info",
											"value": ""
										},
										{
											"key": "dev_model",
											"value": ""
										},
										{
											"key": "carrier_type",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "/smartux/getRealRating_ATC11_req_count 가 0 보다 작을때 Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// 공통",
											"// WAS 정상응답 체크 (200여부)",
											"pm.test(\"[공통]WAS 정상응답 체크 (200여부)\", function () {",
											"    pm.response.to.have.status(200);   ",
											"});",
											"",
											"// 응답속도 체크(0.5초미만) 여부",
											"pm.test(\"[공통]응답속도 체크(0.5초미만)\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(500);",
											"});",
											"",
											"// 1) req_count 가 0 보다 작을때\r",
											"pm.test(\"1) req_count 가 0 보다 작을때\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");\r",
											"});\r"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Host",
										"value": "programming.fleta.com",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://{{mims}}/smartux/getRealRating?sa_id=T61060140414&stb_mac=8c6d.5044.45dd&app_type=UX&start_num=-1&req_count=-10&localareacode=010&app_name=&ui_version=&pre_page=&cur_page=&dev_info=&os_info=&nw_info=&dev_model=&carrier_type=",
									"protocol": "http",
									"host": [
										"{{mims}}"
									],
									"path": [
										"smartux",
										"getRealRating"
									],
									"query": [
										{
											"key": "sa_id",
											"value": "T61060140414"
										},
										{
											"key": "stb_mac",
											"value": "8c6d.5044.45dd"
										},
										{
											"key": "app_type",
											"value": "UX"
										},
										{
											"key": "start_num",
											"value": "-1"
										},
										{
											"key": "req_count",
											"value": "-10"
										},
										{
											"key": "localareacode",
											"value": "010"
										},
										{
											"key": "app_name",
											"value": ""
										},
										{
											"key": "ui_version",
											"value": ""
										},
										{
											"key": "pre_page",
											"value": ""
										},
										{
											"key": "cur_page",
											"value": ""
										},
										{
											"key": "dev_info",
											"value": ""
										},
										{
											"key": "os_info",
											"value": ""
										},
										{
											"key": "nw_info",
											"value": ""
										},
										{
											"key": "dev_model",
											"value": ""
										},
										{
											"key": "carrier_type",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "/smartux/getRealRating_ATC1_application/xml 확인 Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// 공통",
											"// WAS 정상응답 체크 (200여부)",
											"pm.test(\"[공통]WAS 정상응답 체크 (200여부)\", function () {",
											"    pm.response.to.have.status(200);   ",
											"});",
											"",
											"// 응답속도 체크(0.5초미만) 여부",
											"pm.test(\"[공통]응답속도 체크(0.5초미만)\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(500);",
											"});",
											"",
											"// 1) application/xml 확인\r",
											"pm.test(\"1) application/xml 확인\", function () {\r",
											"    let jsonObject = xml2Json(responseBody);\r",
											"    let flag = jsonObject.result.flag;\r",
											"    pm.expect(flag).to.eql(\"0000\");\r",
											"});\r"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/xml",
										"type": "text"
									},
									{
										"key": "Host",
										"value": "programming.fleta.com",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://{{mims}}/smartux/getRealRating?sa_id=T61060140414&stb_mac=8c6d.5044.45dd&app_type=UX&start_num=-1&req_count=2&localareacode=010&app_name=&ui_version=&pre_page=&cur_page=&dev_info=&os_info=&nw_info=&dev_model=&carrier_type=",
									"protocol": "http",
									"host": [
										"{{mims}}"
									],
									"path": [
										"smartux",
										"getRealRating"
									],
									"query": [
										{
											"key": "sa_id",
											"value": "T61060140414"
										},
										{
											"key": "stb_mac",
											"value": "8c6d.5044.45dd"
										},
										{
											"key": "app_type",
											"value": "UX"
										},
										{
											"key": "start_num",
											"value": "-1"
										},
										{
											"key": "req_count",
											"value": "2"
										},
										{
											"key": "localareacode",
											"value": "010"
										},
										{
											"key": "app_name",
											"value": ""
										},
										{
											"key": "ui_version",
											"value": ""
										},
										{
											"key": "pre_page",
											"value": ""
										},
										{
											"key": "cur_page",
											"value": ""
										},
										{
											"key": "dev_info",
											"value": ""
										},
										{
											"key": "os_info",
											"value": ""
										},
										{
											"key": "nw_info",
											"value": ""
										},
										{
											"key": "dev_model",
											"value": ""
										},
										{
											"key": "carrier_type",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "/smartux/getRealRating_ATC10_req_count 가 0 일때 Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// 공통",
											"// WAS 정상응답 체크 (200여부)",
											"pm.test(\"[공통]WAS 정상응답 체크 (200여부)\", function () {",
											"    pm.response.to.have.status(200);   ",
											"});",
											"",
											"// 응답속도 체크(0.5초미만) 여부",
											"pm.test(\"[공통]응답속도 체크(0.5초미만)\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(500);",
											"});",
											"",
											"// 1) req_count 가 0 일때\r",
											"pm.test(\"1) req_count 가 0 일때\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");\r",
											"});\r"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Host",
										"value": "programming.fleta.com",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://{{mims}}/smartux/getRealRating?sa_id=T61060140414&stb_mac=8c6d.5044.45dd&app_type=UX&start_num=-1&req_count=0&localareacode=010&app_name=&ui_version=&pre_page=&cur_page=&dev_info=&os_info=&nw_info=&dev_model=&carrier_type=",
									"protocol": "http",
									"host": [
										"{{mims}}"
									],
									"path": [
										"smartux",
										"getRealRating"
									],
									"query": [
										{
											"key": "sa_id",
											"value": "T61060140414"
										},
										{
											"key": "stb_mac",
											"value": "8c6d.5044.45dd"
										},
										{
											"key": "app_type",
											"value": "UX"
										},
										{
											"key": "start_num",
											"value": "-1"
										},
										{
											"key": "req_count",
											"value": "0"
										},
										{
											"key": "localareacode",
											"value": "010"
										},
										{
											"key": "app_name",
											"value": ""
										},
										{
											"key": "ui_version",
											"value": ""
										},
										{
											"key": "pre_page",
											"value": ""
										},
										{
											"key": "cur_page",
											"value": ""
										},
										{
											"key": "dev_info",
											"value": ""
										},
										{
											"key": "os_info",
											"value": ""
										},
										{
											"key": "nw_info",
											"value": ""
										},
										{
											"key": "dev_model",
											"value": ""
										},
										{
											"key": "carrier_type",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "/smartux/getRealRating_ATC7_req_count 숫자 format 이 아닐때 Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// 공통",
											"// WAS 정상응답 체크 (200여부)",
											"pm.test(\"[공통]WAS 정상응답 체크 (200여부)\", function () {",
											"    pm.response.to.have.status(200);   ",
											"});",
											"",
											"// 응답속도 체크(0.5초미만) 여부",
											"pm.test(\"[공통]응답속도 체크(0.5초미만)\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(500);",
											"});",
											"",
											"// 1) req_count 숫자 format 이 아닐때\r",
											"pm.test(\"1) req_count 숫자 format 이 아닐때\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");\r",
											"});\r"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Host",
										"value": "programming.fleta.com",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://{{mims}}/smartux/getRealRating?sa_id=T61060140414&stb_mac=8c6d.5044.45dd&app_type=UX&start_num=-1&req_count=한글яз01&localareacode=010&app_name=&ui_version=&pre_page=&cur_page=&dev_info=&os_info=&nw_info=&dev_model=&carrier_type=",
									"protocol": "http",
									"host": [
										"{{mims}}"
									],
									"path": [
										"smartux",
										"getRealRating"
									],
									"query": [
										{
											"key": "sa_id",
											"value": "T61060140414"
										},
										{
											"key": "stb_mac",
											"value": "8c6d.5044.45dd"
										},
										{
											"key": "app_type",
											"value": "UX"
										},
										{
											"key": "start_num",
											"value": "-1"
										},
										{
											"key": "req_count",
											"value": "한글яз01"
										},
										{
											"key": "localareacode",
											"value": "010"
										},
										{
											"key": "app_name",
											"value": ""
										},
										{
											"key": "ui_version",
											"value": ""
										},
										{
											"key": "pre_page",
											"value": ""
										},
										{
											"key": "cur_page",
											"value": ""
										},
										{
											"key": "dev_info",
											"value": ""
										},
										{
											"key": "os_info",
											"value": ""
										},
										{
											"key": "nw_info",
											"value": ""
										},
										{
											"key": "dev_model",
											"value": ""
										},
										{
											"key": "carrier_type",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "/smartux/getRealRating_ATC9_start_num 가 -1 보다 작을때 Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// 공통",
											"// WAS 정상응답 체크 (200여부)",
											"pm.test(\"[공통]WAS 정상응답 체크 (200여부)\", function () {",
											"    pm.response.to.have.status(200);   ",
											"});",
											"",
											"// 응답속도 체크(0.5초미만) 여부",
											"pm.test(\"[공통]응답속도 체크(0.5초미만)\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(500);",
											"});",
											"",
											"// 1) start_num 가 -1 보다 작을때",
											"pm.test(\"1) start_num 가 -1 보다 작을때\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"5003\");",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Host",
										"value": "programming.fleta.com",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://{{mims}}/smartux/getRealRating?sa_id=T61060140414&stb_mac=8c6d.5044.45dd&app_type=UX&start_num=-10&req_count=2&localareacode=010&app_name=&ui_version=&pre_page=&cur_page=&dev_info=&os_info=&nw_info=&dev_model=&carrier_type=",
									"protocol": "http",
									"host": [
										"{{mims}}"
									],
									"path": [
										"smartux",
										"getRealRating"
									],
									"query": [
										{
											"key": "sa_id",
											"value": "T61060140414"
										},
										{
											"key": "stb_mac",
											"value": "8c6d.5044.45dd"
										},
										{
											"key": "app_type",
											"value": "UX"
										},
										{
											"key": "start_num",
											"value": "-10"
										},
										{
											"key": "req_count",
											"value": "2"
										},
										{
											"key": "localareacode",
											"value": "010"
										},
										{
											"key": "app_name",
											"value": ""
										},
										{
											"key": "ui_version",
											"value": ""
										},
										{
											"key": "pre_page",
											"value": ""
										},
										{
											"key": "cur_page",
											"value": ""
										},
										{
											"key": "dev_info",
											"value": ""
										},
										{
											"key": "os_info",
											"value": ""
										},
										{
											"key": "nw_info",
											"value": ""
										},
										{
											"key": "dev_model",
											"value": ""
										},
										{
											"key": "carrier_type",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "/smartux/getRealRating_ATC14_localareacode 의 3지역 이상이 입력값일때 Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// 공통",
											"// WAS 정상응답 체크 (200여부)",
											"pm.test(\"[공통]WAS 정상응답 체크 (200여부)\", function () {",
											"    pm.response.to.have.status(200);   ",
											"});",
											"",
											"// 응답속도 체크(0.5초미만) 여부",
											"pm.test(\"[공통]응답속도 체크(0.5초미만)\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(500);",
											"});",
											"",
											"// 1) localareacode 의 3지역 이상이 입력값일때\r",
											"pm.test(\"1) localareacode 의 3지역 이상이 입력값일때\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");\r",
											"});\r"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Host",
										"value": "programming.fleta.com",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://{{mims}}/smartux/getRealRating?sa_id=T61060140414&stb_mac=8c6d.5044.45dd&app_type=UX&start_num=-1&req_count=2&localareacode=011||012||013||014&app_name=&ui_version=&pre_page=&cur_page=&dev_info=&os_info=&nw_info=&dev_model=&carrier_type=",
									"protocol": "http",
									"host": [
										"{{mims}}"
									],
									"path": [
										"smartux",
										"getRealRating"
									],
									"query": [
										{
											"key": "sa_id",
											"value": "T61060140414"
										},
										{
											"key": "stb_mac",
											"value": "8c6d.5044.45dd"
										},
										{
											"key": "app_type",
											"value": "UX"
										},
										{
											"key": "start_num",
											"value": "-1"
										},
										{
											"key": "req_count",
											"value": "2"
										},
										{
											"key": "localareacode",
											"value": "011||012||013||014"
										},
										{
											"key": "app_name",
											"value": ""
										},
										{
											"key": "ui_version",
											"value": ""
										},
										{
											"key": "pre_page",
											"value": ""
										},
										{
											"key": "cur_page",
											"value": ""
										},
										{
											"key": "dev_info",
											"value": ""
										},
										{
											"key": "os_info",
											"value": ""
										},
										{
											"key": "nw_info",
											"value": ""
										},
										{
											"key": "dev_model",
											"value": ""
										},
										{
											"key": "carrier_type",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "/smartux/getRealRating_ATC2_text/plain 확인 Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// 공통",
											"// WAS 정상응답 체크 (200여부)",
											"pm.test(\"[공통]WAS 정상응답 체크 (200여부)\", function () {",
											"    pm.response.to.have.status(200);   ",
											"});",
											"",
											"// 응답속도 체크(0.5초미만) 여부",
											"pm.test(\"[공통]응답속도 체크(0.5초미만)\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(500);",
											"});",
											"",
											"// 1) text/plain 확인\r",
											"pm.test(\"1) text/plain 확인\", function () {\r",
											"    let textData = pm.response.text();\r",
											"    pm.expect(textData.split(\"!^\")[0]).to.eql(\"0000\");\r",
											"});\r"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "text/plain",
										"type": "text"
									},
									{
										"key": "Host",
										"value": "programming.fleta.com",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://{{mims}}/smartux/getRealRating?sa_id=T61060140414&stb_mac=8c6d.5044.45dd&app_type=UX&start_num=-1&req_count=2&localareacode=010&app_name=&ui_version=&pre_page=&cur_page=&dev_info=&os_info=&nw_info=&dev_model=&carrier_type=",
									"protocol": "http",
									"host": [
										"{{mims}}"
									],
									"path": [
										"smartux",
										"getRealRating"
									],
									"query": [
										{
											"key": "sa_id",
											"value": "T61060140414"
										},
										{
											"key": "stb_mac",
											"value": "8c6d.5044.45dd"
										},
										{
											"key": "app_type",
											"value": "UX"
										},
										{
											"key": "start_num",
											"value": "-1"
										},
										{
											"key": "req_count",
											"value": "2"
										},
										{
											"key": "localareacode",
											"value": "010"
										},
										{
											"key": "app_name",
											"value": ""
										},
										{
											"key": "ui_version",
											"value": ""
										},
										{
											"key": "pre_page",
											"value": ""
										},
										{
											"key": "cur_page",
											"value": ""
										},
										{
											"key": "dev_info",
											"value": ""
										},
										{
											"key": "os_info",
											"value": ""
										},
										{
											"key": "nw_info",
											"value": ""
										},
										{
											"key": "dev_model",
											"value": ""
										},
										{
											"key": "carrier_type",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "/smartux/getRealRating_ATC6_start_num 가 숫자 format 이 아닐때 Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// 공통",
											"// WAS 정상응답 체크 (200여부)",
											"pm.test(\"[공통]WAS 정상응답 체크 (200여부)\", function () {",
											"    pm.response.to.have.status(200);   ",
											"});",
											"",
											"// 응답속도 체크(0.5초미만) 여부",
											"pm.test(\"[공통]응답속도 체크(0.5초미만)\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(500);",
											"});",
											"",
											"// 1) start_num 가 숫자 format 이 아닐때",
											"pm.test(\"1) start_num 가 숫자 format 이 아닐때\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"5001\");",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Host",
										"value": "programming.fleta.com",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://{{mims}}/smartux/getRealRating?sa_id=T61060140414&stb_mac=8c6d.5044.45dd&app_type=UX&start_num=한글яз01&req_count=2&localareacode=010&app_name=&ui_version=&pre_page=&cur_page=&dev_info=&os_info=&nw_info=&dev_model=&carrier_type=",
									"protocol": "http",
									"host": [
										"{{mims}}"
									],
									"path": [
										"smartux",
										"getRealRating"
									],
									"query": [
										{
											"key": "sa_id",
											"value": "T61060140414"
										},
										{
											"key": "stb_mac",
											"value": "8c6d.5044.45dd"
										},
										{
											"key": "app_type",
											"value": "UX"
										},
										{
											"key": "start_num",
											"value": "한글яз01"
										},
										{
											"key": "req_count",
											"value": "2"
										},
										{
											"key": "localareacode",
											"value": "010"
										},
										{
											"key": "app_name",
											"value": ""
										},
										{
											"key": "ui_version",
											"value": ""
										},
										{
											"key": "pre_page",
											"value": ""
										},
										{
											"key": "cur_page",
											"value": ""
										},
										{
											"key": "dev_info",
											"value": ""
										},
										{
											"key": "os_info",
											"value": ""
										},
										{
											"key": "nw_info",
											"value": ""
										},
										{
											"key": "dev_model",
											"value": ""
										},
										{
											"key": "carrier_type",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "/smartux/getRealRating_ATC12_localareacode 가 미정의된 입력값일때 Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// 공통",
											"// WAS 정상응답 체크 (200여부)",
											"pm.test(\"[공통]WAS 정상응답 체크 (200여부)\", function () {",
											"    pm.response.to.have.status(200);   ",
											"});",
											"",
											"// 응답속도 체크(0.5초미만) 여부",
											"pm.test(\"[공통]응답속도 체크(0.5초미만)\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(500);",
											"});",
											"",
											"// 1) localareacode 가 미정의된 입력값일때\r",
											"pm.test(\"1) localareacode 가 미정의된 입력값일때\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");\r",
											"});\r"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Host",
										"value": "programming.fleta.com",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://{{mims}}/smartux/getRealRating?sa_id=T61060140414&stb_mac=8c6d.5044.45dd&app_type=UX&start_num=-1&req_count=2&localareacode=999&app_name=&ui_version=&pre_page=&cur_page=&dev_info=&os_info=&nw_info=&dev_model=&carrier_type=",
									"protocol": "http",
									"host": [
										"{{mims}}"
									],
									"path": [
										"smartux",
										"getRealRating"
									],
									"query": [
										{
											"key": "sa_id",
											"value": "T61060140414"
										},
										{
											"key": "stb_mac",
											"value": "8c6d.5044.45dd"
										},
										{
											"key": "app_type",
											"value": "UX"
										},
										{
											"key": "start_num",
											"value": "-1"
										},
										{
											"key": "req_count",
											"value": "2"
										},
										{
											"key": "localareacode",
											"value": "999"
										},
										{
											"key": "app_name",
											"value": ""
										},
										{
											"key": "ui_version",
											"value": ""
										},
										{
											"key": "pre_page",
											"value": ""
										},
										{
											"key": "cur_page",
											"value": ""
										},
										{
											"key": "dev_info",
											"value": ""
										},
										{
											"key": "os_info",
											"value": ""
										},
										{
											"key": "nw_info",
											"value": ""
										},
										{
											"key": "dev_model",
											"value": ""
										},
										{
											"key": "carrier_type",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "/smartux/getRealRating_NTC1_일반 가입자_UX_-1,X_1지역(default 지역포함)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// 공통",
											"// WAS 정상응답 체크 (200여부)",
											"pm.test(\"[공통]WAS 정상응답 체크 (200여부)\", function () {",
											"    pm.response.to.have.status(200);   ",
											"});",
											"",
											"// 응답속도 체크(0.5초미만) 여부",
											"pm.test(\"[공통]응답속도 체크(0.5초미만)\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(500);",
											"});",
											"",
											"// STP 에서 EPG 데이터 없음으로 인해 NT 처리함.",
											"",
											"// 1) 가입자(일반/검수) 구분에 따른 응답 확인",
											"pm.test(\"1) 가입자(일반/검수) 구분에 따른 응답 확인(오류미검증)(EPG데이터 없음)\", function () {",
											"    // var jsonData = pm.response.json();",
											"    // pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"    // pm.expect(jsonData.result.message).to.eql(\"성공\");",
											"});",
											"",
											"// 2) 어플타입에 따른 응답 구분",
											"pm.test(\"2) 어플타입에 따른 응답 구분(오류미검증)(EPG데이터 없음)\", function () {",
											"    // var jsonData = pm.response.json();",
											"    // pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"    // pm.expect(jsonData.result.message).to.eql(\"성공\");",
											"});",
											"",
											"// 3) 페이징 확인",
											"var query = {};",
											"pm.request.url.query.all().forEach((param) => { query[param.key] = param.value});",
											"pm.test(\"3) 페이징 확인(오류미검증)(EPG데이터 없음)\", function () {",
											"    // var jsonData = pm.response.json();",
											"    // var recordset = jsonData.result.recordset;",
											"    // var total_count = jsonData.result.total_count;",
											"    ",
											"    // if(query[\"start_num\"] == -1 && query[\"paging_type\"] != \"N\"){",
											"    //     // total 숫자 확인",
											"    //     pm.expect(recordset.length).to.eql(parseInt(total_count));",
											"    //     // total 개수 확인",
											"    //     pm.expect(recordset.length).to.eql(parseInt(total_count));",
											"    //     // 데이터 확인",
											"    //     for(i in recordset){",
											"    //         pm.expect(recordset[i].album_id).to.match(/\\w{15}/);",
											"    //     }",
											"    // }else if(query[\"start_num\"] == 0){",
											"    //     // total 숫자 확인",
											"    //     pm.expect(jsonData.result.total_count).to.match(/\\d/);",
											"    //     // recordset null 확인",
											"    //     pm.expect(recordset).to.null;",
											"    // }else{",
											"    //     let request = pm.request;",
											"    //     // 전체 조회를 위해 파라미터 값 수정",
											"    //     request.url.query[\"reference\"][\"start_num\"][\"value\"] = \"-1\";",
											"    //     request.url.query[\"reference\"][\"paging_type\"][\"value\"] = \"\";",
											"",
											"    //     pm.expect(recordset).to.not.empty;",
											"    //     pm.sendRequest(request, function (err, response) {",
											"    //         let total = response.json().result.recordset;",
											"        ",
											"    //         // 큐 sorting",
											"    //         if(query[\"start_num\"]<0){   // 시계 방향 회전",
											"    //             for(let i=0;i>query[\"start_num\"];i--){",
											"    //                 total.unshift(total.pop());",
											"    //             }",
											"    //         }else{   // 반시계 방향 회전",
											"    //             for(let i=1;i<query[\"start_num\"];i++){",
											"    //                 total.push(total.shift());",
											"    //             }",
											"    //         }",
											"",
											"    //         // 데이터 확인",
											"    //         for(let i in recordset){",
											"    //             // 정보 확인",
											"    //             pm.expect(recordset[i].album_id).to.match(/\\w{15}/);",
											"    //             // 순서 확인",
											"    //             pm.expect(recordset[i].album_id).to.eql(total[0].album_id);",
											"    //             total.push(total.shift());",
											"    //         }",
											"    //     });",
											"    // }",
											"}); ",
											"",
											"// 4) 지역코드 확인",
											"pm.test(\"4) 지역코드 확인(오류미검증)(EPG데이터 없음)\", function () {",
											"    // let jsonData = pm.response.json();",
											"    // var strArray = query[\"localareacode\"].split('||');",
											"",
											"    // recordset = jsonData.result.recordset",
											"    // pm.expect(recordset).to.not.empty;",
											"    // for(i in recordset){",
											"    //     pm.expect(recordset[i].localareacode).to.be.oneOf([\"010\", strArray[0], strArray[1]]);",
											"    // }",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Host",
										"value": "programming.fleta.com",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://{{mims}}/smartux/getRealRating?sa_id=T61060140414&stb_mac=8c6d.5044.45dd&app_type=UX&start_num=-1&req_count=2&localareacode=010&app_name=&ui_version=&pre_page=&cur_page=&dev_info=&os_info=&nw_info=&dev_model=&carrier_type=",
									"protocol": "http",
									"host": [
										"{{mims}}"
									],
									"path": [
										"smartux",
										"getRealRating"
									],
									"query": [
										{
											"key": "sa_id",
											"value": "T61060140414"
										},
										{
											"key": "stb_mac",
											"value": "8c6d.5044.45dd"
										},
										{
											"key": "app_type",
											"value": "UX"
										},
										{
											"key": "start_num",
											"value": "-1"
										},
										{
											"key": "req_count",
											"value": "2"
										},
										{
											"key": "localareacode",
											"value": "010"
										},
										{
											"key": "app_name",
											"value": ""
										},
										{
											"key": "ui_version",
											"value": ""
										},
										{
											"key": "pre_page",
											"value": ""
										},
										{
											"key": "cur_page",
											"value": ""
										},
										{
											"key": "dev_info",
											"value": ""
										},
										{
											"key": "os_info",
											"value": ""
										},
										{
											"key": "nw_info",
											"value": ""
										},
										{
											"key": "dev_model",
											"value": ""
										},
										{
											"key": "carrier_type",
											"value": ""
										}
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"// 공통",
									"",
									"// WAS 정상응답 체크 (200여부)",
									"pm.test(\"[공통]WAS 정상응답 체크 (200여부)\", function () {",
									"    pm.response.to.have.status(200);   ",
									"});",
									"",
									"// 응답속도 체크(0.5초미만) 여부",
									"pm.test(\"[공통]응답속도 체크(0.5초미만)\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(500);",
									"});"
								]
							}
						}
					]
				},
				{
					"name": "getSUXMAlbumList",
					"item": [
						{
							"name": "/smartux/getSUXMAlbumList_NTC19_일반 가입자_UX_0,X,X_01_I20 Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// 공통",
											"// WAS 정상응답 체크 (200여부)",
											"pm.test(\"[공통]WAS 정상응답 체크 (200여부)\", function () {",
											"    pm.response.to.have.status(200);   ",
											"});",
											"",
											"// 응답속도 체크(0.5초미만) 여부",
											"pm.test(\"[공통]응답속도 체크(0.5초미만)\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(500);",
											"});",
											"",
											"// 1) 가입자(일반/검수) 구분에 따른 응답 확인",
											"pm.test(\"1) 가입자(일반/검수) 구분에 따른 응답 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"// 2) 어플타입에 따른 응답 구분",
											"pm.test(\"2) 어플타입에 따른 응답 구분\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"// 3) 페이징 확인",
											"var query = {};",
											"pm.request.url.query.all().forEach((param) => { query[param.key] = param.value});",
											"pm.test(\"3) 페이징 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    var recordset = jsonData.result.recordset;",
											"    var total_count = jsonData.result.total_count;",
											"    ",
											"    if(query[\"start_num\"] == -1 && query[\"paging_type\"] != \"N\"){",
											"        // total 숫자 확인",
											"        pm.expect(recordset.length).to.eql(parseInt(total_count));",
											"        // total 개수 확인",
											"        pm.expect(recordset.length).to.eql(parseInt(total_count));",
											"        // 데이터 확인",
											"        for(i in recordset){",
											"            pm.expect(recordset[i].album_id).to.match(/\\w{15}/);",
											"        }",
											"    }else if(query[\"start_num\"] == 0){",
											"        // total 숫자 확인",
											"        pm.expect(jsonData.result.total_count).to.match(/\\d/);",
											"        // recordset null 확인",
											"        pm.expect(recordset).to.null;",
											"    }else{",
											"        let request = pm.request;",
											"        // 전체 조회를 위해 파라미터 값 수정",
											"        request.url.query[\"reference\"][\"start_num\"][\"value\"] = \"-1\";",
											"        request.url.query[\"reference\"][\"paging_type\"][\"value\"] = \"\";",
											"",
											"        pm.expect(recordset).to.not.empty;",
											"        pm.sendRequest(request, function (err, response) {",
											"            let total = response.json().result.recordset;",
											"        ",
											"            // 큐 sorting",
											"            if(query[\"start_num\"]<0){   // 시계 방향 회전",
											"                for(let i=0;i>query[\"start_num\"];i--){",
											"                    total.unshift(total.pop());",
											"                }",
											"            }else{   // 반시계 방향 회전",
											"                for(let i=1;i<query[\"start_num\"];i++){",
											"                    total.push(total.shift());",
											"                }",
											"            }",
											"",
											"            // 데이터 확인",
											"            for(let i in recordset){",
											"                // 정보 확인",
											"                pm.expect(recordset[i].album_id).to.match(/\\w{15}/);",
											"                // 순서 확인",
											"                pm.expect(recordset[i].album_id).to.eql(total[0].album_id);",
											"                total.push(total.shift());",
											"            }",
											"        });",
											"    }",
											"}); ",
											"",
											"// 4) 카테고리 타입 확인",
											"pm.test(\"4) 카테고리 타입 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"// 5) 망타입 확인",
											"pm.test(\"5) 망타입 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    var recordset = jsonData.result.recordset;",
											"    ",
											"    if(query[\"net_typ\"] == \"01\" || query[\"net_typ\"] == \"02\"){",
											"        for(i in recordset){",
											"            pm.expect(recordset[i].is_fh).to.oneOf([\"Y\",\"N\"]);",
											"        }",
											"    }else{",
											"        for(i in recordset){",
											"            pm.expect(recordset[i].is_fh).to.eql(\"N\");",
											"        }",
											"    }",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Host",
										"value": "programming.fleta.com",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://{{mims}}/smartux/getSUXMAlbumList?sa_id=T61060140414&stb_mac=8c6d.5044.45dd&app_type=UX&start_num=0&req_count=2&paging_type=&schedule_code=4&net_typ=01&category_gb=I20&app_name=&ui_version=&pre_page=&cur_page=&dev_info=&os_info=&nw_info=&dev_model=&carrier_type=",
									"protocol": "http",
									"host": [
										"{{mims}}"
									],
									"path": [
										"smartux",
										"getSUXMAlbumList"
									],
									"query": [
										{
											"key": "sa_id",
											"value": "T61060140414"
										},
										{
											"key": "stb_mac",
											"value": "8c6d.5044.45dd"
										},
										{
											"key": "app_type",
											"value": "UX"
										},
										{
											"key": "start_num",
											"value": "0"
										},
										{
											"key": "req_count",
											"value": "2"
										},
										{
											"key": "paging_type",
											"value": ""
										},
										{
											"key": "schedule_code",
											"value": "4"
										},
										{
											"key": "net_typ",
											"value": "01"
										},
										{
											"key": "category_gb",
											"value": "I20"
										},
										{
											"key": "app_name",
											"value": ""
										},
										{
											"key": "ui_version",
											"value": ""
										},
										{
											"key": "pre_page",
											"value": ""
										},
										{
											"key": "cur_page",
											"value": ""
										},
										{
											"key": "dev_info",
											"value": ""
										},
										{
											"key": "os_info",
											"value": ""
										},
										{
											"key": "nw_info",
											"value": ""
										},
										{
											"key": "dev_model",
											"value": ""
										},
										{
											"key": "carrier_type",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "/smartux/getSUXMAlbumList_NTC130_검수 가입자_UX_0,X,X_02_I20 Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// 공통",
											"// WAS 정상응답 체크 (200여부)",
											"pm.test(\"[공통]WAS 정상응답 체크 (200여부)\", function () {",
											"    pm.response.to.have.status(200);   ",
											"});",
											"",
											"// 응답속도 체크(0.5초미만) 여부",
											"pm.test(\"[공통]응답속도 체크(0.5초미만)\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(500);",
											"});",
											"",
											"// 1) 가입자(일반/검수) 구분에 따른 응답 확인",
											"pm.test(\"1) 가입자(일반/검수) 구분에 따른 응답 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"// 2) 어플타입에 따른 응답 구분",
											"pm.test(\"2) 어플타입에 따른 응답 구분\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"// 3) 페이징 확인",
											"var query = {};",
											"pm.request.url.query.all().forEach((param) => { query[param.key] = param.value});",
											"pm.test(\"3) 페이징 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    var recordset = jsonData.result.recordset;",
											"    var total_count = jsonData.result.total_count;",
											"    ",
											"    if(query[\"start_num\"] == -1 && query[\"paging_type\"] != \"N\"){",
											"        // total 숫자 확인",
											"        pm.expect(recordset.length).to.eql(parseInt(total_count));",
											"        // total 개수 확인",
											"        pm.expect(recordset.length).to.eql(parseInt(total_count));",
											"        // 데이터 확인",
											"        for(i in recordset){",
											"            pm.expect(recordset[i].album_id).to.match(/\\w{15}/);",
											"        }",
											"    }else if(query[\"start_num\"] == 0){",
											"        // total 숫자 확인",
											"        pm.expect(jsonData.result.total_count).to.match(/\\d/);",
											"        // recordset null 확인",
											"        pm.expect(recordset).to.null;",
											"    }else{",
											"        let request = pm.request;",
											"        // 전체 조회를 위해 파라미터 값 수정",
											"        request.url.query[\"reference\"][\"start_num\"][\"value\"] = \"-1\";",
											"        request.url.query[\"reference\"][\"paging_type\"][\"value\"] = \"\";",
											"",
											"        pm.expect(recordset).to.not.empty;",
											"        pm.sendRequest(request, function (err, response) {",
											"            let total = response.json().result.recordset;",
											"        ",
											"            // 큐 sorting",
											"            if(query[\"start_num\"]<0){   // 시계 방향 회전",
											"                for(let i=0;i>query[\"start_num\"];i--){",
											"                    total.unshift(total.pop());",
											"                }",
											"            }else{   // 반시계 방향 회전",
											"                for(let i=1;i<query[\"start_num\"];i++){",
											"                    total.push(total.shift());",
											"                }",
											"            }",
											"",
											"            // 데이터 확인",
											"            for(let i in recordset){",
											"                // 정보 확인",
											"                pm.expect(recordset[i].album_id).to.match(/\\w{15}/);",
											"                // 순서 확인",
											"                pm.expect(recordset[i].album_id).to.eql(total[0].album_id);",
											"                total.push(total.shift());",
											"            }",
											"        });",
											"    }",
											"}); ",
											"",
											"// 4) 카테고리 타입 확인",
											"pm.test(\"4) 카테고리 타입 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"// 5) 망타입 확인",
											"pm.test(\"5) 망타입 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    var recordset = jsonData.result.recordset;",
											"    ",
											"    if(query[\"net_typ\"] == \"01\" || query[\"net_typ\"] == \"02\"){",
											"        for(i in recordset){",
											"            pm.expect(recordset[i].is_fh).to.oneOf([\"Y\",\"N\"]);",
											"        }",
											"    }else{",
											"        for(i in recordset){",
											"            pm.expect(recordset[i].is_fh).to.eql(\"N\");",
											"        }",
											"    }",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Host",
										"value": "programming.fleta.com",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://{{mims}}/smartux/getSUXMAlbumList?sa_id=T61060140414&stb_mac=v000.3529.4486&app_type=UX&start_num=0&req_count=2&paging_type=&schedule_code=4&net_typ=02&category_gb=I20&app_name=&ui_version=&pre_page=&cur_page=&dev_info=&os_info=&nw_info=&dev_model=&carrier_type=",
									"protocol": "http",
									"host": [
										"{{mims}}"
									],
									"path": [
										"smartux",
										"getSUXMAlbumList"
									],
									"query": [
										{
											"key": "sa_id",
											"value": "T61060140414"
										},
										{
											"key": "stb_mac",
											"value": "v000.3529.4486"
										},
										{
											"key": "app_type",
											"value": "UX"
										},
										{
											"key": "start_num",
											"value": "0"
										},
										{
											"key": "req_count",
											"value": "2"
										},
										{
											"key": "paging_type",
											"value": ""
										},
										{
											"key": "schedule_code",
											"value": "4"
										},
										{
											"key": "net_typ",
											"value": "02"
										},
										{
											"key": "category_gb",
											"value": "I20"
										},
										{
											"key": "app_name",
											"value": ""
										},
										{
											"key": "ui_version",
											"value": ""
										},
										{
											"key": "pre_page",
											"value": ""
										},
										{
											"key": "cur_page",
											"value": ""
										},
										{
											"key": "dev_info",
											"value": ""
										},
										{
											"key": "os_info",
											"value": ""
										},
										{
											"key": "nw_info",
											"value": ""
										},
										{
											"key": "dev_model",
											"value": ""
										},
										{
											"key": "carrier_type",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "/smartux/getSUXMAlbumList_NTC158_검수 가입자_SMA_-1,X,N_02_null Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// 공통",
											"// WAS 정상응답 체크 (200여부)",
											"pm.test(\"[공통]WAS 정상응답 체크 (200여부)\", function () {",
											"    pm.response.to.have.status(200);   ",
											"});",
											"",
											"// 응답속도 체크(0.5초미만) 여부",
											"pm.test(\"[공통]응답속도 체크(0.5초미만)\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(500);",
											"});",
											"",
											"// 1) 가입자(일반/검수) 구분에 따른 응답 확인",
											"pm.test(\"1) 가입자(일반/검수) 구분에 따른 응답 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"// 2) 어플타입에 따른 응답 구분",
											"pm.test(\"2) 어플타입에 따른 응답 구분\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"// 3) 페이징 확인",
											"var query = {};",
											"pm.request.url.query.all().forEach((param) => { query[param.key] = param.value});",
											"pm.test(\"3) 페이징 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    var recordset = jsonData.result.recordset;",
											"    var total_count = jsonData.result.total_count;",
											"    ",
											"    if(query[\"start_num\"] == -1 && query[\"paging_type\"] != \"N\"){",
											"        // total 숫자 확인",
											"        pm.expect(recordset.length).to.eql(parseInt(total_count));",
											"        // total 개수 확인",
											"        pm.expect(recordset.length).to.eql(parseInt(total_count));",
											"        // 데이터 확인",
											"        for(i in recordset){",
											"            pm.expect(recordset[i].album_id).to.match(/\\w{15}/);",
											"        }",
											"    }else if(query[\"start_num\"] == 0){",
											"        // total 숫자 확인",
											"        pm.expect(jsonData.result.total_count).to.match(/\\d/);",
											"        // recordset null 확인",
											"        pm.expect(recordset).to.null;",
											"    }else{",
											"        let request = pm.request;",
											"        // 전체 조회를 위해 파라미터 값 수정",
											"        request.url.query[\"reference\"][\"start_num\"][\"value\"] = \"-1\";",
											"        request.url.query[\"reference\"][\"paging_type\"][\"value\"] = \"\";",
											"",
											"        pm.expect(recordset).to.not.empty;",
											"        pm.sendRequest(request, function (err, response) {",
											"            let total = response.json().result.recordset;",
											"        ",
											"            // 큐 sorting",
											"            if(query[\"start_num\"]<0){   // 시계 방향 회전",
											"                for(let i=0;i>query[\"start_num\"];i--){",
											"                    total.unshift(total.pop());",
											"                }",
											"            }else{   // 반시계 방향 회전",
											"                for(let i=1;i<query[\"start_num\"];i++){",
											"                    total.push(total.shift());",
											"                }",
											"            }",
											"",
											"            // 데이터 확인",
											"            for(let i in recordset){",
											"                // 정보 확인",
											"                pm.expect(recordset[i].album_id).to.match(/\\w{15}/);",
											"                // 순서 확인",
											"                pm.expect(recordset[i].album_id).to.eql(total[0].album_id);",
											"                total.push(total.shift());",
											"            }",
											"        });",
											"    }",
											"}); ",
											"",
											"// 4) 카테고리 타입 확인",
											"pm.test(\"4) 카테고리 타입 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"// 5) 망타입 확인",
											"pm.test(\"5) 망타입 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    var recordset = jsonData.result.recordset;",
											"    ",
											"    if(query[\"net_typ\"] == \"01\" || query[\"net_typ\"] == \"02\"){",
											"        for(i in recordset){",
											"            pm.expect(recordset[i].is_fh).to.oneOf([\"Y\",\"N\"]);",
											"        }",
											"    }else{",
											"        for(i in recordset){",
											"            pm.expect(recordset[i].is_fh).to.eql(\"N\");",
											"        }",
											"    }",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Host",
										"value": "programming.fleta.com",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://{{mims}}/smartux/getSUXMAlbumList?sa_id=T61060140414&stb_mac=v000.3529.4486&app_type=SMA&start_num=-1&req_count=2&paging_type=N&schedule_code=4&net_typ=02&category_gb=&app_name=&ui_version=&pre_page=&cur_page=&dev_info=&os_info=&nw_info=&dev_model=&carrier_type=",
									"protocol": "http",
									"host": [
										"{{mims}}"
									],
									"path": [
										"smartux",
										"getSUXMAlbumList"
									],
									"query": [
										{
											"key": "sa_id",
											"value": "T61060140414"
										},
										{
											"key": "stb_mac",
											"value": "v000.3529.4486"
										},
										{
											"key": "app_type",
											"value": "SMA"
										},
										{
											"key": "start_num",
											"value": "-1"
										},
										{
											"key": "req_count",
											"value": "2"
										},
										{
											"key": "paging_type",
											"value": "N"
										},
										{
											"key": "schedule_code",
											"value": "4"
										},
										{
											"key": "net_typ",
											"value": "02"
										},
										{
											"key": "category_gb",
											"value": ""
										},
										{
											"key": "app_name",
											"value": ""
										},
										{
											"key": "ui_version",
											"value": ""
										},
										{
											"key": "pre_page",
											"value": ""
										},
										{
											"key": "cur_page",
											"value": ""
										},
										{
											"key": "dev_info",
											"value": ""
										},
										{
											"key": "os_info",
											"value": ""
										},
										{
											"key": "nw_info",
											"value": ""
										},
										{
											"key": "dev_model",
											"value": ""
										},
										{
											"key": "carrier_type",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "/smartux/getSUXMAlbumList_NTC9_일반 가입자_UX_-1,X,null_31_I30 Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// 공통",
											"// WAS 정상응답 체크 (200여부)",
											"pm.test(\"[공통]WAS 정상응답 체크 (200여부)\", function () {",
											"    pm.response.to.have.status(200);   ",
											"});",
											"",
											"// 응답속도 체크(0.5초미만) 여부",
											"pm.test(\"[공통]응답속도 체크(0.5초미만)\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(500);",
											"});",
											"",
											"// 1) 가입자(일반/검수) 구분에 따른 응답 확인",
											"pm.test(\"1) 가입자(일반/검수) 구분에 따른 응답 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"// 2) 어플타입에 따른 응답 구분",
											"pm.test(\"2) 어플타입에 따른 응답 구분\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"// 3) 페이징 확인",
											"var query = {};",
											"pm.request.url.query.all().forEach((param) => { query[param.key] = param.value});",
											"pm.test(\"3) 페이징 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    var recordset = jsonData.result.recordset;",
											"    var total_count = jsonData.result.total_count;",
											"    ",
											"    if(query[\"start_num\"] == -1 && query[\"paging_type\"] != \"N\"){",
											"        // total 숫자 확인",
											"        pm.expect(recordset.length).to.eql(parseInt(total_count));",
											"        // total 개수 확인",
											"        pm.expect(recordset.length).to.eql(parseInt(total_count));",
											"        // 데이터 확인",
											"        for(i in recordset){",
											"            pm.expect(recordset[i].album_id).to.match(/\\w{15}/);",
											"        }",
											"    }else if(query[\"start_num\"] == 0){",
											"        // total 숫자 확인",
											"        pm.expect(jsonData.result.total_count).to.match(/\\d/);",
											"        // recordset null 확인",
											"        pm.expect(recordset).to.null;",
											"    }else{",
											"        let request = pm.request;",
											"        // 전체 조회를 위해 파라미터 값 수정",
											"        request.url.query[\"reference\"][\"start_num\"][\"value\"] = \"-1\";",
											"        request.url.query[\"reference\"][\"paging_type\"][\"value\"] = \"\";",
											"",
											"        pm.expect(recordset).to.not.empty;",
											"        pm.sendRequest(request, function (err, response) {",
											"            let total = response.json().result.recordset;",
											"        ",
											"            // 큐 sorting",
											"            if(query[\"start_num\"]<0){   // 시계 방향 회전",
											"                for(let i=0;i>query[\"start_num\"];i--){",
											"                    total.unshift(total.pop());",
											"                }",
											"            }else{   // 반시계 방향 회전",
											"                for(let i=1;i<query[\"start_num\"];i++){",
											"                    total.push(total.shift());",
											"                }",
											"            }",
											"",
											"            // 데이터 확인",
											"            for(let i in recordset){",
											"                // 정보 확인",
											"                pm.expect(recordset[i].album_id).to.match(/\\w{15}/);",
											"                // 순서 확인",
											"                pm.expect(recordset[i].album_id).to.eql(total[0].album_id);",
											"                total.push(total.shift());",
											"            }",
											"        });",
											"    }",
											"}); ",
											"",
											"// 4) 카테고리 타입 확인",
											"pm.test(\"4) 카테고리 타입 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"// 5) 망타입 확인",
											"pm.test(\"5) 망타입 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    var recordset = jsonData.result.recordset;",
											"    ",
											"    if(query[\"net_typ\"] == \"01\" || query[\"net_typ\"] == \"02\"){",
											"        for(i in recordset){",
											"            pm.expect(recordset[i].is_fh).to.oneOf([\"Y\",\"N\"]);",
											"        }",
											"    }else{",
											"        for(i in recordset){",
											"            pm.expect(recordset[i].is_fh).to.eql(\"N\");",
											"        }",
											"    }",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Host",
										"value": "programming.fleta.com",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://{{mims}}/smartux/getSUXMAlbumList?sa_id=T61060140414&stb_mac=8c6d.5044.45dd&app_type=UX&start_num=-1&req_count=2&paging_type=&schedule_code=473&net_typ=31&category_gb=I30&app_name=&ui_version=&pre_page=&cur_page=&dev_info=&os_info=&nw_info=&dev_model=&carrier_type=",
									"protocol": "http",
									"host": [
										"{{mims}}"
									],
									"path": [
										"smartux",
										"getSUXMAlbumList"
									],
									"query": [
										{
											"key": "sa_id",
											"value": "T61060140414"
										},
										{
											"key": "stb_mac",
											"value": "8c6d.5044.45dd"
										},
										{
											"key": "app_type",
											"value": "UX"
										},
										{
											"key": "start_num",
											"value": "-1"
										},
										{
											"key": "req_count",
											"value": "2"
										},
										{
											"key": "paging_type",
											"value": ""
										},
										{
											"key": "schedule_code",
											"value": "473"
										},
										{
											"key": "net_typ",
											"value": "31"
										},
										{
											"key": "category_gb",
											"value": "I30"
										},
										{
											"key": "app_name",
											"value": ""
										},
										{
											"key": "ui_version",
											"value": ""
										},
										{
											"key": "pre_page",
											"value": ""
										},
										{
											"key": "cur_page",
											"value": ""
										},
										{
											"key": "dev_info",
											"value": ""
										},
										{
											"key": "os_info",
											"value": ""
										},
										{
											"key": "nw_info",
											"value": ""
										},
										{
											"key": "dev_model",
											"value": ""
										},
										{
											"key": "carrier_type",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "/smartux/getSUXMAlbumList_NTC43_일반 가입자_SMA_-1,X,null_31_I20 Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// 공통",
											"// WAS 정상응답 체크 (200여부)",
											"pm.test(\"[공통]WAS 정상응답 체크 (200여부)\", function () {",
											"    pm.response.to.have.status(200);   ",
											"});",
											"",
											"// 응답속도 체크(0.5초미만) 여부",
											"pm.test(\"[공통]응답속도 체크(0.5초미만)\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(500);",
											"});",
											"",
											"// 1) 가입자(일반/검수) 구분에 따른 응답 확인",
											"pm.test(\"1) 가입자(일반/검수) 구분에 따른 응답 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"// 2) 어플타입에 따른 응답 구분",
											"pm.test(\"2) 어플타입에 따른 응답 구분\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"// 3) 페이징 확인",
											"var query = {};",
											"pm.request.url.query.all().forEach((param) => { query[param.key] = param.value});",
											"pm.test(\"3) 페이징 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    var recordset = jsonData.result.recordset;",
											"    var total_count = jsonData.result.total_count;",
											"    ",
											"    if(query[\"start_num\"] == -1 && query[\"paging_type\"] != \"N\"){",
											"        // total 숫자 확인",
											"        pm.expect(recordset.length).to.eql(parseInt(total_count));",
											"        // total 개수 확인",
											"        pm.expect(recordset.length).to.eql(parseInt(total_count));",
											"        // 데이터 확인",
											"        for(i in recordset){",
											"            pm.expect(recordset[i].album_id).to.match(/\\w{15}/);",
											"        }",
											"    }else if(query[\"start_num\"] == 0){",
											"        // total 숫자 확인",
											"        pm.expect(jsonData.result.total_count).to.match(/\\d/);",
											"        // recordset null 확인",
											"        pm.expect(recordset).to.null;",
											"    }else{",
											"        let request = pm.request;",
											"        // 전체 조회를 위해 파라미터 값 수정",
											"        request.url.query[\"reference\"][\"start_num\"][\"value\"] = \"-1\";",
											"        request.url.query[\"reference\"][\"paging_type\"][\"value\"] = \"\";",
											"",
											"        pm.expect(recordset).to.not.empty;",
											"        pm.sendRequest(request, function (err, response) {",
											"            let total = response.json().result.recordset;",
											"        ",
											"            // 큐 sorting",
											"            if(query[\"start_num\"]<0){   // 시계 방향 회전",
											"                for(let i=0;i>query[\"start_num\"];i--){",
											"                    total.unshift(total.pop());",
											"                }",
											"            }else{   // 반시계 방향 회전",
											"                for(let i=1;i<query[\"start_num\"];i++){",
											"                    total.push(total.shift());",
											"                }",
											"            }",
											"",
											"            // 데이터 확인",
											"            for(let i in recordset){",
											"                // 정보 확인",
											"                pm.expect(recordset[i].album_id).to.match(/\\w{15}/);",
											"                // 순서 확인",
											"                pm.expect(recordset[i].album_id).to.eql(total[0].album_id);",
											"                total.push(total.shift());",
											"            }",
											"        });",
											"    }",
											"}); ",
											"",
											"// 4) 카테고리 타입 확인",
											"pm.test(\"4) 카테고리 타입 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"// 5) 망타입 확인",
											"pm.test(\"5) 망타입 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    var recordset = jsonData.result.recordset;",
											"    ",
											"    if(query[\"net_typ\"] == \"01\" || query[\"net_typ\"] == \"02\"){",
											"        for(i in recordset){",
											"            pm.expect(recordset[i].is_fh).to.oneOf([\"Y\",\"N\"]);",
											"        }",
											"    }else{",
											"        for(i in recordset){",
											"            pm.expect(recordset[i].is_fh).to.eql(\"N\");",
											"        }",
											"    }",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Host",
										"value": "programming.fleta.com",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://{{mims}}/smartux/getSUXMAlbumList?sa_id=T61060140414&stb_mac=8c6d.5044.45dd&app_type=SMA&start_num=-1&req_count=2&paging_type=&schedule_code=4&net_typ=31&category_gb=I20&app_name=&ui_version=&pre_page=&cur_page=&dev_info=&os_info=&nw_info=&dev_model=&carrier_type=",
									"protocol": "http",
									"host": [
										"{{mims}}"
									],
									"path": [
										"smartux",
										"getSUXMAlbumList"
									],
									"query": [
										{
											"key": "sa_id",
											"value": "T61060140414"
										},
										{
											"key": "stb_mac",
											"value": "8c6d.5044.45dd"
										},
										{
											"key": "app_type",
											"value": "SMA"
										},
										{
											"key": "start_num",
											"value": "-1"
										},
										{
											"key": "req_count",
											"value": "2"
										},
										{
											"key": "paging_type",
											"value": ""
										},
										{
											"key": "schedule_code",
											"value": "4"
										},
										{
											"key": "net_typ",
											"value": "31"
										},
										{
											"key": "category_gb",
											"value": "I20"
										},
										{
											"key": "app_name",
											"value": ""
										},
										{
											"key": "ui_version",
											"value": ""
										},
										{
											"key": "pre_page",
											"value": ""
										},
										{
											"key": "cur_page",
											"value": ""
										},
										{
											"key": "dev_info",
											"value": ""
										},
										{
											"key": "os_info",
											"value": ""
										},
										{
											"key": "nw_info",
											"value": ""
										},
										{
											"key": "dev_model",
											"value": ""
										},
										{
											"key": "carrier_type",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "/smartux/getSUXMAlbumList_NTC71_일반 가입자_SMA_1,X,X_31_null Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// 공통",
											"// WAS 정상응답 체크 (200여부)",
											"pm.test(\"[공통]WAS 정상응답 체크 (200여부)\", function () {",
											"    pm.response.to.have.status(200);   ",
											"});",
											"",
											"// 응답속도 체크(0.5초미만) 여부",
											"pm.test(\"[공통]응답속도 체크(0.5초미만)\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(500);",
											"});",
											"",
											"// 1) 가입자(일반/검수) 구분에 따른 응답 확인",
											"pm.test(\"1) 가입자(일반/검수) 구분에 따른 응답 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"// 2) 어플타입에 따른 응답 구분",
											"pm.test(\"2) 어플타입에 따른 응답 구분\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"// 3) 페이징 확인",
											"var query = {};",
											"pm.request.url.query.all().forEach((param) => { query[param.key] = param.value});",
											"pm.test(\"3) 페이징 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    var recordset = jsonData.result.recordset;",
											"    var total_count = jsonData.result.total_count;",
											"    ",
											"    if(query[\"start_num\"] == -1 && query[\"paging_type\"] != \"N\"){",
											"        // total 숫자 확인",
											"        pm.expect(recordset.length).to.eql(parseInt(total_count));",
											"        // total 개수 확인",
											"        pm.expect(recordset.length).to.eql(parseInt(total_count));",
											"        // 데이터 확인",
											"        for(i in recordset){",
											"            pm.expect(recordset[i].album_id).to.match(/\\w{15}/);",
											"        }",
											"    }else if(query[\"start_num\"] == 0){",
											"        // total 숫자 확인",
											"        pm.expect(jsonData.result.total_count).to.match(/\\d/);",
											"        // recordset null 확인",
											"        pm.expect(recordset).to.null;",
											"    }else{",
											"        let request = pm.request;",
											"        // 전체 조회를 위해 파라미터 값 수정",
											"        request.url.query[\"reference\"][\"start_num\"][\"value\"] = \"-1\";",
											"        request.url.query[\"reference\"][\"paging_type\"][\"value\"] = \"\";",
											"",
											"        pm.expect(recordset).to.not.empty;",
											"        pm.sendRequest(request, function (err, response) {",
											"            let total = response.json().result.recordset;",
											"        ",
											"            // 큐 sorting",
											"            if(query[\"start_num\"]<0){   // 시계 방향 회전",
											"                for(let i=0;i>query[\"start_num\"];i--){",
											"                    total.unshift(total.pop());",
											"                }",
											"            }else{   // 반시계 방향 회전",
											"                for(let i=1;i<query[\"start_num\"];i++){",
											"                    total.push(total.shift());",
											"                }",
											"            }",
											"",
											"            // 데이터 확인",
											"            for(let i in recordset){",
											"                // 정보 확인",
											"                pm.expect(recordset[i].album_id).to.match(/\\w{15}/);",
											"                // 순서 확인",
											"                pm.expect(recordset[i].album_id).to.eql(total[0].album_id);",
											"                total.push(total.shift());",
											"            }",
											"        });",
											"    }",
											"}); ",
											"",
											"// 4) 카테고리 타입 확인",
											"pm.test(\"4) 카테고리 타입 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"// 5) 망타입 확인",
											"pm.test(\"5) 망타입 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    var recordset = jsonData.result.recordset;",
											"    ",
											"    if(query[\"net_typ\"] == \"01\" || query[\"net_typ\"] == \"02\"){",
											"        for(i in recordset){",
											"            pm.expect(recordset[i].is_fh).to.oneOf([\"Y\",\"N\"]);",
											"        }",
											"    }else{",
											"        for(i in recordset){",
											"            pm.expect(recordset[i].is_fh).to.eql(\"N\");",
											"        }",
											"    }",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Host",
										"value": "programming.fleta.com",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://{{mims}}/smartux/getSUXMAlbumList?sa_id=T61060140414&stb_mac=8c6d.5044.45dd&app_type=SMA&start_num=1&req_count=2&paging_type=&schedule_code=4&net_typ=31&category_gb=&app_name=&ui_version=&pre_page=&cur_page=&dev_info=&os_info=&nw_info=&dev_model=&carrier_type=",
									"protocol": "http",
									"host": [
										"{{mims}}"
									],
									"path": [
										"smartux",
										"getSUXMAlbumList"
									],
									"query": [
										{
											"key": "sa_id",
											"value": "T61060140414"
										},
										{
											"key": "stb_mac",
											"value": "8c6d.5044.45dd"
										},
										{
											"key": "app_type",
											"value": "SMA"
										},
										{
											"key": "start_num",
											"value": "1"
										},
										{
											"key": "req_count",
											"value": "2"
										},
										{
											"key": "paging_type",
											"value": ""
										},
										{
											"key": "schedule_code",
											"value": "4"
										},
										{
											"key": "net_typ",
											"value": "31"
										},
										{
											"key": "category_gb",
											"value": ""
										},
										{
											"key": "app_name",
											"value": ""
										},
										{
											"key": "ui_version",
											"value": ""
										},
										{
											"key": "pre_page",
											"value": ""
										},
										{
											"key": "cur_page",
											"value": ""
										},
										{
											"key": "dev_info",
											"value": ""
										},
										{
											"key": "os_info",
											"value": ""
										},
										{
											"key": "nw_info",
											"value": ""
										},
										{
											"key": "dev_model",
											"value": ""
										},
										{
											"key": "carrier_type",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "/smartux/getSUXMAlbumList_NTC76_일반 가입자_SUSA_-1,X,null_02_I20 Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// 공통",
											"// WAS 정상응답 체크 (200여부)",
											"pm.test(\"[공통]WAS 정상응답 체크 (200여부)\", function () {",
											"    pm.response.to.have.status(200);   ",
											"});",
											"",
											"// 응답속도 체크(0.5초미만) 여부",
											"pm.test(\"[공통]응답속도 체크(0.5초미만)\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(500);",
											"});",
											"",
											"// 1) 가입자(일반/검수) 구분에 따른 응답 확인",
											"pm.test(\"1) 가입자(일반/검수) 구분에 따른 응답 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"// 2) 어플타입에 따른 응답 구분",
											"pm.test(\"2) 어플타입에 따른 응답 구분\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"// 3) 페이징 확인",
											"var query = {};",
											"pm.request.url.query.all().forEach((param) => { query[param.key] = param.value});",
											"pm.test(\"3) 페이징 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    var recordset = jsonData.result.recordset;",
											"    var total_count = jsonData.result.total_count;",
											"    ",
											"    if(query[\"start_num\"] == -1 && query[\"paging_type\"] != \"N\"){",
											"        // total 숫자 확인",
											"        pm.expect(recordset.length).to.eql(parseInt(total_count));",
											"        // total 개수 확인",
											"        pm.expect(recordset.length).to.eql(parseInt(total_count));",
											"        // 데이터 확인",
											"        for(i in recordset){",
											"            pm.expect(recordset[i].album_id).to.match(/\\w{15}/);",
											"        }",
											"    }else if(query[\"start_num\"] == 0){",
											"        // total 숫자 확인",
											"        pm.expect(jsonData.result.total_count).to.match(/\\d/);",
											"        // recordset null 확인",
											"        pm.expect(recordset).to.null;",
											"    }else{",
											"        let request = pm.request;",
											"        // 전체 조회를 위해 파라미터 값 수정",
											"        request.url.query[\"reference\"][\"start_num\"][\"value\"] = \"-1\";",
											"        request.url.query[\"reference\"][\"paging_type\"][\"value\"] = \"\";",
											"",
											"        pm.expect(recordset).to.not.empty;",
											"        pm.sendRequest(request, function (err, response) {",
											"            let total = response.json().result.recordset;",
											"        ",
											"            // 큐 sorting",
											"            if(query[\"start_num\"]<0){   // 시계 방향 회전",
											"                for(let i=0;i>query[\"start_num\"];i--){",
											"                    total.unshift(total.pop());",
											"                }",
											"            }else{   // 반시계 방향 회전",
											"                for(let i=1;i<query[\"start_num\"];i++){",
											"                    total.push(total.shift());",
											"                }",
											"            }",
											"",
											"            // 데이터 확인",
											"            for(let i in recordset){",
											"                // 정보 확인",
											"                pm.expect(recordset[i].album_id).to.match(/\\w{15}/);",
											"                // 순서 확인",
											"                pm.expect(recordset[i].album_id).to.eql(total[0].album_id);",
											"                total.push(total.shift());",
											"            }",
											"        });",
											"    }",
											"}); ",
											"",
											"// 4) 카테고리 타입 확인",
											"pm.test(\"4) 카테고리 타입 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"// 5) 망타입 확인",
											"pm.test(\"5) 망타입 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    var recordset = jsonData.result.recordset;",
											"    ",
											"    if(query[\"net_typ\"] == \"01\" || query[\"net_typ\"] == \"02\"){",
											"        for(i in recordset){",
											"            pm.expect(recordset[i].is_fh).to.oneOf([\"Y\",\"N\"]);",
											"        }",
											"    }else{",
											"        for(i in recordset){",
											"            pm.expect(recordset[i].is_fh).to.eql(\"N\");",
											"        }",
											"    }",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Host",
										"value": "programming.fleta.com",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://{{mims}}/smartux/getSUXMAlbumList?sa_id=T61060140414&stb_mac=8c6d.5044.45dd&app_type=SUSA&start_num=-1&req_count=2&paging_type=&schedule_code=4&net_typ=02&category_gb=I20&app_name=&ui_version=&pre_page=&cur_page=&dev_info=&os_info=&nw_info=&dev_model=&carrier_type=",
									"protocol": "http",
									"host": [
										"{{mims}}"
									],
									"path": [
										"smartux",
										"getSUXMAlbumList"
									],
									"query": [
										{
											"key": "sa_id",
											"value": "T61060140414"
										},
										{
											"key": "stb_mac",
											"value": "8c6d.5044.45dd"
										},
										{
											"key": "app_type",
											"value": "SUSA"
										},
										{
											"key": "start_num",
											"value": "-1"
										},
										{
											"key": "req_count",
											"value": "2"
										},
										{
											"key": "paging_type",
											"value": ""
										},
										{
											"key": "schedule_code",
											"value": "4"
										},
										{
											"key": "net_typ",
											"value": "02"
										},
										{
											"key": "category_gb",
											"value": "I20"
										},
										{
											"key": "app_name",
											"value": ""
										},
										{
											"key": "ui_version",
											"value": ""
										},
										{
											"key": "pre_page",
											"value": ""
										},
										{
											"key": "cur_page",
											"value": ""
										},
										{
											"key": "dev_info",
											"value": ""
										},
										{
											"key": "os_info",
											"value": ""
										},
										{
											"key": "nw_info",
											"value": ""
										},
										{
											"key": "dev_model",
											"value": ""
										},
										{
											"key": "carrier_type",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "/smartux/getSUXMAlbumList_NTC75_일반 가입자_SUSA_-1,X,null_01_I30 Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// 공통",
											"// WAS 정상응답 체크 (200여부)",
											"pm.test(\"[공통]WAS 정상응답 체크 (200여부)\", function () {",
											"    pm.response.to.have.status(200);   ",
											"});",
											"",
											"// 응답속도 체크(0.5초미만) 여부",
											"pm.test(\"[공통]응답속도 체크(0.5초미만)\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(500);",
											"});",
											"",
											"// 1) 가입자(일반/검수) 구분에 따른 응답 확인",
											"pm.test(\"1) 가입자(일반/검수) 구분에 따른 응답 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"// 2) 어플타입에 따른 응답 구분",
											"pm.test(\"2) 어플타입에 따른 응답 구분\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"// 3) 페이징 확인",
											"var query = {};",
											"pm.request.url.query.all().forEach((param) => { query[param.key] = param.value});",
											"pm.test(\"3) 페이징 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    var recordset = jsonData.result.recordset;",
											"    var total_count = jsonData.result.total_count;",
											"    ",
											"    if(query[\"start_num\"] == -1 && query[\"paging_type\"] != \"N\"){",
											"        // total 숫자 확인",
											"        pm.expect(recordset.length).to.eql(parseInt(total_count));",
											"        // total 개수 확인",
											"        pm.expect(recordset.length).to.eql(parseInt(total_count));",
											"        // 데이터 확인",
											"        for(i in recordset){",
											"            pm.expect(recordset[i].album_id).to.match(/\\w{15}/);",
											"        }",
											"    }else if(query[\"start_num\"] == 0){",
											"        // total 숫자 확인",
											"        pm.expect(jsonData.result.total_count).to.match(/\\d/);",
											"        // recordset null 확인",
											"        pm.expect(recordset).to.null;",
											"    }else{",
											"        let request = pm.request;",
											"        // 전체 조회를 위해 파라미터 값 수정",
											"        request.url.query[\"reference\"][\"start_num\"][\"value\"] = \"-1\";",
											"        request.url.query[\"reference\"][\"paging_type\"][\"value\"] = \"\";",
											"",
											"        pm.expect(recordset).to.not.empty;",
											"        pm.sendRequest(request, function (err, response) {",
											"            let total = response.json().result.recordset;",
											"        ",
											"            // 큐 sorting",
											"            if(query[\"start_num\"]<0){   // 시계 방향 회전",
											"                for(let i=0;i>query[\"start_num\"];i--){",
											"                    total.unshift(total.pop());",
											"                }",
											"            }else{   // 반시계 방향 회전",
											"                for(let i=1;i<query[\"start_num\"];i++){",
											"                    total.push(total.shift());",
											"                }",
											"            }",
											"",
											"            // 데이터 확인",
											"            for(let i in recordset){",
											"                // 정보 확인",
											"                pm.expect(recordset[i].album_id).to.match(/\\w{15}/);",
											"                // 순서 확인",
											"                pm.expect(recordset[i].album_id).to.eql(total[0].album_id);",
											"                total.push(total.shift());",
											"            }",
											"        });",
											"    }",
											"}); ",
											"",
											"// 4) 카테고리 타입 확인",
											"pm.test(\"4) 카테고리 타입 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"// 5) 망타입 확인",
											"pm.test(\"5) 망타입 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    var recordset = jsonData.result.recordset;",
											"    ",
											"    if(query[\"net_typ\"] == \"01\" || query[\"net_typ\"] == \"02\"){",
											"        for(i in recordset){",
											"            pm.expect(recordset[i].is_fh).to.oneOf([\"Y\",\"N\"]);",
											"        }",
											"    }else{",
											"        for(i in recordset){",
											"            pm.expect(recordset[i].is_fh).to.eql(\"N\");",
											"        }",
											"    }",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Host",
										"value": "programming.fleta.com",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://{{mims}}/smartux/getSUXMAlbumList?sa_id=T61060140414&stb_mac=8c6d.5044.45dd&app_type=SUSA&start_num=-1&req_count=2&paging_type=&schedule_code=473&net_typ=01&category_gb=I30&app_name=&ui_version=&pre_page=&cur_page=&dev_info=&os_info=&nw_info=&dev_model=&carrier_type=",
									"protocol": "http",
									"host": [
										"{{mims}}"
									],
									"path": [
										"smartux",
										"getSUXMAlbumList"
									],
									"query": [
										{
											"key": "sa_id",
											"value": "T61060140414"
										},
										{
											"key": "stb_mac",
											"value": "8c6d.5044.45dd"
										},
										{
											"key": "app_type",
											"value": "SUSA"
										},
										{
											"key": "start_num",
											"value": "-1"
										},
										{
											"key": "req_count",
											"value": "2"
										},
										{
											"key": "paging_type",
											"value": ""
										},
										{
											"key": "schedule_code",
											"value": "473"
										},
										{
											"key": "net_typ",
											"value": "01"
										},
										{
											"key": "category_gb",
											"value": "I30"
										},
										{
											"key": "app_name",
											"value": ""
										},
										{
											"key": "ui_version",
											"value": ""
										},
										{
											"key": "pre_page",
											"value": ""
										},
										{
											"key": "cur_page",
											"value": ""
										},
										{
											"key": "dev_info",
											"value": ""
										},
										{
											"key": "os_info",
											"value": ""
										},
										{
											"key": "nw_info",
											"value": ""
										},
										{
											"key": "dev_model",
											"value": ""
										},
										{
											"key": "carrier_type",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "/smartux/getSUXMAlbumList_NTC149_검수 가입자_SMA_-1,X,null_02_null Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// 공통",
											"// WAS 정상응답 체크 (200여부)",
											"pm.test(\"[공통]WAS 정상응답 체크 (200여부)\", function () {",
											"    pm.response.to.have.status(200);   ",
											"});",
											"",
											"// 응답속도 체크(0.5초미만) 여부",
											"pm.test(\"[공통]응답속도 체크(0.5초미만)\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(500);",
											"});",
											"",
											"// 1) 가입자(일반/검수) 구분에 따른 응답 확인",
											"pm.test(\"1) 가입자(일반/검수) 구분에 따른 응답 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"// 2) 어플타입에 따른 응답 구분",
											"pm.test(\"2) 어플타입에 따른 응답 구분\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"// 3) 페이징 확인",
											"var query = {};",
											"pm.request.url.query.all().forEach((param) => { query[param.key] = param.value});",
											"pm.test(\"3) 페이징 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    var recordset = jsonData.result.recordset;",
											"    var total_count = jsonData.result.total_count;",
											"    ",
											"    if(query[\"start_num\"] == -1 && query[\"paging_type\"] != \"N\"){",
											"        // total 숫자 확인",
											"        pm.expect(recordset.length).to.eql(parseInt(total_count));",
											"        // total 개수 확인",
											"        pm.expect(recordset.length).to.eql(parseInt(total_count));",
											"        // 데이터 확인",
											"        for(i in recordset){",
											"            pm.expect(recordset[i].album_id).to.match(/\\w{15}/);",
											"        }",
											"    }else if(query[\"start_num\"] == 0){",
											"        // total 숫자 확인",
											"        pm.expect(jsonData.result.total_count).to.match(/\\d/);",
											"        // recordset null 확인",
											"        pm.expect(recordset).to.null;",
											"    }else{",
											"        let request = pm.request;",
											"        // 전체 조회를 위해 파라미터 값 수정",
											"        request.url.query[\"reference\"][\"start_num\"][\"value\"] = \"-1\";",
											"        request.url.query[\"reference\"][\"paging_type\"][\"value\"] = \"\";",
											"",
											"        pm.expect(recordset).to.not.empty;",
											"        pm.sendRequest(request, function (err, response) {",
											"            let total = response.json().result.recordset;",
											"        ",
											"            // 큐 sorting",
											"            if(query[\"start_num\"]<0){   // 시계 방향 회전",
											"                for(let i=0;i>query[\"start_num\"];i--){",
											"                    total.unshift(total.pop());",
											"                }",
											"            }else{   // 반시계 방향 회전",
											"                for(let i=1;i<query[\"start_num\"];i++){",
											"                    total.push(total.shift());",
											"                }",
											"            }",
											"",
											"            // 데이터 확인",
											"            for(let i in recordset){",
											"                // 정보 확인",
											"                pm.expect(recordset[i].album_id).to.match(/\\w{15}/);",
											"                // 순서 확인",
											"                pm.expect(recordset[i].album_id).to.eql(total[0].album_id);",
											"                total.push(total.shift());",
											"            }",
											"        });",
											"    }",
											"}); ",
											"",
											"// 4) 카테고리 타입 확인",
											"pm.test(\"4) 카테고리 타입 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"// 5) 망타입 확인",
											"pm.test(\"5) 망타입 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    var recordset = jsonData.result.recordset;",
											"    ",
											"    if(query[\"net_typ\"] == \"01\" || query[\"net_typ\"] == \"02\"){",
											"        for(i in recordset){",
											"            pm.expect(recordset[i].is_fh).to.oneOf([\"Y\",\"N\"]);",
											"        }",
											"    }else{",
											"        for(i in recordset){",
											"            pm.expect(recordset[i].is_fh).to.eql(\"N\");",
											"        }",
											"    }",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Host",
										"value": "programming.fleta.com",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://{{mims}}/smartux/getSUXMAlbumList?sa_id=T61060140414&stb_mac=v000.3529.4486&app_type=SMA&start_num=-1&req_count=2&paging_type=&schedule_code=4&net_typ=02&category_gb=&app_name=&ui_version=&pre_page=&cur_page=&dev_info=&os_info=&nw_info=&dev_model=&carrier_type=",
									"protocol": "http",
									"host": [
										"{{mims}}"
									],
									"path": [
										"smartux",
										"getSUXMAlbumList"
									],
									"query": [
										{
											"key": "sa_id",
											"value": "T61060140414"
										},
										{
											"key": "stb_mac",
											"value": "v000.3529.4486"
										},
										{
											"key": "app_type",
											"value": "SMA"
										},
										{
											"key": "start_num",
											"value": "-1"
										},
										{
											"key": "req_count",
											"value": "2"
										},
										{
											"key": "paging_type",
											"value": ""
										},
										{
											"key": "schedule_code",
											"value": "4"
										},
										{
											"key": "net_typ",
											"value": "02"
										},
										{
											"key": "category_gb",
											"value": ""
										},
										{
											"key": "app_name",
											"value": ""
										},
										{
											"key": "ui_version",
											"value": ""
										},
										{
											"key": "pre_page",
											"value": ""
										},
										{
											"key": "cur_page",
											"value": ""
										},
										{
											"key": "dev_info",
											"value": ""
										},
										{
											"key": "os_info",
											"value": ""
										},
										{
											"key": "nw_info",
											"value": ""
										},
										{
											"key": "dev_model",
											"value": ""
										},
										{
											"key": "carrier_type",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "/smartux/getSUXMAlbumList_NTC12_일반 가입자_UX_-1,X,N_01_I30 Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// 공통",
											"// WAS 정상응답 체크 (200여부)",
											"pm.test(\"[공통]WAS 정상응답 체크 (200여부)\", function () {",
											"    pm.response.to.have.status(200);   ",
											"});",
											"",
											"// 응답속도 체크(0.5초미만) 여부",
											"pm.test(\"[공통]응답속도 체크(0.5초미만)\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(500);",
											"});",
											"",
											"// 1) 가입자(일반/검수) 구분에 따른 응답 확인",
											"pm.test(\"1) 가입자(일반/검수) 구분에 따른 응답 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"// 2) 어플타입에 따른 응답 구분",
											"pm.test(\"2) 어플타입에 따른 응답 구분\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"// 3) 페이징 확인",
											"var query = {};",
											"pm.request.url.query.all().forEach((param) => { query[param.key] = param.value});",
											"pm.test(\"3) 페이징 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    var recordset = jsonData.result.recordset;",
											"    var total_count = jsonData.result.total_count;",
											"    ",
											"    if(query[\"start_num\"] == -1 && query[\"paging_type\"] != \"N\"){",
											"        // total 숫자 확인",
											"        pm.expect(recordset.length).to.eql(parseInt(total_count));",
											"        // total 개수 확인",
											"        pm.expect(recordset.length).to.eql(parseInt(total_count));",
											"        // 데이터 확인",
											"        for(i in recordset){",
											"            pm.expect(recordset[i].album_id).to.match(/\\w{15}/);",
											"        }",
											"    }else if(query[\"start_num\"] == 0){",
											"        // total 숫자 확인",
											"        pm.expect(jsonData.result.total_count).to.match(/\\d/);",
											"        // recordset null 확인",
											"        pm.expect(recordset).to.null;",
											"    }else{",
											"        let request = pm.request;",
											"        // 전체 조회를 위해 파라미터 값 수정",
											"        request.url.query[\"reference\"][\"start_num\"][\"value\"] = \"-1\";",
											"        request.url.query[\"reference\"][\"paging_type\"][\"value\"] = \"\";",
											"",
											"        pm.expect(recordset).to.not.empty;",
											"        pm.sendRequest(request, function (err, response) {",
											"            let total = response.json().result.recordset;",
											"        ",
											"            // 큐 sorting",
											"            if(query[\"start_num\"]<0){   // 시계 방향 회전",
											"                for(let i=0;i>query[\"start_num\"];i--){",
											"                    total.unshift(total.pop());",
											"                }",
											"            }else{   // 반시계 방향 회전",
											"                for(let i=1;i<query[\"start_num\"];i++){",
											"                    total.push(total.shift());",
											"                }",
											"            }",
											"",
											"            // 데이터 확인",
											"            for(let i in recordset){",
											"                // 정보 확인",
											"                pm.expect(recordset[i].album_id).to.match(/\\w{15}/);",
											"                // 순서 확인",
											"                pm.expect(recordset[i].album_id).to.eql(total[0].album_id);",
											"                total.push(total.shift());",
											"            }",
											"        });",
											"    }",
											"}); ",
											"",
											"// 4) 카테고리 타입 확인",
											"pm.test(\"4) 카테고리 타입 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"// 5) 망타입 확인",
											"pm.test(\"5) 망타입 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    var recordset = jsonData.result.recordset;",
											"    ",
											"    if(query[\"net_typ\"] == \"01\" || query[\"net_typ\"] == \"02\"){",
											"        for(i in recordset){",
											"            pm.expect(recordset[i].is_fh).to.oneOf([\"Y\",\"N\"]);",
											"        }",
											"    }else{",
											"        for(i in recordset){",
											"            pm.expect(recordset[i].is_fh).to.eql(\"N\");",
											"        }",
											"    }",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Host",
										"value": "programming.fleta.com",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://{{mims}}/smartux/getSUXMAlbumList?sa_id=T61060140414&stb_mac=8c6d.5044.45dd&app_type=UX&start_num=-1&req_count=2&paging_type=N&schedule_code=473&net_typ=01&category_gb=I30&app_name=&ui_version=&pre_page=&cur_page=&dev_info=&os_info=&nw_info=&dev_model=&carrier_type=",
									"protocol": "http",
									"host": [
										"{{mims}}"
									],
									"path": [
										"smartux",
										"getSUXMAlbumList"
									],
									"query": [
										{
											"key": "sa_id",
											"value": "T61060140414"
										},
										{
											"key": "stb_mac",
											"value": "8c6d.5044.45dd"
										},
										{
											"key": "app_type",
											"value": "UX"
										},
										{
											"key": "start_num",
											"value": "-1"
										},
										{
											"key": "req_count",
											"value": "2"
										},
										{
											"key": "paging_type",
											"value": "N"
										},
										{
											"key": "schedule_code",
											"value": "473"
										},
										{
											"key": "net_typ",
											"value": "01"
										},
										{
											"key": "category_gb",
											"value": "I30"
										},
										{
											"key": "app_name",
											"value": ""
										},
										{
											"key": "ui_version",
											"value": ""
										},
										{
											"key": "pre_page",
											"value": ""
										},
										{
											"key": "cur_page",
											"value": ""
										},
										{
											"key": "dev_info",
											"value": ""
										},
										{
											"key": "os_info",
											"value": ""
										},
										{
											"key": "nw_info",
											"value": ""
										},
										{
											"key": "dev_model",
											"value": ""
										},
										{
											"key": "carrier_type",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "/smartux/getSUXMAlbumList_ATC7_start_num 이 전체 데이터보다 숫자가 많을때 (paging_type null 일때) Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// 공통",
											"// WAS 정상응답 체크 (200여부)",
											"pm.test(\"[공통]WAS 정상응답 체크 (200여부)\", function () {",
											"    pm.response.to.have.status(200);   ",
											"});",
											"",
											"// 응답속도 체크(0.5초미만) 여부",
											"pm.test(\"[공통]응답속도 체크(0.5초미만)\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(500);",
											"});",
											"",
											"// 1) start_num 이 전체 데이터보다 숫자가 많을때 (paging_type null 일때)",
											"pm.test(\"1) start_num 이 전체 데이터보다 숫자가 많을때 (paging_type null 일때)\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Host",
										"value": "programming.fleta.com",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://{{mims}}/smartux/getSUXMAlbumList?sa_id=T61060140414&stb_mac=8c6d.5044.45dd&app_type=UX&start_num=100&req_count=2&paging_type=&schedule_code=4&net_typ=01&category_gb=I20&app_name=&ui_version=&pre_page=&cur_page=&dev_info=&os_info=&nw_info=&dev_model=&carrier_type=",
									"protocol": "http",
									"host": [
										"{{mims}}"
									],
									"path": [
										"smartux",
										"getSUXMAlbumList"
									],
									"query": [
										{
											"key": "sa_id",
											"value": "T61060140414"
										},
										{
											"key": "stb_mac",
											"value": "8c6d.5044.45dd"
										},
										{
											"key": "app_type",
											"value": "UX"
										},
										{
											"key": "start_num",
											"value": "100"
										},
										{
											"key": "req_count",
											"value": "2"
										},
										{
											"key": "paging_type",
											"value": ""
										},
										{
											"key": "schedule_code",
											"value": "4"
										},
										{
											"key": "net_typ",
											"value": "01"
										},
										{
											"key": "category_gb",
											"value": "I20"
										},
										{
											"key": "app_name",
											"value": ""
										},
										{
											"key": "ui_version",
											"value": ""
										},
										{
											"key": "pre_page",
											"value": ""
										},
										{
											"key": "cur_page",
											"value": ""
										},
										{
											"key": "dev_info",
											"value": ""
										},
										{
											"key": "os_info",
											"value": ""
										},
										{
											"key": "nw_info",
											"value": ""
										},
										{
											"key": "dev_model",
											"value": ""
										},
										{
											"key": "carrier_type",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "/smartux/getSUXMAlbumList_NTC3_일반 가입자_UX_-1,X,null_01_I30 Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// 공통",
											"// WAS 정상응답 체크 (200여부)",
											"pm.test(\"[공통]WAS 정상응답 체크 (200여부)\", function () {",
											"    pm.response.to.have.status(200);   ",
											"});",
											"",
											"// 응답속도 체크(0.5초미만) 여부",
											"pm.test(\"[공통]응답속도 체크(0.5초미만)\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(500);",
											"});",
											"",
											"// 1) 가입자(일반/검수) 구분에 따른 응답 확인",
											"pm.test(\"1) 가입자(일반/검수) 구분에 따른 응답 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"// 2) 어플타입에 따른 응답 구분",
											"pm.test(\"2) 어플타입에 따른 응답 구분\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"// 3) 페이징 확인",
											"var query = {};",
											"pm.request.url.query.all().forEach((param) => { query[param.key] = param.value});",
											"pm.test(\"3) 페이징 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    var recordset = jsonData.result.recordset;",
											"    var total_count = jsonData.result.total_count;",
											"    ",
											"    if(query[\"start_num\"] == -1 && query[\"paging_type\"] != \"N\"){",
											"        // total 숫자 확인",
											"        pm.expect(recordset.length).to.eql(parseInt(total_count));",
											"        // total 개수 확인",
											"        pm.expect(recordset.length).to.eql(parseInt(total_count));",
											"        // 데이터 확인",
											"        for(i in recordset){",
											"            pm.expect(recordset[i].album_id).to.match(/\\w{15}/);",
											"        }",
											"    }else if(query[\"start_num\"] == 0){",
											"        // total 숫자 확인",
											"        pm.expect(jsonData.result.total_count).to.match(/\\d/);",
											"        // recordset null 확인",
											"        pm.expect(recordset).to.null;",
											"    }else{",
											"        let request = pm.request;",
											"        // 전체 조회를 위해 파라미터 값 수정",
											"        request.url.query[\"reference\"][\"start_num\"][\"value\"] = \"-1\";",
											"        request.url.query[\"reference\"][\"paging_type\"][\"value\"] = \"\";",
											"",
											"        pm.expect(recordset).to.not.empty;",
											"        pm.sendRequest(request, function (err, response) {",
											"            let total = response.json().result.recordset;",
											"        ",
											"            // 큐 sorting",
											"            if(query[\"start_num\"]<0){   // 시계 방향 회전",
											"                for(let i=0;i>query[\"start_num\"];i--){",
											"                    total.unshift(total.pop());",
											"                }",
											"            }else{   // 반시계 방향 회전",
											"                for(let i=1;i<query[\"start_num\"];i++){",
											"                    total.push(total.shift());",
											"                }",
											"            }",
											"",
											"            // 데이터 확인",
											"            for(let i in recordset){",
											"                // 정보 확인",
											"                pm.expect(recordset[i].album_id).to.match(/\\w{15}/);",
											"                // 순서 확인",
											"                pm.expect(recordset[i].album_id).to.eql(total[0].album_id);",
											"                total.push(total.shift());",
											"            }",
											"        });",
											"    }",
											"}); ",
											"",
											"// 4) 카테고리 타입 확인",
											"pm.test(\"4) 카테고리 타입 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"// 5) 망타입 확인",
											"pm.test(\"5) 망타입 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    var recordset = jsonData.result.recordset;",
											"    ",
											"    if(query[\"net_typ\"] == \"01\" || query[\"net_typ\"] == \"02\"){",
											"        for(i in recordset){",
											"            pm.expect(recordset[i].is_fh).to.oneOf([\"Y\",\"N\"]);",
											"        }",
											"    }else{",
											"        for(i in recordset){",
											"            pm.expect(recordset[i].is_fh).to.eql(\"N\");",
											"        }",
											"    }",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Host",
										"value": "programming.fleta.com",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://{{mims}}/smartux/getSUXMAlbumList?sa_id=T61060140414&stb_mac=8c6d.5044.45dd&app_type=UX&start_num=-1&req_count=2&paging_type=&schedule_code=473&net_typ=01&category_gb=I30&app_name=&ui_version=&pre_page=&cur_page=&dev_info=&os_info=&nw_info=&dev_model=&carrier_type=",
									"protocol": "http",
									"host": [
										"{{mims}}"
									],
									"path": [
										"smartux",
										"getSUXMAlbumList"
									],
									"query": [
										{
											"key": "sa_id",
											"value": "T61060140414"
										},
										{
											"key": "stb_mac",
											"value": "8c6d.5044.45dd"
										},
										{
											"key": "app_type",
											"value": "UX"
										},
										{
											"key": "start_num",
											"value": "-1"
										},
										{
											"key": "req_count",
											"value": "2"
										},
										{
											"key": "paging_type",
											"value": ""
										},
										{
											"key": "schedule_code",
											"value": "473"
										},
										{
											"key": "net_typ",
											"value": "01"
										},
										{
											"key": "category_gb",
											"value": "I30"
										},
										{
											"key": "app_name",
											"value": ""
										},
										{
											"key": "ui_version",
											"value": ""
										},
										{
											"key": "pre_page",
											"value": ""
										},
										{
											"key": "cur_page",
											"value": ""
										},
										{
											"key": "dev_info",
											"value": ""
										},
										{
											"key": "os_info",
											"value": ""
										},
										{
											"key": "nw_info",
											"value": ""
										},
										{
											"key": "dev_model",
											"value": ""
										},
										{
											"key": "carrier_type",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "/smartux/getSUXMAlbumList_NTC41_일반 가입자_SMA_-1,X,null_02_null Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// 공통",
											"// WAS 정상응답 체크 (200여부)",
											"pm.test(\"[공통]WAS 정상응답 체크 (200여부)\", function () {",
											"    pm.response.to.have.status(200);   ",
											"});",
											"",
											"// 응답속도 체크(0.5초미만) 여부",
											"pm.test(\"[공통]응답속도 체크(0.5초미만)\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(500);",
											"});",
											"",
											"// 1) 가입자(일반/검수) 구분에 따른 응답 확인",
											"pm.test(\"1) 가입자(일반/검수) 구분에 따른 응답 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"// 2) 어플타입에 따른 응답 구분",
											"pm.test(\"2) 어플타입에 따른 응답 구분\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"// 3) 페이징 확인",
											"var query = {};",
											"pm.request.url.query.all().forEach((param) => { query[param.key] = param.value});",
											"pm.test(\"3) 페이징 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    var recordset = jsonData.result.recordset;",
											"    var total_count = jsonData.result.total_count;",
											"    ",
											"    if(query[\"start_num\"] == -1 && query[\"paging_type\"] != \"N\"){",
											"        // total 숫자 확인",
											"        pm.expect(recordset.length).to.eql(parseInt(total_count));",
											"        // total 개수 확인",
											"        pm.expect(recordset.length).to.eql(parseInt(total_count));",
											"        // 데이터 확인",
											"        for(i in recordset){",
											"            pm.expect(recordset[i].album_id).to.match(/\\w{15}/);",
											"        }",
											"    }else if(query[\"start_num\"] == 0){",
											"        // total 숫자 확인",
											"        pm.expect(jsonData.result.total_count).to.match(/\\d/);",
											"        // recordset null 확인",
											"        pm.expect(recordset).to.null;",
											"    }else{",
											"        let request = pm.request;",
											"        // 전체 조회를 위해 파라미터 값 수정",
											"        request.url.query[\"reference\"][\"start_num\"][\"value\"] = \"-1\";",
											"        request.url.query[\"reference\"][\"paging_type\"][\"value\"] = \"\";",
											"",
											"        pm.expect(recordset).to.not.empty;",
											"        pm.sendRequest(request, function (err, response) {",
											"            let total = response.json().result.recordset;",
											"        ",
											"            // 큐 sorting",
											"            if(query[\"start_num\"]<0){   // 시계 방향 회전",
											"                for(let i=0;i>query[\"start_num\"];i--){",
											"                    total.unshift(total.pop());",
											"                }",
											"            }else{   // 반시계 방향 회전",
											"                for(let i=1;i<query[\"start_num\"];i++){",
											"                    total.push(total.shift());",
											"                }",
											"            }",
											"",
											"            // 데이터 확인",
											"            for(let i in recordset){",
											"                // 정보 확인",
											"                pm.expect(recordset[i].album_id).to.match(/\\w{15}/);",
											"                // 순서 확인",
											"                pm.expect(recordset[i].album_id).to.eql(total[0].album_id);",
											"                total.push(total.shift());",
											"            }",
											"        });",
											"    }",
											"}); ",
											"",
											"// 4) 카테고리 타입 확인",
											"pm.test(\"4) 카테고리 타입 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"// 5) 망타입 확인",
											"pm.test(\"5) 망타입 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    var recordset = jsonData.result.recordset;",
											"    ",
											"    if(query[\"net_typ\"] == \"01\" || query[\"net_typ\"] == \"02\"){",
											"        for(i in recordset){",
											"            pm.expect(recordset[i].is_fh).to.oneOf([\"Y\",\"N\"]);",
											"        }",
											"    }else{",
											"        for(i in recordset){",
											"            pm.expect(recordset[i].is_fh).to.eql(\"N\");",
											"        }",
											"    }",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Host",
										"value": "programming.fleta.com",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://{{mims}}/smartux/getSUXMAlbumList?sa_id=T61060140414&stb_mac=8c6d.5044.45dd&app_type=SMA&start_num=-1&req_count=2&paging_type=&schedule_code=4&net_typ=02&category_gb=&app_name=&ui_version=&pre_page=&cur_page=&dev_info=&os_info=&nw_info=&dev_model=&carrier_type=",
									"protocol": "http",
									"host": [
										"{{mims}}"
									],
									"path": [
										"smartux",
										"getSUXMAlbumList"
									],
									"query": [
										{
											"key": "sa_id",
											"value": "T61060140414"
										},
										{
											"key": "stb_mac",
											"value": "8c6d.5044.45dd"
										},
										{
											"key": "app_type",
											"value": "SMA"
										},
										{
											"key": "start_num",
											"value": "-1"
										},
										{
											"key": "req_count",
											"value": "2"
										},
										{
											"key": "paging_type",
											"value": ""
										},
										{
											"key": "schedule_code",
											"value": "4"
										},
										{
											"key": "net_typ",
											"value": "02"
										},
										{
											"key": "category_gb",
											"value": ""
										},
										{
											"key": "app_name",
											"value": ""
										},
										{
											"key": "ui_version",
											"value": ""
										},
										{
											"key": "pre_page",
											"value": ""
										},
										{
											"key": "cur_page",
											"value": ""
										},
										{
											"key": "dev_info",
											"value": ""
										},
										{
											"key": "os_info",
											"value": ""
										},
										{
											"key": "nw_info",
											"value": ""
										},
										{
											"key": "dev_model",
											"value": ""
										},
										{
											"key": "carrier_type",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "/smartux/getSUXMAlbumList_NTC155_검수 가입자_SMA_-1,X,N_01_null Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// 공통",
											"// WAS 정상응답 체크 (200여부)",
											"pm.test(\"[공통]WAS 정상응답 체크 (200여부)\", function () {",
											"    pm.response.to.have.status(200);   ",
											"});",
											"",
											"// 응답속도 체크(0.5초미만) 여부",
											"pm.test(\"[공통]응답속도 체크(0.5초미만)\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(500);",
											"});",
											"",
											"// 1) 가입자(일반/검수) 구분에 따른 응답 확인",
											"pm.test(\"1) 가입자(일반/검수) 구분에 따른 응답 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"// 2) 어플타입에 따른 응답 구분",
											"pm.test(\"2) 어플타입에 따른 응답 구분\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"// 3) 페이징 확인",
											"var query = {};",
											"pm.request.url.query.all().forEach((param) => { query[param.key] = param.value});",
											"pm.test(\"3) 페이징 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    var recordset = jsonData.result.recordset;",
											"    var total_count = jsonData.result.total_count;",
											"    ",
											"    if(query[\"start_num\"] == -1 && query[\"paging_type\"] != \"N\"){",
											"        // total 숫자 확인",
											"        pm.expect(recordset.length).to.eql(parseInt(total_count));",
											"        // total 개수 확인",
											"        pm.expect(recordset.length).to.eql(parseInt(total_count));",
											"        // 데이터 확인",
											"        for(i in recordset){",
											"            pm.expect(recordset[i].album_id).to.match(/\\w{15}/);",
											"        }",
											"    }else if(query[\"start_num\"] == 0){",
											"        // total 숫자 확인",
											"        pm.expect(jsonData.result.total_count).to.match(/\\d/);",
											"        // recordset null 확인",
											"        pm.expect(recordset).to.null;",
											"    }else{",
											"        let request = pm.request;",
											"        // 전체 조회를 위해 파라미터 값 수정",
											"        request.url.query[\"reference\"][\"start_num\"][\"value\"] = \"-1\";",
											"        request.url.query[\"reference\"][\"paging_type\"][\"value\"] = \"\";",
											"",
											"        pm.expect(recordset).to.not.empty;",
											"        pm.sendRequest(request, function (err, response) {",
											"            let total = response.json().result.recordset;",
											"        ",
											"            // 큐 sorting",
											"            if(query[\"start_num\"]<0){   // 시계 방향 회전",
											"                for(let i=0;i>query[\"start_num\"];i--){",
											"                    total.unshift(total.pop());",
											"                }",
											"            }else{   // 반시계 방향 회전",
											"                for(let i=1;i<query[\"start_num\"];i++){",
											"                    total.push(total.shift());",
											"                }",
											"            }",
											"",
											"            // 데이터 확인",
											"            for(let i in recordset){",
											"                // 정보 확인",
											"                pm.expect(recordset[i].album_id).to.match(/\\w{15}/);",
											"                // 순서 확인",
											"                pm.expect(recordset[i].album_id).to.eql(total[0].album_id);",
											"                total.push(total.shift());",
											"            }",
											"        });",
											"    }",
											"}); ",
											"",
											"// 4) 카테고리 타입 확인",
											"pm.test(\"4) 카테고리 타입 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"// 5) 망타입 확인",
											"pm.test(\"5) 망타입 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    var recordset = jsonData.result.recordset;",
											"    ",
											"    if(query[\"net_typ\"] == \"01\" || query[\"net_typ\"] == \"02\"){",
											"        for(i in recordset){",
											"            pm.expect(recordset[i].is_fh).to.oneOf([\"Y\",\"N\"]);",
											"        }",
											"    }else{",
											"        for(i in recordset){",
											"            pm.expect(recordset[i].is_fh).to.eql(\"N\");",
											"        }",
											"    }",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Host",
										"value": "programming.fleta.com",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://{{mims}}/smartux/getSUXMAlbumList?sa_id=T61060140414&stb_mac=v000.3529.4486&app_type=SMA&start_num=-1&req_count=2&paging_type=N&schedule_code=4&net_typ=01&category_gb=&app_name=&ui_version=&pre_page=&cur_page=&dev_info=&os_info=&nw_info=&dev_model=&carrier_type=",
									"protocol": "http",
									"host": [
										"{{mims}}"
									],
									"path": [
										"smartux",
										"getSUXMAlbumList"
									],
									"query": [
										{
											"key": "sa_id",
											"value": "T61060140414"
										},
										{
											"key": "stb_mac",
											"value": "v000.3529.4486"
										},
										{
											"key": "app_type",
											"value": "SMA"
										},
										{
											"key": "start_num",
											"value": "-1"
										},
										{
											"key": "req_count",
											"value": "2"
										},
										{
											"key": "paging_type",
											"value": "N"
										},
										{
											"key": "schedule_code",
											"value": "4"
										},
										{
											"key": "net_typ",
											"value": "01"
										},
										{
											"key": "category_gb",
											"value": ""
										},
										{
											"key": "app_name",
											"value": ""
										},
										{
											"key": "ui_version",
											"value": ""
										},
										{
											"key": "pre_page",
											"value": ""
										},
										{
											"key": "cur_page",
											"value": ""
										},
										{
											"key": "dev_info",
											"value": ""
										},
										{
											"key": "os_info",
											"value": ""
										},
										{
											"key": "nw_info",
											"value": ""
										},
										{
											"key": "dev_model",
											"value": ""
										},
										{
											"key": "carrier_type",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "/smartux/getSUXMAlbumList_NTC197_검수 가입자_SUSA_-1,X,N_31_null Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// 공통",
											"// WAS 정상응답 체크 (200여부)",
											"pm.test(\"[공통]WAS 정상응답 체크 (200여부)\", function () {",
											"    pm.response.to.have.status(200);   ",
											"});",
											"",
											"// 응답속도 체크(0.5초미만) 여부",
											"pm.test(\"[공통]응답속도 체크(0.5초미만)\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(500);",
											"});",
											"",
											"// 1) 가입자(일반/검수) 구분에 따른 응답 확인",
											"pm.test(\"1) 가입자(일반/검수) 구분에 따른 응답 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"// 2) 어플타입에 따른 응답 구분",
											"pm.test(\"2) 어플타입에 따른 응답 구분\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"// 3) 페이징 확인",
											"var query = {};",
											"pm.request.url.query.all().forEach((param) => { query[param.key] = param.value});",
											"pm.test(\"3) 페이징 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    var recordset = jsonData.result.recordset;",
											"    var total_count = jsonData.result.total_count;",
											"    ",
											"    if(query[\"start_num\"] == -1 && query[\"paging_type\"] != \"N\"){",
											"        // total 숫자 확인",
											"        pm.expect(recordset.length).to.eql(parseInt(total_count));",
											"        // total 개수 확인",
											"        pm.expect(recordset.length).to.eql(parseInt(total_count));",
											"        // 데이터 확인",
											"        for(i in recordset){",
											"            pm.expect(recordset[i].album_id).to.match(/\\w{15}/);",
											"        }",
											"    }else if(query[\"start_num\"] == 0){",
											"        // total 숫자 확인",
											"        pm.expect(jsonData.result.total_count).to.match(/\\d/);",
											"        // recordset null 확인",
											"        pm.expect(recordset).to.null;",
											"    }else{",
											"        let request = pm.request;",
											"        // 전체 조회를 위해 파라미터 값 수정",
											"        request.url.query[\"reference\"][\"start_num\"][\"value\"] = \"-1\";",
											"        request.url.query[\"reference\"][\"paging_type\"][\"value\"] = \"\";",
											"",
											"        pm.expect(recordset).to.not.empty;",
											"        pm.sendRequest(request, function (err, response) {",
											"            let total = response.json().result.recordset;",
											"        ",
											"            // 큐 sorting",
											"            if(query[\"start_num\"]<0){   // 시계 방향 회전",
											"                for(let i=0;i>query[\"start_num\"];i--){",
											"                    total.unshift(total.pop());",
											"                }",
											"            }else{   // 반시계 방향 회전",
											"                for(let i=1;i<query[\"start_num\"];i++){",
											"                    total.push(total.shift());",
											"                }",
											"            }",
											"",
											"            // 데이터 확인",
											"            for(let i in recordset){",
											"                // 정보 확인",
											"                pm.expect(recordset[i].album_id).to.match(/\\w{15}/);",
											"                // 순서 확인",
											"                pm.expect(recordset[i].album_id).to.eql(total[0].album_id);",
											"                total.push(total.shift());",
											"            }",
											"        });",
											"    }",
											"}); ",
											"",
											"// 4) 카테고리 타입 확인",
											"pm.test(\"4) 카테고리 타입 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"// 5) 망타입 확인",
											"pm.test(\"5) 망타입 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    var recordset = jsonData.result.recordset;",
											"    ",
											"    if(query[\"net_typ\"] == \"01\" || query[\"net_typ\"] == \"02\"){",
											"        for(i in recordset){",
											"            pm.expect(recordset[i].is_fh).to.oneOf([\"Y\",\"N\"]);",
											"        }",
											"    }else{",
											"        for(i in recordset){",
											"            pm.expect(recordset[i].is_fh).to.eql(\"N\");",
											"        }",
											"    }",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Host",
										"value": "programming.fleta.com",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://{{mims}}/smartux/getSUXMAlbumList?sa_id=T61060140414&stb_mac=v000.3529.4486&app_type=SUSA&start_num=-1&req_count=2&paging_type=N&schedule_code=4&net_typ=31&category_gb=&app_name=&ui_version=&pre_page=&cur_page=&dev_info=&os_info=&nw_info=&dev_model=&carrier_type=",
									"protocol": "http",
									"host": [
										"{{mims}}"
									],
									"path": [
										"smartux",
										"getSUXMAlbumList"
									],
									"query": [
										{
											"key": "sa_id",
											"value": "T61060140414"
										},
										{
											"key": "stb_mac",
											"value": "v000.3529.4486"
										},
										{
											"key": "app_type",
											"value": "SUSA"
										},
										{
											"key": "start_num",
											"value": "-1"
										},
										{
											"key": "req_count",
											"value": "2"
										},
										{
											"key": "paging_type",
											"value": "N"
										},
										{
											"key": "schedule_code",
											"value": "4"
										},
										{
											"key": "net_typ",
											"value": "31"
										},
										{
											"key": "category_gb",
											"value": ""
										},
										{
											"key": "app_name",
											"value": ""
										},
										{
											"key": "ui_version",
											"value": ""
										},
										{
											"key": "pre_page",
											"value": ""
										},
										{
											"key": "cur_page",
											"value": ""
										},
										{
											"key": "dev_info",
											"value": ""
										},
										{
											"key": "os_info",
											"value": ""
										},
										{
											"key": "nw_info",
											"value": ""
										},
										{
											"key": "dev_model",
											"value": ""
										},
										{
											"key": "carrier_type",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "/smartux/getSUXMAlbumList_NTC21_일반 가입자_UX_0,X,X_01_I30 Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// 공통",
											"// WAS 정상응답 체크 (200여부)",
											"pm.test(\"[공통]WAS 정상응답 체크 (200여부)\", function () {",
											"    pm.response.to.have.status(200);   ",
											"});",
											"",
											"// 응답속도 체크(0.5초미만) 여부",
											"pm.test(\"[공통]응답속도 체크(0.5초미만)\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(500);",
											"});",
											"",
											"// 1) 가입자(일반/검수) 구분에 따른 응답 확인",
											"pm.test(\"1) 가입자(일반/검수) 구분에 따른 응답 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"// 2) 어플타입에 따른 응답 구분",
											"pm.test(\"2) 어플타입에 따른 응답 구분\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"// 3) 페이징 확인",
											"var query = {};",
											"pm.request.url.query.all().forEach((param) => { query[param.key] = param.value});",
											"pm.test(\"3) 페이징 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    var recordset = jsonData.result.recordset;",
											"    var total_count = jsonData.result.total_count;",
											"    ",
											"    if(query[\"start_num\"] == -1 && query[\"paging_type\"] != \"N\"){",
											"        // total 숫자 확인",
											"        pm.expect(recordset.length).to.eql(parseInt(total_count));",
											"        // total 개수 확인",
											"        pm.expect(recordset.length).to.eql(parseInt(total_count));",
											"        // 데이터 확인",
											"        for(i in recordset){",
											"            pm.expect(recordset[i].album_id).to.match(/\\w{15}/);",
											"        }",
											"    }else if(query[\"start_num\"] == 0){",
											"        // total 숫자 확인",
											"        pm.expect(jsonData.result.total_count).to.match(/\\d/);",
											"        // recordset null 확인",
											"        pm.expect(recordset).to.null;",
											"    }else{",
											"        let request = pm.request;",
											"        // 전체 조회를 위해 파라미터 값 수정",
											"        request.url.query[\"reference\"][\"start_num\"][\"value\"] = \"-1\";",
											"        request.url.query[\"reference\"][\"paging_type\"][\"value\"] = \"\";",
											"",
											"        pm.expect(recordset).to.not.empty;",
											"        pm.sendRequest(request, function (err, response) {",
											"            let total = response.json().result.recordset;",
											"        ",
											"            // 큐 sorting",
											"            if(query[\"start_num\"]<0){   // 시계 방향 회전",
											"                for(let i=0;i>query[\"start_num\"];i--){",
											"                    total.unshift(total.pop());",
											"                }",
											"            }else{   // 반시계 방향 회전",
											"                for(let i=1;i<query[\"start_num\"];i++){",
											"                    total.push(total.shift());",
											"                }",
											"            }",
											"",
											"            // 데이터 확인",
											"            for(let i in recordset){",
											"                // 정보 확인",
											"                pm.expect(recordset[i].album_id).to.match(/\\w{15}/);",
											"                // 순서 확인",
											"                pm.expect(recordset[i].album_id).to.eql(total[0].album_id);",
											"                total.push(total.shift());",
											"            }",
											"        });",
											"    }",
											"}); ",
											"",
											"// 4) 카테고리 타입 확인",
											"pm.test(\"4) 카테고리 타입 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"// 5) 망타입 확인",
											"pm.test(\"5) 망타입 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    var recordset = jsonData.result.recordset;",
											"    ",
											"    if(query[\"net_typ\"] == \"01\" || query[\"net_typ\"] == \"02\"){",
											"        for(i in recordset){",
											"            pm.expect(recordset[i].is_fh).to.oneOf([\"Y\",\"N\"]);",
											"        }",
											"    }else{",
											"        for(i in recordset){",
											"            pm.expect(recordset[i].is_fh).to.eql(\"N\");",
											"        }",
											"    }",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Host",
										"value": "programming.fleta.com",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://{{mims}}/smartux/getSUXMAlbumList?sa_id=T61060140414&stb_mac=8c6d.5044.45dd&app_type=UX&start_num=0&req_count=2&paging_type=&schedule_code=473&net_typ=01&category_gb=I30&app_name=&ui_version=&pre_page=&cur_page=&dev_info=&os_info=&nw_info=&dev_model=&carrier_type=",
									"protocol": "http",
									"host": [
										"{{mims}}"
									],
									"path": [
										"smartux",
										"getSUXMAlbumList"
									],
									"query": [
										{
											"key": "sa_id",
											"value": "T61060140414"
										},
										{
											"key": "stb_mac",
											"value": "8c6d.5044.45dd"
										},
										{
											"key": "app_type",
											"value": "UX"
										},
										{
											"key": "start_num",
											"value": "0"
										},
										{
											"key": "req_count",
											"value": "2"
										},
										{
											"key": "paging_type",
											"value": ""
										},
										{
											"key": "schedule_code",
											"value": "473"
										},
										{
											"key": "net_typ",
											"value": "01"
										},
										{
											"key": "category_gb",
											"value": "I30"
										},
										{
											"key": "app_name",
											"value": ""
										},
										{
											"key": "ui_version",
											"value": ""
										},
										{
											"key": "pre_page",
											"value": ""
										},
										{
											"key": "cur_page",
											"value": ""
										},
										{
											"key": "dev_info",
											"value": ""
										},
										{
											"key": "os_info",
											"value": ""
										},
										{
											"key": "nw_info",
											"value": ""
										},
										{
											"key": "dev_model",
											"value": ""
										},
										{
											"key": "carrier_type",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "/smartux/getSUXMAlbumList_NTC108_일반 가입자_SUSA_1,X,X_31_I30 Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// 공통",
											"// WAS 정상응답 체크 (200여부)",
											"pm.test(\"[공통]WAS 정상응답 체크 (200여부)\", function () {",
											"    pm.response.to.have.status(200);   ",
											"});",
											"",
											"// 응답속도 체크(0.5초미만) 여부",
											"pm.test(\"[공통]응답속도 체크(0.5초미만)\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(500);",
											"});",
											"",
											"// 1) 가입자(일반/검수) 구분에 따른 응답 확인",
											"pm.test(\"1) 가입자(일반/검수) 구분에 따른 응답 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"// 2) 어플타입에 따른 응답 구분",
											"pm.test(\"2) 어플타입에 따른 응답 구분\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"// 3) 페이징 확인",
											"var query = {};",
											"pm.request.url.query.all().forEach((param) => { query[param.key] = param.value});",
											"pm.test(\"3) 페이징 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    var recordset = jsonData.result.recordset;",
											"    var total_count = jsonData.result.total_count;",
											"    ",
											"    if(query[\"start_num\"] == -1 && query[\"paging_type\"] != \"N\"){",
											"        // total 숫자 확인",
											"        pm.expect(recordset.length).to.eql(parseInt(total_count));",
											"        // total 개수 확인",
											"        pm.expect(recordset.length).to.eql(parseInt(total_count));",
											"        // 데이터 확인",
											"        for(i in recordset){",
											"            pm.expect(recordset[i].album_id).to.match(/\\w{15}/);",
											"        }",
											"    }else if(query[\"start_num\"] == 0){",
											"        // total 숫자 확인",
											"        pm.expect(jsonData.result.total_count).to.match(/\\d/);",
											"        // recordset null 확인",
											"        pm.expect(recordset).to.null;",
											"    }else{",
											"        let request = pm.request;",
											"        // 전체 조회를 위해 파라미터 값 수정",
											"        request.url.query[\"reference\"][\"start_num\"][\"value\"] = \"-1\";",
											"        request.url.query[\"reference\"][\"paging_type\"][\"value\"] = \"\";",
											"",
											"        pm.expect(recordset).to.not.empty;",
											"        pm.sendRequest(request, function (err, response) {",
											"            let total = response.json().result.recordset;",
											"        ",
											"            // 큐 sorting",
											"            if(query[\"start_num\"]<0){   // 시계 방향 회전",
											"                for(let i=0;i>query[\"start_num\"];i--){",
											"                    total.unshift(total.pop());",
											"                }",
											"            }else{   // 반시계 방향 회전",
											"                for(let i=1;i<query[\"start_num\"];i++){",
											"                    total.push(total.shift());",
											"                }",
											"            }",
											"",
											"            // 데이터 확인",
											"            for(let i in recordset){",
											"                // 정보 확인",
											"                pm.expect(recordset[i].album_id).to.match(/\\w{15}/);",
											"                // 순서 확인",
											"                pm.expect(recordset[i].album_id).to.eql(total[0].album_id);",
											"                total.push(total.shift());",
											"            }",
											"        });",
											"    }",
											"}); ",
											"",
											"// 4) 카테고리 타입 확인",
											"pm.test(\"4) 카테고리 타입 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"// 5) 망타입 확인",
											"pm.test(\"5) 망타입 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    var recordset = jsonData.result.recordset;",
											"    ",
											"    if(query[\"net_typ\"] == \"01\" || query[\"net_typ\"] == \"02\"){",
											"        for(i in recordset){",
											"            pm.expect(recordset[i].is_fh).to.oneOf([\"Y\",\"N\"]);",
											"        }",
											"    }else{",
											"        for(i in recordset){",
											"            pm.expect(recordset[i].is_fh).to.eql(\"N\");",
											"        }",
											"    }",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Host",
										"value": "programming.fleta.com",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://{{mims}}/smartux/getSUXMAlbumList?sa_id=T61060140414&stb_mac=8c6d.5044.45dd&app_type=SUSA&start_num=1&req_count=2&paging_type=&schedule_code=473&net_typ=31&category_gb=I30&app_name=&ui_version=&pre_page=&cur_page=&dev_info=&os_info=&nw_info=&dev_model=&carrier_type=",
									"protocol": "http",
									"host": [
										"{{mims}}"
									],
									"path": [
										"smartux",
										"getSUXMAlbumList"
									],
									"query": [
										{
											"key": "sa_id",
											"value": "T61060140414"
										},
										{
											"key": "stb_mac",
											"value": "8c6d.5044.45dd"
										},
										{
											"key": "app_type",
											"value": "SUSA"
										},
										{
											"key": "start_num",
											"value": "1"
										},
										{
											"key": "req_count",
											"value": "2"
										},
										{
											"key": "paging_type",
											"value": ""
										},
										{
											"key": "schedule_code",
											"value": "473"
										},
										{
											"key": "net_typ",
											"value": "31"
										},
										{
											"key": "category_gb",
											"value": "I30"
										},
										{
											"key": "app_name",
											"value": ""
										},
										{
											"key": "ui_version",
											"value": ""
										},
										{
											"key": "pre_page",
											"value": ""
										},
										{
											"key": "cur_page",
											"value": ""
										},
										{
											"key": "dev_info",
											"value": ""
										},
										{
											"key": "os_info",
											"value": ""
										},
										{
											"key": "nw_info",
											"value": ""
										},
										{
											"key": "dev_model",
											"value": ""
										},
										{
											"key": "carrier_type",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "/smartux/getSUXMAlbumList_NTC115_검수 가입자_UX_-1,X,null_31_I20 Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// 공통",
											"// WAS 정상응답 체크 (200여부)",
											"pm.test(\"[공통]WAS 정상응답 체크 (200여부)\", function () {",
											"    pm.response.to.have.status(200);   ",
											"});",
											"",
											"// 응답속도 체크(0.5초미만) 여부",
											"pm.test(\"[공통]응답속도 체크(0.5초미만)\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(500);",
											"});",
											"",
											"// 1) 가입자(일반/검수) 구분에 따른 응답 확인",
											"pm.test(\"1) 가입자(일반/검수) 구분에 따른 응답 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"// 2) 어플타입에 따른 응답 구분",
											"pm.test(\"2) 어플타입에 따른 응답 구분\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"// 3) 페이징 확인",
											"var query = {};",
											"pm.request.url.query.all().forEach((param) => { query[param.key] = param.value});",
											"pm.test(\"3) 페이징 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    var recordset = jsonData.result.recordset;",
											"    var total_count = jsonData.result.total_count;",
											"    ",
											"    if(query[\"start_num\"] == -1 && query[\"paging_type\"] != \"N\"){",
											"        // total 숫자 확인",
											"        pm.expect(recordset.length).to.eql(parseInt(total_count));",
											"        // total 개수 확인",
											"        pm.expect(recordset.length).to.eql(parseInt(total_count));",
											"        // 데이터 확인",
											"        for(i in recordset){",
											"            pm.expect(recordset[i].album_id).to.match(/\\w{15}/);",
											"        }",
											"    }else if(query[\"start_num\"] == 0){",
											"        // total 숫자 확인",
											"        pm.expect(jsonData.result.total_count).to.match(/\\d/);",
											"        // recordset null 확인",
											"        pm.expect(recordset).to.null;",
											"    }else{",
											"        let request = pm.request;",
											"        // 전체 조회를 위해 파라미터 값 수정",
											"        request.url.query[\"reference\"][\"start_num\"][\"value\"] = \"-1\";",
											"        request.url.query[\"reference\"][\"paging_type\"][\"value\"] = \"\";",
											"",
											"        pm.expect(recordset).to.not.empty;",
											"        pm.sendRequest(request, function (err, response) {",
											"            let total = response.json().result.recordset;",
											"        ",
											"            // 큐 sorting",
											"            if(query[\"start_num\"]<0){   // 시계 방향 회전",
											"                for(let i=0;i>query[\"start_num\"];i--){",
											"                    total.unshift(total.pop());",
											"                }",
											"            }else{   // 반시계 방향 회전",
											"                for(let i=1;i<query[\"start_num\"];i++){",
											"                    total.push(total.shift());",
											"                }",
											"            }",
											"",
											"            // 데이터 확인",
											"            for(let i in recordset){",
											"                // 정보 확인",
											"                pm.expect(recordset[i].album_id).to.match(/\\w{15}/);",
											"                // 순서 확인",
											"                pm.expect(recordset[i].album_id).to.eql(total[0].album_id);",
											"                total.push(total.shift());",
											"            }",
											"        });",
											"    }",
											"}); ",
											"",
											"// 4) 카테고리 타입 확인",
											"pm.test(\"4) 카테고리 타입 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"// 5) 망타입 확인",
											"pm.test(\"5) 망타입 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    var recordset = jsonData.result.recordset;",
											"    ",
											"    if(query[\"net_typ\"] == \"01\" || query[\"net_typ\"] == \"02\"){",
											"        for(i in recordset){",
											"            pm.expect(recordset[i].is_fh).to.oneOf([\"Y\",\"N\"]);",
											"        }",
											"    }else{",
											"        for(i in recordset){",
											"            pm.expect(recordset[i].is_fh).to.eql(\"N\");",
											"        }",
											"    }",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Host",
										"value": "programming.fleta.com",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://{{mims}}/smartux/getSUXMAlbumList?sa_id=T61060140414&stb_mac=v000.3529.4486&app_type=UX&start_num=-1&req_count=2&paging_type=&schedule_code=4&net_typ=31&category_gb=I20&app_name=&ui_version=&pre_page=&cur_page=&dev_info=&os_info=&nw_info=&dev_model=&carrier_type=",
									"protocol": "http",
									"host": [
										"{{mims}}"
									],
									"path": [
										"smartux",
										"getSUXMAlbumList"
									],
									"query": [
										{
											"key": "sa_id",
											"value": "T61060140414"
										},
										{
											"key": "stb_mac",
											"value": "v000.3529.4486"
										},
										{
											"key": "app_type",
											"value": "UX"
										},
										{
											"key": "start_num",
											"value": "-1"
										},
										{
											"key": "req_count",
											"value": "2"
										},
										{
											"key": "paging_type",
											"value": ""
										},
										{
											"key": "schedule_code",
											"value": "4"
										},
										{
											"key": "net_typ",
											"value": "31"
										},
										{
											"key": "category_gb",
											"value": "I20"
										},
										{
											"key": "app_name",
											"value": ""
										},
										{
											"key": "ui_version",
											"value": ""
										},
										{
											"key": "pre_page",
											"value": ""
										},
										{
											"key": "cur_page",
											"value": ""
										},
										{
											"key": "dev_info",
											"value": ""
										},
										{
											"key": "os_info",
											"value": ""
										},
										{
											"key": "nw_info",
											"value": ""
										},
										{
											"key": "dev_model",
											"value": ""
										},
										{
											"key": "carrier_type",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "/smartux/getSUXMAlbumList_NTC118_검수 가입자_UX_-1,X,N_01_I20 Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// 공통",
											"// WAS 정상응답 체크 (200여부)",
											"pm.test(\"[공통]WAS 정상응답 체크 (200여부)\", function () {",
											"    pm.response.to.have.status(200);   ",
											"});",
											"",
											"// 응답속도 체크(0.5초미만) 여부",
											"pm.test(\"[공통]응답속도 체크(0.5초미만)\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(500);",
											"});",
											"",
											"// 1) 가입자(일반/검수) 구분에 따른 응답 확인",
											"pm.test(\"1) 가입자(일반/검수) 구분에 따른 응답 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"// 2) 어플타입에 따른 응답 구분",
											"pm.test(\"2) 어플타입에 따른 응답 구분\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"// 3) 페이징 확인",
											"var query = {};",
											"pm.request.url.query.all().forEach((param) => { query[param.key] = param.value});",
											"pm.test(\"3) 페이징 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    var recordset = jsonData.result.recordset;",
											"    var total_count = jsonData.result.total_count;",
											"    ",
											"    if(query[\"start_num\"] == -1 && query[\"paging_type\"] != \"N\"){",
											"        // total 숫자 확인",
											"        pm.expect(recordset.length).to.eql(parseInt(total_count));",
											"        // total 개수 확인",
											"        pm.expect(recordset.length).to.eql(parseInt(total_count));",
											"        // 데이터 확인",
											"        for(i in recordset){",
											"            pm.expect(recordset[i].album_id).to.match(/\\w{15}/);",
											"        }",
											"    }else if(query[\"start_num\"] == 0){",
											"        // total 숫자 확인",
											"        pm.expect(jsonData.result.total_count).to.match(/\\d/);",
											"        // recordset null 확인",
											"        pm.expect(recordset).to.null;",
											"    }else{",
											"        let request = pm.request;",
											"        // 전체 조회를 위해 파라미터 값 수정",
											"        request.url.query[\"reference\"][\"start_num\"][\"value\"] = \"-1\";",
											"        request.url.query[\"reference\"][\"paging_type\"][\"value\"] = \"\";",
											"",
											"        pm.expect(recordset).to.not.empty;",
											"        pm.sendRequest(request, function (err, response) {",
											"            let total = response.json().result.recordset;",
											"        ",
											"            // 큐 sorting",
											"            if(query[\"start_num\"]<0){   // 시계 방향 회전",
											"                for(let i=0;i>query[\"start_num\"];i--){",
											"                    total.unshift(total.pop());",
											"                }",
											"            }else{   // 반시계 방향 회전",
											"                for(let i=1;i<query[\"start_num\"];i++){",
											"                    total.push(total.shift());",
											"                }",
											"            }",
											"",
											"            // 데이터 확인",
											"            for(let i in recordset){",
											"                // 정보 확인",
											"                pm.expect(recordset[i].album_id).to.match(/\\w{15}/);",
											"                // 순서 확인",
											"                pm.expect(recordset[i].album_id).to.eql(total[0].album_id);",
											"                total.push(total.shift());",
											"            }",
											"        });",
											"    }",
											"}); ",
											"",
											"// 4) 카테고리 타입 확인",
											"pm.test(\"4) 카테고리 타입 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"// 5) 망타입 확인",
											"pm.test(\"5) 망타입 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    var recordset = jsonData.result.recordset;",
											"    ",
											"    if(query[\"net_typ\"] == \"01\" || query[\"net_typ\"] == \"02\"){",
											"        for(i in recordset){",
											"            pm.expect(recordset[i].is_fh).to.oneOf([\"Y\",\"N\"]);",
											"        }",
											"    }else{",
											"        for(i in recordset){",
											"            pm.expect(recordset[i].is_fh).to.eql(\"N\");",
											"        }",
											"    }",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Host",
										"value": "programming.fleta.com",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://{{mims}}/smartux/getSUXMAlbumList?sa_id=T61060140414&stb_mac=v000.3529.4486&app_type=UX&start_num=-1&req_count=2&paging_type=N&schedule_code=4&net_typ=01&category_gb=I20&app_name=&ui_version=&pre_page=&cur_page=&dev_info=&os_info=&nw_info=&dev_model=&carrier_type=",
									"protocol": "http",
									"host": [
										"{{mims}}"
									],
									"path": [
										"smartux",
										"getSUXMAlbumList"
									],
									"query": [
										{
											"key": "sa_id",
											"value": "T61060140414"
										},
										{
											"key": "stb_mac",
											"value": "v000.3529.4486"
										},
										{
											"key": "app_type",
											"value": "UX"
										},
										{
											"key": "start_num",
											"value": "-1"
										},
										{
											"key": "req_count",
											"value": "2"
										},
										{
											"key": "paging_type",
											"value": "N"
										},
										{
											"key": "schedule_code",
											"value": "4"
										},
										{
											"key": "net_typ",
											"value": "01"
										},
										{
											"key": "category_gb",
											"value": "I20"
										},
										{
											"key": "app_name",
											"value": ""
										},
										{
											"key": "ui_version",
											"value": ""
										},
										{
											"key": "pre_page",
											"value": ""
										},
										{
											"key": "cur_page",
											"value": ""
										},
										{
											"key": "dev_info",
											"value": ""
										},
										{
											"key": "os_info",
											"value": ""
										},
										{
											"key": "nw_info",
											"value": ""
										},
										{
											"key": "dev_model",
											"value": ""
										},
										{
											"key": "carrier_type",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "/smartux/getSUXMAlbumList_NTC84_일반 가입자_SUSA_-1,X,N_01_I30 Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// 공통",
											"// WAS 정상응답 체크 (200여부)",
											"pm.test(\"[공통]WAS 정상응답 체크 (200여부)\", function () {",
											"    pm.response.to.have.status(200);   ",
											"});",
											"",
											"// 응답속도 체크(0.5초미만) 여부",
											"pm.test(\"[공통]응답속도 체크(0.5초미만)\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(500);",
											"});",
											"",
											"// 1) 가입자(일반/검수) 구분에 따른 응답 확인",
											"pm.test(\"1) 가입자(일반/검수) 구분에 따른 응답 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"// 2) 어플타입에 따른 응답 구분",
											"pm.test(\"2) 어플타입에 따른 응답 구분\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"// 3) 페이징 확인",
											"var query = {};",
											"pm.request.url.query.all().forEach((param) => { query[param.key] = param.value});",
											"pm.test(\"3) 페이징 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    var recordset = jsonData.result.recordset;",
											"    var total_count = jsonData.result.total_count;",
											"    ",
											"    if(query[\"start_num\"] == -1 && query[\"paging_type\"] != \"N\"){",
											"        // total 숫자 확인",
											"        pm.expect(recordset.length).to.eql(parseInt(total_count));",
											"        // total 개수 확인",
											"        pm.expect(recordset.length).to.eql(parseInt(total_count));",
											"        // 데이터 확인",
											"        for(i in recordset){",
											"            pm.expect(recordset[i].album_id).to.match(/\\w{15}/);",
											"        }",
											"    }else if(query[\"start_num\"] == 0){",
											"        // total 숫자 확인",
											"        pm.expect(jsonData.result.total_count).to.match(/\\d/);",
											"        // recordset null 확인",
											"        pm.expect(recordset).to.null;",
											"    }else{",
											"        let request = pm.request;",
											"        // 전체 조회를 위해 파라미터 값 수정",
											"        request.url.query[\"reference\"][\"start_num\"][\"value\"] = \"-1\";",
											"        request.url.query[\"reference\"][\"paging_type\"][\"value\"] = \"\";",
											"",
											"        pm.expect(recordset).to.not.empty;",
											"        pm.sendRequest(request, function (err, response) {",
											"            let total = response.json().result.recordset;",
											"        ",
											"            // 큐 sorting",
											"            if(query[\"start_num\"]<0){   // 시계 방향 회전",
											"                for(let i=0;i>query[\"start_num\"];i--){",
											"                    total.unshift(total.pop());",
											"                }",
											"            }else{   // 반시계 방향 회전",
											"                for(let i=1;i<query[\"start_num\"];i++){",
											"                    total.push(total.shift());",
											"                }",
											"            }",
											"",
											"            // 데이터 확인",
											"            for(let i in recordset){",
											"                // 정보 확인",
											"                pm.expect(recordset[i].album_id).to.match(/\\w{15}/);",
											"                // 순서 확인",
											"                pm.expect(recordset[i].album_id).to.eql(total[0].album_id);",
											"                total.push(total.shift());",
											"            }",
											"        });",
											"    }",
											"}); ",
											"",
											"// 4) 카테고리 타입 확인",
											"pm.test(\"4) 카테고리 타입 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"// 5) 망타입 확인",
											"pm.test(\"5) 망타입 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    var recordset = jsonData.result.recordset;",
											"    ",
											"    if(query[\"net_typ\"] == \"01\" || query[\"net_typ\"] == \"02\"){",
											"        for(i in recordset){",
											"            pm.expect(recordset[i].is_fh).to.oneOf([\"Y\",\"N\"]);",
											"        }",
											"    }else{",
											"        for(i in recordset){",
											"            pm.expect(recordset[i].is_fh).to.eql(\"N\");",
											"        }",
											"    }",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Host",
										"value": "programming.fleta.com",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://{{mims}}/smartux/getSUXMAlbumList?sa_id=T61060140414&stb_mac=8c6d.5044.45dd&app_type=SUSA&start_num=-1&req_count=2&paging_type=N&schedule_code=473&net_typ=01&category_gb=I30&app_name=&ui_version=&pre_page=&cur_page=&dev_info=&os_info=&nw_info=&dev_model=&carrier_type=",
									"protocol": "http",
									"host": [
										"{{mims}}"
									],
									"path": [
										"smartux",
										"getSUXMAlbumList"
									],
									"query": [
										{
											"key": "sa_id",
											"value": "T61060140414"
										},
										{
											"key": "stb_mac",
											"value": "8c6d.5044.45dd"
										},
										{
											"key": "app_type",
											"value": "SUSA"
										},
										{
											"key": "start_num",
											"value": "-1"
										},
										{
											"key": "req_count",
											"value": "2"
										},
										{
											"key": "paging_type",
											"value": "N"
										},
										{
											"key": "schedule_code",
											"value": "473"
										},
										{
											"key": "net_typ",
											"value": "01"
										},
										{
											"key": "category_gb",
											"value": "I30"
										},
										{
											"key": "app_name",
											"value": ""
										},
										{
											"key": "ui_version",
											"value": ""
										},
										{
											"key": "pre_page",
											"value": ""
										},
										{
											"key": "cur_page",
											"value": ""
										},
										{
											"key": "dev_info",
											"value": ""
										},
										{
											"key": "os_info",
											"value": ""
										},
										{
											"key": "nw_info",
											"value": ""
										},
										{
											"key": "dev_model",
											"value": ""
										},
										{
											"key": "carrier_type",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "/smartux/getSUXMAlbumList_NTC121_검수 가입자_UX_-1,X,N_02_I20 Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// 공통",
											"// WAS 정상응답 체크 (200여부)",
											"pm.test(\"[공통]WAS 정상응답 체크 (200여부)\", function () {",
											"    pm.response.to.have.status(200);   ",
											"});",
											"",
											"// 응답속도 체크(0.5초미만) 여부",
											"pm.test(\"[공통]응답속도 체크(0.5초미만)\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(500);",
											"});",
											"",
											"// 1) 가입자(일반/검수) 구분에 따른 응답 확인",
											"pm.test(\"1) 가입자(일반/검수) 구분에 따른 응답 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"// 2) 어플타입에 따른 응답 구분",
											"pm.test(\"2) 어플타입에 따른 응답 구분\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"// 3) 페이징 확인",
											"var query = {};",
											"pm.request.url.query.all().forEach((param) => { query[param.key] = param.value});",
											"pm.test(\"3) 페이징 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    var recordset = jsonData.result.recordset;",
											"    var total_count = jsonData.result.total_count;",
											"    ",
											"    if(query[\"start_num\"] == -1 && query[\"paging_type\"] != \"N\"){",
											"        // total 숫자 확인",
											"        pm.expect(recordset.length).to.eql(parseInt(total_count));",
											"        // total 개수 확인",
											"        pm.expect(recordset.length).to.eql(parseInt(total_count));",
											"        // 데이터 확인",
											"        for(i in recordset){",
											"            pm.expect(recordset[i].album_id).to.match(/\\w{15}/);",
											"        }",
											"    }else if(query[\"start_num\"] == 0){",
											"        // total 숫자 확인",
											"        pm.expect(jsonData.result.total_count).to.match(/\\d/);",
											"        // recordset null 확인",
											"        pm.expect(recordset).to.null;",
											"    }else{",
											"        let request = pm.request;",
											"        // 전체 조회를 위해 파라미터 값 수정",
											"        request.url.query[\"reference\"][\"start_num\"][\"value\"] = \"-1\";",
											"        request.url.query[\"reference\"][\"paging_type\"][\"value\"] = \"\";",
											"",
											"        pm.expect(recordset).to.not.empty;",
											"        pm.sendRequest(request, function (err, response) {",
											"            let total = response.json().result.recordset;",
											"        ",
											"            // 큐 sorting",
											"            if(query[\"start_num\"]<0){   // 시계 방향 회전",
											"                for(let i=0;i>query[\"start_num\"];i--){",
											"                    total.unshift(total.pop());",
											"                }",
											"            }else{   // 반시계 방향 회전",
											"                for(let i=1;i<query[\"start_num\"];i++){",
											"                    total.push(total.shift());",
											"                }",
											"            }",
											"",
											"            // 데이터 확인",
											"            for(let i in recordset){",
											"                // 정보 확인",
											"                pm.expect(recordset[i].album_id).to.match(/\\w{15}/);",
											"                // 순서 확인",
											"                pm.expect(recordset[i].album_id).to.eql(total[0].album_id);",
											"                total.push(total.shift());",
											"            }",
											"        });",
											"    }",
											"}); ",
											"",
											"// 4) 카테고리 타입 확인",
											"pm.test(\"4) 카테고리 타입 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"// 5) 망타입 확인",
											"pm.test(\"5) 망타입 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    var recordset = jsonData.result.recordset;",
											"    ",
											"    if(query[\"net_typ\"] == \"01\" || query[\"net_typ\"] == \"02\"){",
											"        for(i in recordset){",
											"            pm.expect(recordset[i].is_fh).to.oneOf([\"Y\",\"N\"]);",
											"        }",
											"    }else{",
											"        for(i in recordset){",
											"            pm.expect(recordset[i].is_fh).to.eql(\"N\");",
											"        }",
											"    }",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Host",
										"value": "programming.fleta.com",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://{{mims}}/smartux/getSUXMAlbumList?sa_id=T61060140414&stb_mac=v000.3529.4486&app_type=UX&start_num=-1&req_count=2&paging_type=N&schedule_code=4&net_typ=02&category_gb=I20&app_name=&ui_version=&pre_page=&cur_page=&dev_info=&os_info=&nw_info=&dev_model=&carrier_type=",
									"protocol": "http",
									"host": [
										"{{mims}}"
									],
									"path": [
										"smartux",
										"getSUXMAlbumList"
									],
									"query": [
										{
											"key": "sa_id",
											"value": "T61060140414"
										},
										{
											"key": "stb_mac",
											"value": "v000.3529.4486"
										},
										{
											"key": "app_type",
											"value": "UX"
										},
										{
											"key": "start_num",
											"value": "-1"
										},
										{
											"key": "req_count",
											"value": "2"
										},
										{
											"key": "paging_type",
											"value": "N"
										},
										{
											"key": "schedule_code",
											"value": "4"
										},
										{
											"key": "net_typ",
											"value": "02"
										},
										{
											"key": "category_gb",
											"value": "I20"
										},
										{
											"key": "app_name",
											"value": ""
										},
										{
											"key": "ui_version",
											"value": ""
										},
										{
											"key": "pre_page",
											"value": ""
										},
										{
											"key": "cur_page",
											"value": ""
										},
										{
											"key": "dev_info",
											"value": ""
										},
										{
											"key": "os_info",
											"value": ""
										},
										{
											"key": "nw_info",
											"value": ""
										},
										{
											"key": "dev_model",
											"value": ""
										},
										{
											"key": "carrier_type",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "/smartux/getSUXMAlbumList_NTC200_검수 가입자_SUSA_0,X,X_01_null Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// 공통",
											"// WAS 정상응답 체크 (200여부)",
											"pm.test(\"[공통]WAS 정상응답 체크 (200여부)\", function () {",
											"    pm.response.to.have.status(200);   ",
											"});",
											"",
											"// 응답속도 체크(0.5초미만) 여부",
											"pm.test(\"[공통]응답속도 체크(0.5초미만)\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(500);",
											"});",
											"",
											"// 1) 가입자(일반/검수) 구분에 따른 응답 확인",
											"pm.test(\"1) 가입자(일반/검수) 구분에 따른 응답 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"// 2) 어플타입에 따른 응답 구분",
											"pm.test(\"2) 어플타입에 따른 응답 구분\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"// 3) 페이징 확인",
											"var query = {};",
											"pm.request.url.query.all().forEach((param) => { query[param.key] = param.value});",
											"pm.test(\"3) 페이징 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    var recordset = jsonData.result.recordset;",
											"    var total_count = jsonData.result.total_count;",
											"    ",
											"    if(query[\"start_num\"] == -1 && query[\"paging_type\"] != \"N\"){",
											"        // total 숫자 확인",
											"        pm.expect(recordset.length).to.eql(parseInt(total_count));",
											"        // total 개수 확인",
											"        pm.expect(recordset.length).to.eql(parseInt(total_count));",
											"        // 데이터 확인",
											"        for(i in recordset){",
											"            pm.expect(recordset[i].album_id).to.match(/\\w{15}/);",
											"        }",
											"    }else if(query[\"start_num\"] == 0){",
											"        // total 숫자 확인",
											"        pm.expect(jsonData.result.total_count).to.match(/\\d/);",
											"        // recordset null 확인",
											"        pm.expect(recordset).to.null;",
											"    }else{",
											"        let request = pm.request;",
											"        // 전체 조회를 위해 파라미터 값 수정",
											"        request.url.query[\"reference\"][\"start_num\"][\"value\"] = \"-1\";",
											"        request.url.query[\"reference\"][\"paging_type\"][\"value\"] = \"\";",
											"",
											"        pm.expect(recordset).to.not.empty;",
											"        pm.sendRequest(request, function (err, response) {",
											"            let total = response.json().result.recordset;",
											"        ",
											"            // 큐 sorting",
											"            if(query[\"start_num\"]<0){   // 시계 방향 회전",
											"                for(let i=0;i>query[\"start_num\"];i--){",
											"                    total.unshift(total.pop());",
											"                }",
											"            }else{   // 반시계 방향 회전",
											"                for(let i=1;i<query[\"start_num\"];i++){",
											"                    total.push(total.shift());",
											"                }",
											"            }",
											"",
											"            // 데이터 확인",
											"            for(let i in recordset){",
											"                // 정보 확인",
											"                pm.expect(recordset[i].album_id).to.match(/\\w{15}/);",
											"                // 순서 확인",
											"                pm.expect(recordset[i].album_id).to.eql(total[0].album_id);",
											"                total.push(total.shift());",
											"            }",
											"        });",
											"    }",
											"}); ",
											"",
											"// 4) 카테고리 타입 확인",
											"pm.test(\"4) 카테고리 타입 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"// 5) 망타입 확인",
											"pm.test(\"5) 망타입 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    var recordset = jsonData.result.recordset;",
											"    ",
											"    if(query[\"net_typ\"] == \"01\" || query[\"net_typ\"] == \"02\"){",
											"        for(i in recordset){",
											"            pm.expect(recordset[i].is_fh).to.oneOf([\"Y\",\"N\"]);",
											"        }",
											"    }else{",
											"        for(i in recordset){",
											"            pm.expect(recordset[i].is_fh).to.eql(\"N\");",
											"        }",
											"    }",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Host",
										"value": "programming.fleta.com",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://{{mims}}/smartux/getSUXMAlbumList?sa_id=T61060140414&stb_mac=v000.3529.4486&app_type=SUSA&start_num=0&req_count=2&paging_type=&schedule_code=4&net_typ=01&category_gb=&app_name=&ui_version=&pre_page=&cur_page=&dev_info=&os_info=&nw_info=&dev_model=&carrier_type=",
									"protocol": "http",
									"host": [
										"{{mims}}"
									],
									"path": [
										"smartux",
										"getSUXMAlbumList"
									],
									"query": [
										{
											"key": "sa_id",
											"value": "T61060140414"
										},
										{
											"key": "stb_mac",
											"value": "v000.3529.4486"
										},
										{
											"key": "app_type",
											"value": "SUSA"
										},
										{
											"key": "start_num",
											"value": "0"
										},
										{
											"key": "req_count",
											"value": "2"
										},
										{
											"key": "paging_type",
											"value": ""
										},
										{
											"key": "schedule_code",
											"value": "4"
										},
										{
											"key": "net_typ",
											"value": "01"
										},
										{
											"key": "category_gb",
											"value": ""
										},
										{
											"key": "app_name",
											"value": ""
										},
										{
											"key": "ui_version",
											"value": ""
										},
										{
											"key": "pre_page",
											"value": ""
										},
										{
											"key": "cur_page",
											"value": ""
										},
										{
											"key": "dev_info",
											"value": ""
										},
										{
											"key": "os_info",
											"value": ""
										},
										{
											"key": "nw_info",
											"value": ""
										},
										{
											"key": "dev_model",
											"value": ""
										},
										{
											"key": "carrier_type",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "/smartux/getSUXMAlbumList_ATC19_category_gb 가 영문/숫자 format 이 아닐때 Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// 공통",
											"// WAS 정상응답 체크 (200여부)",
											"pm.test(\"[공통]WAS 정상응답 체크 (200여부)\", function () {",
											"    pm.response.to.have.status(200);   ",
											"});",
											"",
											"// 응답속도 체크(0.5초미만) 여부",
											"pm.test(\"[공통]응답속도 체크(0.5초미만)\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(500);",
											"});",
											"",
											"// 1) category_gb 가 영문/숫자 format 이 아닐때",
											"pm.test(\"1) category_gb 가 영문/숫자 format 이 아닐때\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"8002\");",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Host",
										"value": "programming.fleta.com",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://{{mims}}/smartux/getSUXMAlbumList?sa_id=T61060140414&stb_mac=8c6d.5044.45dd&app_type=UX&start_num=1&req_count=2&paging_type=&schedule_code=4&net_typ=01&category_gb=한글яз01&app_name=&ui_version=&pre_page=&cur_page=&dev_info=&os_info=&nw_info=&dev_model=&carrier_type=",
									"protocol": "http",
									"host": [
										"{{mims}}"
									],
									"path": [
										"smartux",
										"getSUXMAlbumList"
									],
									"query": [
										{
											"key": "sa_id",
											"value": "T61060140414"
										},
										{
											"key": "stb_mac",
											"value": "8c6d.5044.45dd"
										},
										{
											"key": "app_type",
											"value": "UX"
										},
										{
											"key": "start_num",
											"value": "1"
										},
										{
											"key": "req_count",
											"value": "2"
										},
										{
											"key": "paging_type",
											"value": ""
										},
										{
											"key": "schedule_code",
											"value": "4"
										},
										{
											"key": "net_typ",
											"value": "01"
										},
										{
											"key": "category_gb",
											"value": "한글яз01"
										},
										{
											"key": "app_name",
											"value": ""
										},
										{
											"key": "ui_version",
											"value": ""
										},
										{
											"key": "pre_page",
											"value": ""
										},
										{
											"key": "cur_page",
											"value": ""
										},
										{
											"key": "dev_info",
											"value": ""
										},
										{
											"key": "os_info",
											"value": ""
										},
										{
											"key": "nw_info",
											"value": ""
										},
										{
											"key": "dev_model",
											"value": ""
										},
										{
											"key": "carrier_type",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "/smartux/getSUXMAlbumList_NTC10_일반 가입자_UX_-1,X,N_01_I20 Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// 공통",
											"// WAS 정상응답 체크 (200여부)",
											"pm.test(\"[공통]WAS 정상응답 체크 (200여부)\", function () {",
											"    pm.response.to.have.status(200);   ",
											"});",
											"",
											"// 응답속도 체크(0.5초미만) 여부",
											"pm.test(\"[공통]응답속도 체크(0.5초미만)\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(500);",
											"});",
											"",
											"// 1) 가입자(일반/검수) 구분에 따른 응답 확인",
											"pm.test(\"1) 가입자(일반/검수) 구분에 따른 응답 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"// 2) 어플타입에 따른 응답 구분",
											"pm.test(\"2) 어플타입에 따른 응답 구분\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"// 3) 페이징 확인",
											"var query = {};",
											"pm.request.url.query.all().forEach((param) => { query[param.key] = param.value});",
											"pm.test(\"3) 페이징 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    var recordset = jsonData.result.recordset;",
											"    var total_count = jsonData.result.total_count;",
											"    ",
											"    if(query[\"start_num\"] == -1 && query[\"paging_type\"] != \"N\"){",
											"        // total 숫자 확인",
											"        pm.expect(recordset.length).to.eql(parseInt(total_count));",
											"        // total 개수 확인",
											"        pm.expect(recordset.length).to.eql(parseInt(total_count));",
											"        // 데이터 확인",
											"        for(i in recordset){",
											"            pm.expect(recordset[i].album_id).to.match(/\\w{15}/);",
											"        }",
											"    }else if(query[\"start_num\"] == 0){",
											"        // total 숫자 확인",
											"        pm.expect(jsonData.result.total_count).to.match(/\\d/);",
											"        // recordset null 확인",
											"        pm.expect(recordset).to.null;",
											"    }else{",
											"        let request = pm.request;",
											"        // 전체 조회를 위해 파라미터 값 수정",
											"        request.url.query[\"reference\"][\"start_num\"][\"value\"] = \"-1\";",
											"        request.url.query[\"reference\"][\"paging_type\"][\"value\"] = \"\";",
											"",
											"        pm.expect(recordset).to.not.empty;",
											"        pm.sendRequest(request, function (err, response) {",
											"            let total = response.json().result.recordset;",
											"        ",
											"            // 큐 sorting",
											"            if(query[\"start_num\"]<0){   // 시계 방향 회전",
											"                for(let i=0;i>query[\"start_num\"];i--){",
											"                    total.unshift(total.pop());",
											"                }",
											"            }else{   // 반시계 방향 회전",
											"                for(let i=1;i<query[\"start_num\"];i++){",
											"                    total.push(total.shift());",
											"                }",
											"            }",
											"",
											"            // 데이터 확인",
											"            for(let i in recordset){",
											"                // 정보 확인",
											"                pm.expect(recordset[i].album_id).to.match(/\\w{15}/);",
											"                // 순서 확인",
											"                pm.expect(recordset[i].album_id).to.eql(total[0].album_id);",
											"                total.push(total.shift());",
											"            }",
											"        });",
											"    }",
											"}); ",
											"",
											"// 4) 카테고리 타입 확인",
											"pm.test(\"4) 카테고리 타입 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"// 5) 망타입 확인",
											"pm.test(\"5) 망타입 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    var recordset = jsonData.result.recordset;",
											"    ",
											"    if(query[\"net_typ\"] == \"01\" || query[\"net_typ\"] == \"02\"){",
											"        for(i in recordset){",
											"            pm.expect(recordset[i].is_fh).to.oneOf([\"Y\",\"N\"]);",
											"        }",
											"    }else{",
											"        for(i in recordset){",
											"            pm.expect(recordset[i].is_fh).to.eql(\"N\");",
											"        }",
											"    }",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Host",
										"value": "programming.fleta.com",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://{{mims}}/smartux/getSUXMAlbumList?sa_id=T61060140414&stb_mac=8c6d.5044.45dd&app_type=UX&start_num=-1&req_count=2&paging_type=N&schedule_code=4&net_typ=01&category_gb=I20&app_name=&ui_version=&pre_page=&cur_page=&dev_info=&os_info=&nw_info=&dev_model=&carrier_type=",
									"protocol": "http",
									"host": [
										"{{mims}}"
									],
									"path": [
										"smartux",
										"getSUXMAlbumList"
									],
									"query": [
										{
											"key": "sa_id",
											"value": "T61060140414"
										},
										{
											"key": "stb_mac",
											"value": "8c6d.5044.45dd"
										},
										{
											"key": "app_type",
											"value": "UX"
										},
										{
											"key": "start_num",
											"value": "-1"
										},
										{
											"key": "req_count",
											"value": "2"
										},
										{
											"key": "paging_type",
											"value": "N"
										},
										{
											"key": "schedule_code",
											"value": "4"
										},
										{
											"key": "net_typ",
											"value": "01"
										},
										{
											"key": "category_gb",
											"value": "I20"
										},
										{
											"key": "app_name",
											"value": ""
										},
										{
											"key": "ui_version",
											"value": ""
										},
										{
											"key": "pre_page",
											"value": ""
										},
										{
											"key": "cur_page",
											"value": ""
										},
										{
											"key": "dev_info",
											"value": ""
										},
										{
											"key": "os_info",
											"value": ""
										},
										{
											"key": "nw_info",
											"value": ""
										},
										{
											"key": "dev_model",
											"value": ""
										},
										{
											"key": "carrier_type",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "/smartux/getSUXMAlbumList_NTC25_일반 가입자_UX_0,X,X_31_I20 Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// 공통",
											"// WAS 정상응답 체크 (200여부)",
											"pm.test(\"[공통]WAS 정상응답 체크 (200여부)\", function () {",
											"    pm.response.to.have.status(200);   ",
											"});",
											"",
											"// 응답속도 체크(0.5초미만) 여부",
											"pm.test(\"[공통]응답속도 체크(0.5초미만)\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(500);",
											"});",
											"",
											"// 1) 가입자(일반/검수) 구분에 따른 응답 확인",
											"pm.test(\"1) 가입자(일반/검수) 구분에 따른 응답 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"// 2) 어플타입에 따른 응답 구분",
											"pm.test(\"2) 어플타입에 따른 응답 구분\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"// 3) 페이징 확인",
											"var query = {};",
											"pm.request.url.query.all().forEach((param) => { query[param.key] = param.value});",
											"pm.test(\"3) 페이징 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    var recordset = jsonData.result.recordset;",
											"    var total_count = jsonData.result.total_count;",
											"    ",
											"    if(query[\"start_num\"] == -1 && query[\"paging_type\"] != \"N\"){",
											"        // total 숫자 확인",
											"        pm.expect(recordset.length).to.eql(parseInt(total_count));",
											"        // total 개수 확인",
											"        pm.expect(recordset.length).to.eql(parseInt(total_count));",
											"        // 데이터 확인",
											"        for(i in recordset){",
											"            pm.expect(recordset[i].album_id).to.match(/\\w{15}/);",
											"        }",
											"    }else if(query[\"start_num\"] == 0){",
											"        // total 숫자 확인",
											"        pm.expect(jsonData.result.total_count).to.match(/\\d/);",
											"        // recordset null 확인",
											"        pm.expect(recordset).to.null;",
											"    }else{",
											"        let request = pm.request;",
											"        // 전체 조회를 위해 파라미터 값 수정",
											"        request.url.query[\"reference\"][\"start_num\"][\"value\"] = \"-1\";",
											"        request.url.query[\"reference\"][\"paging_type\"][\"value\"] = \"\";",
											"",
											"        pm.expect(recordset).to.not.empty;",
											"        pm.sendRequest(request, function (err, response) {",
											"            let total = response.json().result.recordset;",
											"        ",
											"            // 큐 sorting",
											"            if(query[\"start_num\"]<0){   // 시계 방향 회전",
											"                for(let i=0;i>query[\"start_num\"];i--){",
											"                    total.unshift(total.pop());",
											"                }",
											"            }else{   // 반시계 방향 회전",
											"                for(let i=1;i<query[\"start_num\"];i++){",
											"                    total.push(total.shift());",
											"                }",
											"            }",
											"",
											"            // 데이터 확인",
											"            for(let i in recordset){",
											"                // 정보 확인",
											"                pm.expect(recordset[i].album_id).to.match(/\\w{15}/);",
											"                // 순서 확인",
											"                pm.expect(recordset[i].album_id).to.eql(total[0].album_id);",
											"                total.push(total.shift());",
											"            }",
											"        });",
											"    }",
											"}); ",
											"",
											"// 4) 카테고리 타입 확인",
											"pm.test(\"4) 카테고리 타입 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"// 5) 망타입 확인",
											"pm.test(\"5) 망타입 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    var recordset = jsonData.result.recordset;",
											"    ",
											"    if(query[\"net_typ\"] == \"01\" || query[\"net_typ\"] == \"02\"){",
											"        for(i in recordset){",
											"            pm.expect(recordset[i].is_fh).to.oneOf([\"Y\",\"N\"]);",
											"        }",
											"    }else{",
											"        for(i in recordset){",
											"            pm.expect(recordset[i].is_fh).to.eql(\"N\");",
											"        }",
											"    }",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Host",
										"value": "programming.fleta.com",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://{{mims}}/smartux/getSUXMAlbumList?sa_id=T61060140414&stb_mac=8c6d.5044.45dd&app_type=UX&start_num=0&req_count=2&paging_type=&schedule_code=4&net_typ=31&category_gb=I20&app_name=&ui_version=&pre_page=&cur_page=&dev_info=&os_info=&nw_info=&dev_model=&carrier_type=",
									"protocol": "http",
									"host": [
										"{{mims}}"
									],
									"path": [
										"smartux",
										"getSUXMAlbumList"
									],
									"query": [
										{
											"key": "sa_id",
											"value": "T61060140414"
										},
										{
											"key": "stb_mac",
											"value": "8c6d.5044.45dd"
										},
										{
											"key": "app_type",
											"value": "UX"
										},
										{
											"key": "start_num",
											"value": "0"
										},
										{
											"key": "req_count",
											"value": "2"
										},
										{
											"key": "paging_type",
											"value": ""
										},
										{
											"key": "schedule_code",
											"value": "4"
										},
										{
											"key": "net_typ",
											"value": "31"
										},
										{
											"key": "category_gb",
											"value": "I20"
										},
										{
											"key": "app_name",
											"value": ""
										},
										{
											"key": "ui_version",
											"value": ""
										},
										{
											"key": "pre_page",
											"value": ""
										},
										{
											"key": "cur_page",
											"value": ""
										},
										{
											"key": "dev_info",
											"value": ""
										},
										{
											"key": "os_info",
											"value": ""
										},
										{
											"key": "nw_info",
											"value": ""
										},
										{
											"key": "dev_model",
											"value": ""
										},
										{
											"key": "carrier_type",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "/smartux/getSUXMAlbumList_NTC36_일반 가입자_UX_1,X,X_31_I30 Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// 공통",
											"// WAS 정상응답 체크 (200여부)",
											"pm.test(\"[공통]WAS 정상응답 체크 (200여부)\", function () {",
											"    pm.response.to.have.status(200);   ",
											"});",
											"",
											"// 응답속도 체크(0.5초미만) 여부",
											"pm.test(\"[공통]응답속도 체크(0.5초미만)\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(500);",
											"});",
											"",
											"// 1) 가입자(일반/검수) 구분에 따른 응답 확인",
											"pm.test(\"1) 가입자(일반/검수) 구분에 따른 응답 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"// 2) 어플타입에 따른 응답 구분",
											"pm.test(\"2) 어플타입에 따른 응답 구분\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"// 3) 페이징 확인",
											"var query = {};",
											"pm.request.url.query.all().forEach((param) => { query[param.key] = param.value});",
											"pm.test(\"3) 페이징 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    var recordset = jsonData.result.recordset;",
											"    var total_count = jsonData.result.total_count;",
											"    ",
											"    if(query[\"start_num\"] == -1 && query[\"paging_type\"] != \"N\"){",
											"        // total 숫자 확인",
											"        pm.expect(recordset.length).to.eql(parseInt(total_count));",
											"        // total 개수 확인",
											"        pm.expect(recordset.length).to.eql(parseInt(total_count));",
											"        // 데이터 확인",
											"        for(i in recordset){",
											"            pm.expect(recordset[i].album_id).to.match(/\\w{15}/);",
											"        }",
											"    }else if(query[\"start_num\"] == 0){",
											"        // total 숫자 확인",
											"        pm.expect(jsonData.result.total_count).to.match(/\\d/);",
											"        // recordset null 확인",
											"        pm.expect(recordset).to.null;",
											"    }else{",
											"        let request = pm.request;",
											"        // 전체 조회를 위해 파라미터 값 수정",
											"        request.url.query[\"reference\"][\"start_num\"][\"value\"] = \"-1\";",
											"        request.url.query[\"reference\"][\"paging_type\"][\"value\"] = \"\";",
											"",
											"        pm.expect(recordset).to.not.empty;",
											"        pm.sendRequest(request, function (err, response) {",
											"            let total = response.json().result.recordset;",
											"        ",
											"            // 큐 sorting",
											"            if(query[\"start_num\"]<0){   // 시계 방향 회전",
											"                for(let i=0;i>query[\"start_num\"];i--){",
											"                    total.unshift(total.pop());",
											"                }",
											"            }else{   // 반시계 방향 회전",
											"                for(let i=1;i<query[\"start_num\"];i++){",
											"                    total.push(total.shift());",
											"                }",
											"            }",
											"",
											"            // 데이터 확인",
											"            for(let i in recordset){",
											"                // 정보 확인",
											"                pm.expect(recordset[i].album_id).to.match(/\\w{15}/);",
											"                // 순서 확인",
											"                pm.expect(recordset[i].album_id).to.eql(total[0].album_id);",
											"                total.push(total.shift());",
											"            }",
											"        });",
											"    }",
											"}); ",
											"",
											"// 4) 카테고리 타입 확인",
											"pm.test(\"4) 카테고리 타입 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"// 5) 망타입 확인",
											"pm.test(\"5) 망타입 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    var recordset = jsonData.result.recordset;",
											"    ",
											"    if(query[\"net_typ\"] == \"01\" || query[\"net_typ\"] == \"02\"){",
											"        for(i in recordset){",
											"            pm.expect(recordset[i].is_fh).to.oneOf([\"Y\",\"N\"]);",
											"        }",
											"    }else{",
											"        for(i in recordset){",
											"            pm.expect(recordset[i].is_fh).to.eql(\"N\");",
											"        }",
											"    }",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Host",
										"value": "programming.fleta.com",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://{{mims}}/smartux/getSUXMAlbumList?sa_id=T61060140414&stb_mac=8c6d.5044.45dd&app_type=UX&start_num=1&req_count=2&paging_type=&schedule_code=473&net_typ=31&category_gb=I30&app_name=&ui_version=&pre_page=&cur_page=&dev_info=&os_info=&nw_info=&dev_model=&carrier_type=",
									"protocol": "http",
									"host": [
										"{{mims}}"
									],
									"path": [
										"smartux",
										"getSUXMAlbumList"
									],
									"query": [
										{
											"key": "sa_id",
											"value": "T61060140414"
										},
										{
											"key": "stb_mac",
											"value": "8c6d.5044.45dd"
										},
										{
											"key": "app_type",
											"value": "UX"
										},
										{
											"key": "start_num",
											"value": "1"
										},
										{
											"key": "req_count",
											"value": "2"
										},
										{
											"key": "paging_type",
											"value": ""
										},
										{
											"key": "schedule_code",
											"value": "473"
										},
										{
											"key": "net_typ",
											"value": "31"
										},
										{
											"key": "category_gb",
											"value": "I30"
										},
										{
											"key": "app_name",
											"value": ""
										},
										{
											"key": "ui_version",
											"value": ""
										},
										{
											"key": "pre_page",
											"value": ""
										},
										{
											"key": "cur_page",
											"value": ""
										},
										{
											"key": "dev_info",
											"value": ""
										},
										{
											"key": "os_info",
											"value": ""
										},
										{
											"key": "nw_info",
											"value": ""
										},
										{
											"key": "dev_model",
											"value": ""
										},
										{
											"key": "carrier_type",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "/smartux/getSUXMAlbumList_NTC70_일반 가입자_SMA_1,X,X_31_I20 Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// 공통",
											"// WAS 정상응답 체크 (200여부)",
											"pm.test(\"[공통]WAS 정상응답 체크 (200여부)\", function () {",
											"    pm.response.to.have.status(200);   ",
											"});",
											"",
											"// 응답속도 체크(0.5초미만) 여부",
											"pm.test(\"[공통]응답속도 체크(0.5초미만)\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(500);",
											"});",
											"",
											"// 1) 가입자(일반/검수) 구분에 따른 응답 확인",
											"pm.test(\"1) 가입자(일반/검수) 구분에 따른 응답 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"// 2) 어플타입에 따른 응답 구분",
											"pm.test(\"2) 어플타입에 따른 응답 구분\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"// 3) 페이징 확인",
											"var query = {};",
											"pm.request.url.query.all().forEach((param) => { query[param.key] = param.value});",
											"pm.test(\"3) 페이징 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    var recordset = jsonData.result.recordset;",
											"    var total_count = jsonData.result.total_count;",
											"    ",
											"    if(query[\"start_num\"] == -1 && query[\"paging_type\"] != \"N\"){",
											"        // total 숫자 확인",
											"        pm.expect(recordset.length).to.eql(parseInt(total_count));",
											"        // total 개수 확인",
											"        pm.expect(recordset.length).to.eql(parseInt(total_count));",
											"        // 데이터 확인",
											"        for(i in recordset){",
											"            pm.expect(recordset[i].album_id).to.match(/\\w{15}/);",
											"        }",
											"    }else if(query[\"start_num\"] == 0){",
											"        // total 숫자 확인",
											"        pm.expect(jsonData.result.total_count).to.match(/\\d/);",
											"        // recordset null 확인",
											"        pm.expect(recordset).to.null;",
											"    }else{",
											"        let request = pm.request;",
											"        // 전체 조회를 위해 파라미터 값 수정",
											"        request.url.query[\"reference\"][\"start_num\"][\"value\"] = \"-1\";",
											"        request.url.query[\"reference\"][\"paging_type\"][\"value\"] = \"\";",
											"",
											"        pm.expect(recordset).to.not.empty;",
											"        pm.sendRequest(request, function (err, response) {",
											"            let total = response.json().result.recordset;",
											"        ",
											"            // 큐 sorting",
											"            if(query[\"start_num\"]<0){   // 시계 방향 회전",
											"                for(let i=0;i>query[\"start_num\"];i--){",
											"                    total.unshift(total.pop());",
											"                }",
											"            }else{   // 반시계 방향 회전",
											"                for(let i=1;i<query[\"start_num\"];i++){",
											"                    total.push(total.shift());",
											"                }",
											"            }",
											"",
											"            // 데이터 확인",
											"            for(let i in recordset){",
											"                // 정보 확인",
											"                pm.expect(recordset[i].album_id).to.match(/\\w{15}/);",
											"                // 순서 확인",
											"                pm.expect(recordset[i].album_id).to.eql(total[0].album_id);",
											"                total.push(total.shift());",
											"            }",
											"        });",
											"    }",
											"}); ",
											"",
											"// 4) 카테고리 타입 확인",
											"pm.test(\"4) 카테고리 타입 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"// 5) 망타입 확인",
											"pm.test(\"5) 망타입 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    var recordset = jsonData.result.recordset;",
											"    ",
											"    if(query[\"net_typ\"] == \"01\" || query[\"net_typ\"] == \"02\"){",
											"        for(i in recordset){",
											"            pm.expect(recordset[i].is_fh).to.oneOf([\"Y\",\"N\"]);",
											"        }",
											"    }else{",
											"        for(i in recordset){",
											"            pm.expect(recordset[i].is_fh).to.eql(\"N\");",
											"        }",
											"    }",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Host",
										"value": "programming.fleta.com",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://{{mims}}/smartux/getSUXMAlbumList?sa_id=T61060140414&stb_mac=8c6d.5044.45dd&app_type=SMA&start_num=1&req_count=2&paging_type=&schedule_code=4&net_typ=31&category_gb=I20&app_name=&ui_version=&pre_page=&cur_page=&dev_info=&os_info=&nw_info=&dev_model=&carrier_type=",
									"protocol": "http",
									"host": [
										"{{mims}}"
									],
									"path": [
										"smartux",
										"getSUXMAlbumList"
									],
									"query": [
										{
											"key": "sa_id",
											"value": "T61060140414"
										},
										{
											"key": "stb_mac",
											"value": "8c6d.5044.45dd"
										},
										{
											"key": "app_type",
											"value": "SMA"
										},
										{
											"key": "start_num",
											"value": "1"
										},
										{
											"key": "req_count",
											"value": "2"
										},
										{
											"key": "paging_type",
											"value": ""
										},
										{
											"key": "schedule_code",
											"value": "4"
										},
										{
											"key": "net_typ",
											"value": "31"
										},
										{
											"key": "category_gb",
											"value": "I20"
										},
										{
											"key": "app_name",
											"value": ""
										},
										{
											"key": "ui_version",
											"value": ""
										},
										{
											"key": "pre_page",
											"value": ""
										},
										{
											"key": "cur_page",
											"value": ""
										},
										{
											"key": "dev_info",
											"value": ""
										},
										{
											"key": "os_info",
											"value": ""
										},
										{
											"key": "nw_info",
											"value": ""
										},
										{
											"key": "dev_model",
											"value": ""
										},
										{
											"key": "carrier_type",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "/smartux/getSUXMAlbumList_NTC81_일반 가입자_SUSA_-1,X,null_31_I30 Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// 공통",
											"// WAS 정상응답 체크 (200여부)",
											"pm.test(\"[공통]WAS 정상응답 체크 (200여부)\", function () {",
											"    pm.response.to.have.status(200);   ",
											"});",
											"",
											"// 응답속도 체크(0.5초미만) 여부",
											"pm.test(\"[공통]응답속도 체크(0.5초미만)\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(500);",
											"});",
											"",
											"// 1) 가입자(일반/검수) 구분에 따른 응답 확인",
											"pm.test(\"1) 가입자(일반/검수) 구분에 따른 응답 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"// 2) 어플타입에 따른 응답 구분",
											"pm.test(\"2) 어플타입에 따른 응답 구분\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"// 3) 페이징 확인",
											"var query = {};",
											"pm.request.url.query.all().forEach((param) => { query[param.key] = param.value});",
											"pm.test(\"3) 페이징 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    var recordset = jsonData.result.recordset;",
											"    var total_count = jsonData.result.total_count;",
											"    ",
											"    if(query[\"start_num\"] == -1 && query[\"paging_type\"] != \"N\"){",
											"        // total 숫자 확인",
											"        pm.expect(recordset.length).to.eql(parseInt(total_count));",
											"        // total 개수 확인",
											"        pm.expect(recordset.length).to.eql(parseInt(total_count));",
											"        // 데이터 확인",
											"        for(i in recordset){",
											"            pm.expect(recordset[i].album_id).to.match(/\\w{15}/);",
											"        }",
											"    }else if(query[\"start_num\"] == 0){",
											"        // total 숫자 확인",
											"        pm.expect(jsonData.result.total_count).to.match(/\\d/);",
											"        // recordset null 확인",
											"        pm.expect(recordset).to.null;",
											"    }else{",
											"        let request = pm.request;",
											"        // 전체 조회를 위해 파라미터 값 수정",
											"        request.url.query[\"reference\"][\"start_num\"][\"value\"] = \"-1\";",
											"        request.url.query[\"reference\"][\"paging_type\"][\"value\"] = \"\";",
											"",
											"        pm.expect(recordset).to.not.empty;",
											"        pm.sendRequest(request, function (err, response) {",
											"            let total = response.json().result.recordset;",
											"        ",
											"            // 큐 sorting",
											"            if(query[\"start_num\"]<0){   // 시계 방향 회전",
											"                for(let i=0;i>query[\"start_num\"];i--){",
											"                    total.unshift(total.pop());",
											"                }",
											"            }else{   // 반시계 방향 회전",
											"                for(let i=1;i<query[\"start_num\"];i++){",
											"                    total.push(total.shift());",
											"                }",
											"            }",
											"",
											"            // 데이터 확인",
											"            for(let i in recordset){",
											"                // 정보 확인",
											"                pm.expect(recordset[i].album_id).to.match(/\\w{15}/);",
											"                // 순서 확인",
											"                pm.expect(recordset[i].album_id).to.eql(total[0].album_id);",
											"                total.push(total.shift());",
											"            }",
											"        });",
											"    }",
											"}); ",
											"",
											"// 4) 카테고리 타입 확인",
											"pm.test(\"4) 카테고리 타입 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"// 5) 망타입 확인",
											"pm.test(\"5) 망타입 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    var recordset = jsonData.result.recordset;",
											"    ",
											"    if(query[\"net_typ\"] == \"01\" || query[\"net_typ\"] == \"02\"){",
											"        for(i in recordset){",
											"            pm.expect(recordset[i].is_fh).to.oneOf([\"Y\",\"N\"]);",
											"        }",
											"    }else{",
											"        for(i in recordset){",
											"            pm.expect(recordset[i].is_fh).to.eql(\"N\");",
											"        }",
											"    }",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Host",
										"value": "programming.fleta.com",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://{{mims}}/smartux/getSUXMAlbumList?sa_id=T61060140414&stb_mac=8c6d.5044.45dd&app_type=SUSA&start_num=-1&req_count=2&paging_type=&schedule_code=473&net_typ=31&category_gb=I30&app_name=&ui_version=&pre_page=&cur_page=&dev_info=&os_info=&nw_info=&dev_model=&carrier_type=",
									"protocol": "http",
									"host": [
										"{{mims}}"
									],
									"path": [
										"smartux",
										"getSUXMAlbumList"
									],
									"query": [
										{
											"key": "sa_id",
											"value": "T61060140414"
										},
										{
											"key": "stb_mac",
											"value": "8c6d.5044.45dd"
										},
										{
											"key": "app_type",
											"value": "SUSA"
										},
										{
											"key": "start_num",
											"value": "-1"
										},
										{
											"key": "req_count",
											"value": "2"
										},
										{
											"key": "paging_type",
											"value": ""
										},
										{
											"key": "schedule_code",
											"value": "473"
										},
										{
											"key": "net_typ",
											"value": "31"
										},
										{
											"key": "category_gb",
											"value": "I30"
										},
										{
											"key": "app_name",
											"value": ""
										},
										{
											"key": "ui_version",
											"value": ""
										},
										{
											"key": "pre_page",
											"value": ""
										},
										{
											"key": "cur_page",
											"value": ""
										},
										{
											"key": "dev_info",
											"value": ""
										},
										{
											"key": "os_info",
											"value": ""
										},
										{
											"key": "nw_info",
											"value": ""
										},
										{
											"key": "dev_model",
											"value": ""
										},
										{
											"key": "carrier_type",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "/smartux/getSUXMAlbumList_NTC90_일반 가입자_SUSA_-1,X,N_31_I30 Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// 공통",
											"// WAS 정상응답 체크 (200여부)",
											"pm.test(\"[공통]WAS 정상응답 체크 (200여부)\", function () {",
											"    pm.response.to.have.status(200);   ",
											"});",
											"",
											"// 응답속도 체크(0.5초미만) 여부",
											"pm.test(\"[공통]응답속도 체크(0.5초미만)\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(500);",
											"});",
											"",
											"// 1) 가입자(일반/검수) 구분에 따른 응답 확인",
											"pm.test(\"1) 가입자(일반/검수) 구분에 따른 응답 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"// 2) 어플타입에 따른 응답 구분",
											"pm.test(\"2) 어플타입에 따른 응답 구분\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"// 3) 페이징 확인",
											"var query = {};",
											"pm.request.url.query.all().forEach((param) => { query[param.key] = param.value});",
											"pm.test(\"3) 페이징 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    var recordset = jsonData.result.recordset;",
											"    var total_count = jsonData.result.total_count;",
											"    ",
											"    if(query[\"start_num\"] == -1 && query[\"paging_type\"] != \"N\"){",
											"        // total 숫자 확인",
											"        pm.expect(recordset.length).to.eql(parseInt(total_count));",
											"        // total 개수 확인",
											"        pm.expect(recordset.length).to.eql(parseInt(total_count));",
											"        // 데이터 확인",
											"        for(i in recordset){",
											"            pm.expect(recordset[i].album_id).to.match(/\\w{15}/);",
											"        }",
											"    }else if(query[\"start_num\"] == 0){",
											"        // total 숫자 확인",
											"        pm.expect(jsonData.result.total_count).to.match(/\\d/);",
											"        // recordset null 확인",
											"        pm.expect(recordset).to.null;",
											"    }else{",
											"        let request = pm.request;",
											"        // 전체 조회를 위해 파라미터 값 수정",
											"        request.url.query[\"reference\"][\"start_num\"][\"value\"] = \"-1\";",
											"        request.url.query[\"reference\"][\"paging_type\"][\"value\"] = \"\";",
											"",
											"        pm.expect(recordset).to.not.empty;",
											"        pm.sendRequest(request, function (err, response) {",
											"            let total = response.json().result.recordset;",
											"        ",
											"            // 큐 sorting",
											"            if(query[\"start_num\"]<0){   // 시계 방향 회전",
											"                for(let i=0;i>query[\"start_num\"];i--){",
											"                    total.unshift(total.pop());",
											"                }",
											"            }else{   // 반시계 방향 회전",
											"                for(let i=1;i<query[\"start_num\"];i++){",
											"                    total.push(total.shift());",
											"                }",
											"            }",
											"",
											"            // 데이터 확인",
											"            for(let i in recordset){",
											"                // 정보 확인",
											"                pm.expect(recordset[i].album_id).to.match(/\\w{15}/);",
											"                // 순서 확인",
											"                pm.expect(recordset[i].album_id).to.eql(total[0].album_id);",
											"                total.push(total.shift());",
											"            }",
											"        });",
											"    }",
											"}); ",
											"",
											"// 4) 카테고리 타입 확인",
											"pm.test(\"4) 카테고리 타입 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"// 5) 망타입 확인",
											"pm.test(\"5) 망타입 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    var recordset = jsonData.result.recordset;",
											"    ",
											"    if(query[\"net_typ\"] == \"01\" || query[\"net_typ\"] == \"02\"){",
											"        for(i in recordset){",
											"            pm.expect(recordset[i].is_fh).to.oneOf([\"Y\",\"N\"]);",
											"        }",
											"    }else{",
											"        for(i in recordset){",
											"            pm.expect(recordset[i].is_fh).to.eql(\"N\");",
											"        }",
											"    }",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Host",
										"value": "programming.fleta.com",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://{{mims}}/smartux/getSUXMAlbumList?sa_id=T61060140414&stb_mac=8c6d.5044.45dd&app_type=SUSA&start_num=-1&req_count=2&paging_type=N&schedule_code=473&net_typ=31&category_gb=I30&app_name=&ui_version=&pre_page=&cur_page=&dev_info=&os_info=&nw_info=&dev_model=&carrier_type=",
									"protocol": "http",
									"host": [
										"{{mims}}"
									],
									"path": [
										"smartux",
										"getSUXMAlbumList"
									],
									"query": [
										{
											"key": "sa_id",
											"value": "T61060140414"
										},
										{
											"key": "stb_mac",
											"value": "8c6d.5044.45dd"
										},
										{
											"key": "app_type",
											"value": "SUSA"
										},
										{
											"key": "start_num",
											"value": "-1"
										},
										{
											"key": "req_count",
											"value": "2"
										},
										{
											"key": "paging_type",
											"value": "N"
										},
										{
											"key": "schedule_code",
											"value": "473"
										},
										{
											"key": "net_typ",
											"value": "31"
										},
										{
											"key": "category_gb",
											"value": "I30"
										},
										{
											"key": "app_name",
											"value": ""
										},
										{
											"key": "ui_version",
											"value": ""
										},
										{
											"key": "pre_page",
											"value": ""
										},
										{
											"key": "cur_page",
											"value": ""
										},
										{
											"key": "dev_info",
											"value": ""
										},
										{
											"key": "os_info",
											"value": ""
										},
										{
											"key": "nw_info",
											"value": ""
										},
										{
											"key": "dev_model",
											"value": ""
										},
										{
											"key": "carrier_type",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "/smartux/getSUXMAlbumList_NTC110_검수 가입자_UX_-1,X,null_01_null Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// 공통",
											"// WAS 정상응답 체크 (200여부)",
											"pm.test(\"[공통]WAS 정상응답 체크 (200여부)\", function () {",
											"    pm.response.to.have.status(200);   ",
											"});",
											"",
											"// 응답속도 체크(0.5초미만) 여부",
											"pm.test(\"[공통]응답속도 체크(0.5초미만)\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(500);",
											"});",
											"",
											"// 1) 가입자(일반/검수) 구분에 따른 응답 확인",
											"pm.test(\"1) 가입자(일반/검수) 구분에 따른 응답 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"// 2) 어플타입에 따른 응답 구분",
											"pm.test(\"2) 어플타입에 따른 응답 구분\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"// 3) 페이징 확인",
											"var query = {};",
											"pm.request.url.query.all().forEach((param) => { query[param.key] = param.value});",
											"pm.test(\"3) 페이징 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    var recordset = jsonData.result.recordset;",
											"    var total_count = jsonData.result.total_count;",
											"    ",
											"    if(query[\"start_num\"] == -1 && query[\"paging_type\"] != \"N\"){",
											"        // total 숫자 확인",
											"        pm.expect(recordset.length).to.eql(parseInt(total_count));",
											"        // total 개수 확인",
											"        pm.expect(recordset.length).to.eql(parseInt(total_count));",
											"        // 데이터 확인",
											"        for(i in recordset){",
											"            pm.expect(recordset[i].album_id).to.match(/\\w{15}/);",
											"        }",
											"    }else if(query[\"start_num\"] == 0){",
											"        // total 숫자 확인",
											"        pm.expect(jsonData.result.total_count).to.match(/\\d/);",
											"        // recordset null 확인",
											"        pm.expect(recordset).to.null;",
											"    }else{",
											"        let request = pm.request;",
											"        // 전체 조회를 위해 파라미터 값 수정",
											"        request.url.query[\"reference\"][\"start_num\"][\"value\"] = \"-1\";",
											"        request.url.query[\"reference\"][\"paging_type\"][\"value\"] = \"\";",
											"",
											"        pm.expect(recordset).to.not.empty;",
											"        pm.sendRequest(request, function (err, response) {",
											"            let total = response.json().result.recordset;",
											"        ",
											"            // 큐 sorting",
											"            if(query[\"start_num\"]<0){   // 시계 방향 회전",
											"                for(let i=0;i>query[\"start_num\"];i--){",
											"                    total.unshift(total.pop());",
											"                }",
											"            }else{   // 반시계 방향 회전",
											"                for(let i=1;i<query[\"start_num\"];i++){",
											"                    total.push(total.shift());",
											"                }",
											"            }",
											"",
											"            // 데이터 확인",
											"            for(let i in recordset){",
											"                // 정보 확인",
											"                pm.expect(recordset[i].album_id).to.match(/\\w{15}/);",
											"                // 순서 확인",
											"                pm.expect(recordset[i].album_id).to.eql(total[0].album_id);",
											"                total.push(total.shift());",
											"            }",
											"        });",
											"    }",
											"}); ",
											"",
											"// 4) 카테고리 타입 확인",
											"pm.test(\"4) 카테고리 타입 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"// 5) 망타입 확인",
											"pm.test(\"5) 망타입 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    var recordset = jsonData.result.recordset;",
											"    ",
											"    if(query[\"net_typ\"] == \"01\" || query[\"net_typ\"] == \"02\"){",
											"        for(i in recordset){",
											"            pm.expect(recordset[i].is_fh).to.oneOf([\"Y\",\"N\"]);",
											"        }",
											"    }else{",
											"        for(i in recordset){",
											"            pm.expect(recordset[i].is_fh).to.eql(\"N\");",
											"        }",
											"    }",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Host",
										"value": "programming.fleta.com",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://{{mims}}/smartux/getSUXMAlbumList?sa_id=T61060140414&stb_mac=v000.3529.4486&app_type=UX&start_num=-1&req_count=2&paging_type=&schedule_code=4&net_typ=01&category_gb=&app_name=&ui_version=&pre_page=&cur_page=&dev_info=&os_info=&nw_info=&dev_model=&carrier_type=",
									"protocol": "http",
									"host": [
										"{{mims}}"
									],
									"path": [
										"smartux",
										"getSUXMAlbumList"
									],
									"query": [
										{
											"key": "sa_id",
											"value": "T61060140414"
										},
										{
											"key": "stb_mac",
											"value": "v000.3529.4486"
										},
										{
											"key": "app_type",
											"value": "UX"
										},
										{
											"key": "start_num",
											"value": "-1"
										},
										{
											"key": "req_count",
											"value": "2"
										},
										{
											"key": "paging_type",
											"value": ""
										},
										{
											"key": "schedule_code",
											"value": "4"
										},
										{
											"key": "net_typ",
											"value": "01"
										},
										{
											"key": "category_gb",
											"value": ""
										},
										{
											"key": "app_name",
											"value": ""
										},
										{
											"key": "ui_version",
											"value": ""
										},
										{
											"key": "pre_page",
											"value": ""
										},
										{
											"key": "cur_page",
											"value": ""
										},
										{
											"key": "dev_info",
											"value": ""
										},
										{
											"key": "os_info",
											"value": ""
										},
										{
											"key": "nw_info",
											"value": ""
										},
										{
											"key": "dev_model",
											"value": ""
										},
										{
											"key": "carrier_type",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "/smartux/getSUXMAlbumList_NTC117_검수 가입자_UX_-1,X,null_31_I30 Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// 공통",
											"// WAS 정상응답 체크 (200여부)",
											"pm.test(\"[공통]WAS 정상응답 체크 (200여부)\", function () {",
											"    pm.response.to.have.status(200);   ",
											"});",
											"",
											"// 응답속도 체크(0.5초미만) 여부",
											"pm.test(\"[공통]응답속도 체크(0.5초미만)\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(500);",
											"});",
											"",
											"// 1) 가입자(일반/검수) 구분에 따른 응답 확인",
											"pm.test(\"1) 가입자(일반/검수) 구분에 따른 응답 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"// 2) 어플타입에 따른 응답 구분",
											"pm.test(\"2) 어플타입에 따른 응답 구분\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"// 3) 페이징 확인",
											"var query = {};",
											"pm.request.url.query.all().forEach((param) => { query[param.key] = param.value});",
											"pm.test(\"3) 페이징 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    var recordset = jsonData.result.recordset;",
											"    var total_count = jsonData.result.total_count;",
											"    ",
											"    if(query[\"start_num\"] == -1 && query[\"paging_type\"] != \"N\"){",
											"        // total 숫자 확인",
											"        pm.expect(recordset.length).to.eql(parseInt(total_count));",
											"        // total 개수 확인",
											"        pm.expect(recordset.length).to.eql(parseInt(total_count));",
											"        // 데이터 확인",
											"        for(i in recordset){",
											"            pm.expect(recordset[i].album_id).to.match(/\\w{15}/);",
											"        }",
											"    }else if(query[\"start_num\"] == 0){",
											"        // total 숫자 확인",
											"        pm.expect(jsonData.result.total_count).to.match(/\\d/);",
											"        // recordset null 확인",
											"        pm.expect(recordset).to.null;",
											"    }else{",
											"        let request = pm.request;",
											"        // 전체 조회를 위해 파라미터 값 수정",
											"        request.url.query[\"reference\"][\"start_num\"][\"value\"] = \"-1\";",
											"        request.url.query[\"reference\"][\"paging_type\"][\"value\"] = \"\";",
											"",
											"        pm.expect(recordset).to.not.empty;",
											"        pm.sendRequest(request, function (err, response) {",
											"            let total = response.json().result.recordset;",
											"        ",
											"            // 큐 sorting",
											"            if(query[\"start_num\"]<0){   // 시계 방향 회전",
											"                for(let i=0;i>query[\"start_num\"];i--){",
											"                    total.unshift(total.pop());",
											"                }",
											"            }else{   // 반시계 방향 회전",
											"                for(let i=1;i<query[\"start_num\"];i++){",
											"                    total.push(total.shift());",
											"                }",
											"            }",
											"",
											"            // 데이터 확인",
											"            for(let i in recordset){",
											"                // 정보 확인",
											"                pm.expect(recordset[i].album_id).to.match(/\\w{15}/);",
											"                // 순서 확인",
											"                pm.expect(recordset[i].album_id).to.eql(total[0].album_id);",
											"                total.push(total.shift());",
											"            }",
											"        });",
											"    }",
											"}); ",
											"",
											"// 4) 카테고리 타입 확인",
											"pm.test(\"4) 카테고리 타입 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"// 5) 망타입 확인",
											"pm.test(\"5) 망타입 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    var recordset = jsonData.result.recordset;",
											"    ",
											"    if(query[\"net_typ\"] == \"01\" || query[\"net_typ\"] == \"02\"){",
											"        for(i in recordset){",
											"            pm.expect(recordset[i].is_fh).to.oneOf([\"Y\",\"N\"]);",
											"        }",
											"    }else{",
											"        for(i in recordset){",
											"            pm.expect(recordset[i].is_fh).to.eql(\"N\");",
											"        }",
											"    }",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Host",
										"value": "programming.fleta.com",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://{{mims}}/smartux/getSUXMAlbumList?sa_id=T61060140414&stb_mac=v000.3529.4486&app_type=UX&start_num=-1&req_count=2&paging_type=&schedule_code=473&net_typ=31&category_gb=I30&app_name=&ui_version=&pre_page=&cur_page=&dev_info=&os_info=&nw_info=&dev_model=&carrier_type=",
									"protocol": "http",
									"host": [
										"{{mims}}"
									],
									"path": [
										"smartux",
										"getSUXMAlbumList"
									],
									"query": [
										{
											"key": "sa_id",
											"value": "T61060140414"
										},
										{
											"key": "stb_mac",
											"value": "v000.3529.4486"
										},
										{
											"key": "app_type",
											"value": "UX"
										},
										{
											"key": "start_num",
											"value": "-1"
										},
										{
											"key": "req_count",
											"value": "2"
										},
										{
											"key": "paging_type",
											"value": ""
										},
										{
											"key": "schedule_code",
											"value": "473"
										},
										{
											"key": "net_typ",
											"value": "31"
										},
										{
											"key": "category_gb",
											"value": "I30"
										},
										{
											"key": "app_name",
											"value": ""
										},
										{
											"key": "ui_version",
											"value": ""
										},
										{
											"key": "pre_page",
											"value": ""
										},
										{
											"key": "cur_page",
											"value": ""
										},
										{
											"key": "dev_info",
											"value": ""
										},
										{
											"key": "os_info",
											"value": ""
										},
										{
											"key": "nw_info",
											"value": ""
										},
										{
											"key": "dev_model",
											"value": ""
										},
										{
											"key": "carrier_type",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "/smartux/getSUXMAlbumList_NTC187_검수 가입자_SUSA_-1,X,null_31_I20 Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// 공통",
											"// WAS 정상응답 체크 (200여부)",
											"pm.test(\"[공통]WAS 정상응답 체크 (200여부)\", function () {",
											"    pm.response.to.have.status(200);   ",
											"});",
											"",
											"// 응답속도 체크(0.5초미만) 여부",
											"pm.test(\"[공통]응답속도 체크(0.5초미만)\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(500);",
											"});",
											"",
											"// 1) 가입자(일반/검수) 구분에 따른 응답 확인",
											"pm.test(\"1) 가입자(일반/검수) 구분에 따른 응답 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"// 2) 어플타입에 따른 응답 구분",
											"pm.test(\"2) 어플타입에 따른 응답 구분\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"// 3) 페이징 확인",
											"var query = {};",
											"pm.request.url.query.all().forEach((param) => { query[param.key] = param.value});",
											"pm.test(\"3) 페이징 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    var recordset = jsonData.result.recordset;",
											"    var total_count = jsonData.result.total_count;",
											"    ",
											"    if(query[\"start_num\"] == -1 && query[\"paging_type\"] != \"N\"){",
											"        // total 숫자 확인",
											"        pm.expect(recordset.length).to.eql(parseInt(total_count));",
											"        // total 개수 확인",
											"        pm.expect(recordset.length).to.eql(parseInt(total_count));",
											"        // 데이터 확인",
											"        for(i in recordset){",
											"            pm.expect(recordset[i].album_id).to.match(/\\w{15}/);",
											"        }",
											"    }else if(query[\"start_num\"] == 0){",
											"        // total 숫자 확인",
											"        pm.expect(jsonData.result.total_count).to.match(/\\d/);",
											"        // recordset null 확인",
											"        pm.expect(recordset).to.null;",
											"    }else{",
											"        let request = pm.request;",
											"        // 전체 조회를 위해 파라미터 값 수정",
											"        request.url.query[\"reference\"][\"start_num\"][\"value\"] = \"-1\";",
											"        request.url.query[\"reference\"][\"paging_type\"][\"value\"] = \"\";",
											"",
											"        pm.expect(recordset).to.not.empty;",
											"        pm.sendRequest(request, function (err, response) {",
											"            let total = response.json().result.recordset;",
											"        ",
											"            // 큐 sorting",
											"            if(query[\"start_num\"]<0){   // 시계 방향 회전",
											"                for(let i=0;i>query[\"start_num\"];i--){",
											"                    total.unshift(total.pop());",
											"                }",
											"            }else{   // 반시계 방향 회전",
											"                for(let i=1;i<query[\"start_num\"];i++){",
											"                    total.push(total.shift());",
											"                }",
											"            }",
											"",
											"            // 데이터 확인",
											"            for(let i in recordset){",
											"                // 정보 확인",
											"                pm.expect(recordset[i].album_id).to.match(/\\w{15}/);",
											"                // 순서 확인",
											"                pm.expect(recordset[i].album_id).to.eql(total[0].album_id);",
											"                total.push(total.shift());",
											"            }",
											"        });",
											"    }",
											"}); ",
											"",
											"// 4) 카테고리 타입 확인",
											"pm.test(\"4) 카테고리 타입 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"// 5) 망타입 확인",
											"pm.test(\"5) 망타입 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    var recordset = jsonData.result.recordset;",
											"    ",
											"    if(query[\"net_typ\"] == \"01\" || query[\"net_typ\"] == \"02\"){",
											"        for(i in recordset){",
											"            pm.expect(recordset[i].is_fh).to.oneOf([\"Y\",\"N\"]);",
											"        }",
											"    }else{",
											"        for(i in recordset){",
											"            pm.expect(recordset[i].is_fh).to.eql(\"N\");",
											"        }",
											"    }",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Host",
										"value": "programming.fleta.com",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://{{mims}}/smartux/getSUXMAlbumList?sa_id=T61060140414&stb_mac=v000.3529.4486&app_type=SUSA&start_num=-1&req_count=2&paging_type=&schedule_code=4&net_typ=31&category_gb=I20&app_name=&ui_version=&pre_page=&cur_page=&dev_info=&os_info=&nw_info=&dev_model=&carrier_type=",
									"protocol": "http",
									"host": [
										"{{mims}}"
									],
									"path": [
										"smartux",
										"getSUXMAlbumList"
									],
									"query": [
										{
											"key": "sa_id",
											"value": "T61060140414"
										},
										{
											"key": "stb_mac",
											"value": "v000.3529.4486"
										},
										{
											"key": "app_type",
											"value": "SUSA"
										},
										{
											"key": "start_num",
											"value": "-1"
										},
										{
											"key": "req_count",
											"value": "2"
										},
										{
											"key": "paging_type",
											"value": ""
										},
										{
											"key": "schedule_code",
											"value": "4"
										},
										{
											"key": "net_typ",
											"value": "31"
										},
										{
											"key": "category_gb",
											"value": "I20"
										},
										{
											"key": "app_name",
											"value": ""
										},
										{
											"key": "ui_version",
											"value": ""
										},
										{
											"key": "pre_page",
											"value": ""
										},
										{
											"key": "cur_page",
											"value": ""
										},
										{
											"key": "dev_info",
											"value": ""
										},
										{
											"key": "os_info",
											"value": ""
										},
										{
											"key": "nw_info",
											"value": ""
										},
										{
											"key": "dev_model",
											"value": ""
										},
										{
											"key": "carrier_type",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "/smartux/getSUXMAlbumList_NTC2_일반 가입자_UX_-1,X,null_01_null Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// 공통",
											"// WAS 정상응답 체크 (200여부)",
											"pm.test(\"[공통]WAS 정상응답 체크 (200여부)\", function () {",
											"    pm.response.to.have.status(200);   ",
											"});",
											"",
											"// 응답속도 체크(0.5초미만) 여부",
											"pm.test(\"[공통]응답속도 체크(0.5초미만)\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(500);",
											"});",
											"",
											"// 1) 가입자(일반/검수) 구분에 따른 응답 확인",
											"pm.test(\"1) 가입자(일반/검수) 구분에 따른 응답 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"// 2) 어플타입에 따른 응답 구분",
											"pm.test(\"2) 어플타입에 따른 응답 구분\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"// 3) 페이징 확인",
											"var query = {};",
											"pm.request.url.query.all().forEach((param) => { query[param.key] = param.value});",
											"pm.test(\"3) 페이징 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    var recordset = jsonData.result.recordset;",
											"    var total_count = jsonData.result.total_count;",
											"    ",
											"    if(query[\"start_num\"] == -1 && query[\"paging_type\"] != \"N\"){",
											"        // total 숫자 확인",
											"        pm.expect(recordset.length).to.eql(parseInt(total_count));",
											"        // total 개수 확인",
											"        pm.expect(recordset.length).to.eql(parseInt(total_count));",
											"        // 데이터 확인",
											"        for(i in recordset){",
											"            pm.expect(recordset[i].album_id).to.match(/\\w{15}/);",
											"        }",
											"    }else if(query[\"start_num\"] == 0){",
											"        // total 숫자 확인",
											"        pm.expect(jsonData.result.total_count).to.match(/\\d/);",
											"        // recordset null 확인",
											"        pm.expect(recordset).to.null;",
											"    }else{",
											"        let request = pm.request;",
											"        // 전체 조회를 위해 파라미터 값 수정",
											"        request.url.query[\"reference\"][\"start_num\"][\"value\"] = \"-1\";",
											"        request.url.query[\"reference\"][\"paging_type\"][\"value\"] = \"\";",
											"",
											"        pm.expect(recordset).to.not.empty;",
											"        pm.sendRequest(request, function (err, response) {",
											"            let total = response.json().result.recordset;",
											"        ",
											"            // 큐 sorting",
											"            if(query[\"start_num\"]<0){   // 시계 방향 회전",
											"                for(let i=0;i>query[\"start_num\"];i--){",
											"                    total.unshift(total.pop());",
											"                }",
											"            }else{   // 반시계 방향 회전",
											"                for(let i=1;i<query[\"start_num\"];i++){",
											"                    total.push(total.shift());",
											"                }",
											"            }",
											"",
											"            // 데이터 확인",
											"            for(let i in recordset){",
											"                // 정보 확인",
											"                pm.expect(recordset[i].album_id).to.match(/\\w{15}/);",
											"                // 순서 확인",
											"                pm.expect(recordset[i].album_id).to.eql(total[0].album_id);",
											"                total.push(total.shift());",
											"            }",
											"        });",
											"    }",
											"}); ",
											"",
											"// 4) 카테고리 타입 확인",
											"pm.test(\"4) 카테고리 타입 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"// 5) 망타입 확인",
											"pm.test(\"5) 망타입 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    var recordset = jsonData.result.recordset;",
											"    ",
											"    if(query[\"net_typ\"] == \"01\" || query[\"net_typ\"] == \"02\"){",
											"        for(i in recordset){",
											"            pm.expect(recordset[i].is_fh).to.oneOf([\"Y\",\"N\"]);",
											"        }",
											"    }else{",
											"        for(i in recordset){",
											"            pm.expect(recordset[i].is_fh).to.eql(\"N\");",
											"        }",
											"    }",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Host",
										"value": "programming.fleta.com",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://{{mims}}/smartux/getSUXMAlbumList?sa_id=T61060140414&stb_mac=8c6d.5044.45dd&app_type=UX&start_num=-1&req_count=2&paging_type=&schedule_code=4&net_typ=01&category_gb=&app_name=&ui_version=&pre_page=&cur_page=&dev_info=&os_info=&nw_info=&dev_model=&carrier_type=",
									"protocol": "http",
									"host": [
										"{{mims}}"
									],
									"path": [
										"smartux",
										"getSUXMAlbumList"
									],
									"query": [
										{
											"key": "sa_id",
											"value": "T61060140414"
										},
										{
											"key": "stb_mac",
											"value": "8c6d.5044.45dd"
										},
										{
											"key": "app_type",
											"value": "UX"
										},
										{
											"key": "start_num",
											"value": "-1"
										},
										{
											"key": "req_count",
											"value": "2"
										},
										{
											"key": "paging_type",
											"value": ""
										},
										{
											"key": "schedule_code",
											"value": "4"
										},
										{
											"key": "net_typ",
											"value": "01"
										},
										{
											"key": "category_gb",
											"value": ""
										},
										{
											"key": "app_name",
											"value": ""
										},
										{
											"key": "ui_version",
											"value": ""
										},
										{
											"key": "pre_page",
											"value": ""
										},
										{
											"key": "cur_page",
											"value": ""
										},
										{
											"key": "dev_info",
											"value": ""
										},
										{
											"key": "os_info",
											"value": ""
										},
										{
											"key": "nw_info",
											"value": ""
										},
										{
											"key": "dev_model",
											"value": ""
										},
										{
											"key": "carrier_type",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "/smartux/getSUXMAlbumList_NTC11_일반 가입자_UX_-1,X,N_01_null Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// 공통",
											"// WAS 정상응답 체크 (200여부)",
											"pm.test(\"[공통]WAS 정상응답 체크 (200여부)\", function () {",
											"    pm.response.to.have.status(200);   ",
											"});",
											"",
											"// 응답속도 체크(0.5초미만) 여부",
											"pm.test(\"[공통]응답속도 체크(0.5초미만)\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(500);",
											"});",
											"",
											"// 1) 가입자(일반/검수) 구분에 따른 응답 확인",
											"pm.test(\"1) 가입자(일반/검수) 구분에 따른 응답 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"// 2) 어플타입에 따른 응답 구분",
											"pm.test(\"2) 어플타입에 따른 응답 구분\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"// 3) 페이징 확인",
											"var query = {};",
											"pm.request.url.query.all().forEach((param) => { query[param.key] = param.value});",
											"pm.test(\"3) 페이징 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    var recordset = jsonData.result.recordset;",
											"    var total_count = jsonData.result.total_count;",
											"    ",
											"    if(query[\"start_num\"] == -1 && query[\"paging_type\"] != \"N\"){",
											"        // total 숫자 확인",
											"        pm.expect(recordset.length).to.eql(parseInt(total_count));",
											"        // total 개수 확인",
											"        pm.expect(recordset.length).to.eql(parseInt(total_count));",
											"        // 데이터 확인",
											"        for(i in recordset){",
											"            pm.expect(recordset[i].album_id).to.match(/\\w{15}/);",
											"        }",
											"    }else if(query[\"start_num\"] == 0){",
											"        // total 숫자 확인",
											"        pm.expect(jsonData.result.total_count).to.match(/\\d/);",
											"        // recordset null 확인",
											"        pm.expect(recordset).to.null;",
											"    }else{",
											"        let request = pm.request;",
											"        // 전체 조회를 위해 파라미터 값 수정",
											"        request.url.query[\"reference\"][\"start_num\"][\"value\"] = \"-1\";",
											"        request.url.query[\"reference\"][\"paging_type\"][\"value\"] = \"\";",
											"",
											"        pm.expect(recordset).to.not.empty;",
											"        pm.sendRequest(request, function (err, response) {",
											"            let total = response.json().result.recordset;",
											"        ",
											"            // 큐 sorting",
											"            if(query[\"start_num\"]<0){   // 시계 방향 회전",
											"                for(let i=0;i>query[\"start_num\"];i--){",
											"                    total.unshift(total.pop());",
											"                }",
											"            }else{   // 반시계 방향 회전",
											"                for(let i=1;i<query[\"start_num\"];i++){",
											"                    total.push(total.shift());",
											"                }",
											"            }",
											"",
											"            // 데이터 확인",
											"            for(let i in recordset){",
											"                // 정보 확인",
											"                pm.expect(recordset[i].album_id).to.match(/\\w{15}/);",
											"                // 순서 확인",
											"                pm.expect(recordset[i].album_id).to.eql(total[0].album_id);",
											"                total.push(total.shift());",
											"            }",
											"        });",
											"    }",
											"}); ",
											"",
											"// 4) 카테고리 타입 확인",
											"pm.test(\"4) 카테고리 타입 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"// 5) 망타입 확인",
											"pm.test(\"5) 망타입 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    var recordset = jsonData.result.recordset;",
											"    ",
											"    if(query[\"net_typ\"] == \"01\" || query[\"net_typ\"] == \"02\"){",
											"        for(i in recordset){",
											"            pm.expect(recordset[i].is_fh).to.oneOf([\"Y\",\"N\"]);",
											"        }",
											"    }else{",
											"        for(i in recordset){",
											"            pm.expect(recordset[i].is_fh).to.eql(\"N\");",
											"        }",
											"    }",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Host",
										"value": "programming.fleta.com",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://{{mims}}/smartux/getSUXMAlbumList?sa_id=T61060140414&stb_mac=8c6d.5044.45dd&app_type=UX&start_num=-1&req_count=2&paging_type=N&schedule_code=4&net_typ=01&category_gb=&app_name=&ui_version=&pre_page=&cur_page=&dev_info=&os_info=&nw_info=&dev_model=&carrier_type=",
									"protocol": "http",
									"host": [
										"{{mims}}"
									],
									"path": [
										"smartux",
										"getSUXMAlbumList"
									],
									"query": [
										{
											"key": "sa_id",
											"value": "T61060140414"
										},
										{
											"key": "stb_mac",
											"value": "8c6d.5044.45dd"
										},
										{
											"key": "app_type",
											"value": "UX"
										},
										{
											"key": "start_num",
											"value": "-1"
										},
										{
											"key": "req_count",
											"value": "2"
										},
										{
											"key": "paging_type",
											"value": "N"
										},
										{
											"key": "schedule_code",
											"value": "4"
										},
										{
											"key": "net_typ",
											"value": "01"
										},
										{
											"key": "category_gb",
											"value": ""
										},
										{
											"key": "app_name",
											"value": ""
										},
										{
											"key": "ui_version",
											"value": ""
										},
										{
											"key": "pre_page",
											"value": ""
										},
										{
											"key": "cur_page",
											"value": ""
										},
										{
											"key": "dev_info",
											"value": ""
										},
										{
											"key": "os_info",
											"value": ""
										},
										{
											"key": "nw_info",
											"value": ""
										},
										{
											"key": "dev_model",
											"value": ""
										},
										{
											"key": "carrier_type",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "/smartux/getSUXMAlbumList_NTC15_일반 가입자_UX_-1,X,N_02_I30 Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// 공통",
											"// WAS 정상응답 체크 (200여부)",
											"pm.test(\"[공통]WAS 정상응답 체크 (200여부)\", function () {",
											"    pm.response.to.have.status(200);   ",
											"});",
											"",
											"// 응답속도 체크(0.5초미만) 여부",
											"pm.test(\"[공통]응답속도 체크(0.5초미만)\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(500);",
											"});",
											"",
											"// 1) 가입자(일반/검수) 구분에 따른 응답 확인",
											"pm.test(\"1) 가입자(일반/검수) 구분에 따른 응답 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"// 2) 어플타입에 따른 응답 구분",
											"pm.test(\"2) 어플타입에 따른 응답 구분\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"// 3) 페이징 확인",
											"var query = {};",
											"pm.request.url.query.all().forEach((param) => { query[param.key] = param.value});",
											"pm.test(\"3) 페이징 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    var recordset = jsonData.result.recordset;",
											"    var total_count = jsonData.result.total_count;",
											"    ",
											"    if(query[\"start_num\"] == -1 && query[\"paging_type\"] != \"N\"){",
											"        // total 숫자 확인",
											"        pm.expect(recordset.length).to.eql(parseInt(total_count));",
											"        // total 개수 확인",
											"        pm.expect(recordset.length).to.eql(parseInt(total_count));",
											"        // 데이터 확인",
											"        for(i in recordset){",
											"            pm.expect(recordset[i].album_id).to.match(/\\w{15}/);",
											"        }",
											"    }else if(query[\"start_num\"] == 0){",
											"        // total 숫자 확인",
											"        pm.expect(jsonData.result.total_count).to.match(/\\d/);",
											"        // recordset null 확인",
											"        pm.expect(recordset).to.null;",
											"    }else{",
											"        let request = pm.request;",
											"        // 전체 조회를 위해 파라미터 값 수정",
											"        request.url.query[\"reference\"][\"start_num\"][\"value\"] = \"-1\";",
											"        request.url.query[\"reference\"][\"paging_type\"][\"value\"] = \"\";",
											"",
											"        pm.expect(recordset).to.not.empty;",
											"        pm.sendRequest(request, function (err, response) {",
											"            let total = response.json().result.recordset;",
											"        ",
											"            // 큐 sorting",
											"            if(query[\"start_num\"]<0){   // 시계 방향 회전",
											"                for(let i=0;i>query[\"start_num\"];i--){",
											"                    total.unshift(total.pop());",
											"                }",
											"            }else{   // 반시계 방향 회전",
											"                for(let i=1;i<query[\"start_num\"];i++){",
											"                    total.push(total.shift());",
											"                }",
											"            }",
											"",
											"            // 데이터 확인",
											"            for(let i in recordset){",
											"                // 정보 확인",
											"                pm.expect(recordset[i].album_id).to.match(/\\w{15}/);",
											"                // 순서 확인",
											"                pm.expect(recordset[i].album_id).to.eql(total[0].album_id);",
											"                total.push(total.shift());",
											"            }",
											"        });",
											"    }",
											"}); ",
											"",
											"// 4) 카테고리 타입 확인",
											"pm.test(\"4) 카테고리 타입 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"// 5) 망타입 확인",
											"pm.test(\"5) 망타입 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    var recordset = jsonData.result.recordset;",
											"    ",
											"    if(query[\"net_typ\"] == \"01\" || query[\"net_typ\"] == \"02\"){",
											"        for(i in recordset){",
											"            pm.expect(recordset[i].is_fh).to.oneOf([\"Y\",\"N\"]);",
											"        }",
											"    }else{",
											"        for(i in recordset){",
											"            pm.expect(recordset[i].is_fh).to.eql(\"N\");",
											"        }",
											"    }",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Host",
										"value": "programming.fleta.com",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://{{mims}}/smartux/getSUXMAlbumList?sa_id=T61060140414&stb_mac=8c6d.5044.45dd&app_type=UX&start_num=-1&req_count=2&paging_type=N&schedule_code=473&net_typ=02&category_gb=I30&app_name=&ui_version=&pre_page=&cur_page=&dev_info=&os_info=&nw_info=&dev_model=&carrier_type=",
									"protocol": "http",
									"host": [
										"{{mims}}"
									],
									"path": [
										"smartux",
										"getSUXMAlbumList"
									],
									"query": [
										{
											"key": "sa_id",
											"value": "T61060140414"
										},
										{
											"key": "stb_mac",
											"value": "8c6d.5044.45dd"
										},
										{
											"key": "app_type",
											"value": "UX"
										},
										{
											"key": "start_num",
											"value": "-1"
										},
										{
											"key": "req_count",
											"value": "2"
										},
										{
											"key": "paging_type",
											"value": "N"
										},
										{
											"key": "schedule_code",
											"value": "473"
										},
										{
											"key": "net_typ",
											"value": "02"
										},
										{
											"key": "category_gb",
											"value": "I30"
										},
										{
											"key": "app_name",
											"value": ""
										},
										{
											"key": "ui_version",
											"value": ""
										},
										{
											"key": "pre_page",
											"value": ""
										},
										{
											"key": "cur_page",
											"value": ""
										},
										{
											"key": "dev_info",
											"value": ""
										},
										{
											"key": "os_info",
											"value": ""
										},
										{
											"key": "nw_info",
											"value": ""
										},
										{
											"key": "dev_model",
											"value": ""
										},
										{
											"key": "carrier_type",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "/smartux/getSUXMAlbumList_NTC37_일반 가입자_SMA_-1,X,null_01_I20 Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// 공통",
											"// WAS 정상응답 체크 (200여부)",
											"pm.test(\"[공통]WAS 정상응답 체크 (200여부)\", function () {",
											"    pm.response.to.have.status(200);   ",
											"});",
											"",
											"// 응답속도 체크(0.5초미만) 여부",
											"pm.test(\"[공통]응답속도 체크(0.5초미만)\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(500);",
											"});",
											"",
											"// 1) 가입자(일반/검수) 구분에 따른 응답 확인",
											"pm.test(\"1) 가입자(일반/검수) 구분에 따른 응답 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"// 2) 어플타입에 따른 응답 구분",
											"pm.test(\"2) 어플타입에 따른 응답 구분\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"// 3) 페이징 확인",
											"var query = {};",
											"pm.request.url.query.all().forEach((param) => { query[param.key] = param.value});",
											"pm.test(\"3) 페이징 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    var recordset = jsonData.result.recordset;",
											"    var total_count = jsonData.result.total_count;",
											"    ",
											"    if(query[\"start_num\"] == -1 && query[\"paging_type\"] != \"N\"){",
											"        // total 숫자 확인",
											"        pm.expect(recordset.length).to.eql(parseInt(total_count));",
											"        // total 개수 확인",
											"        pm.expect(recordset.length).to.eql(parseInt(total_count));",
											"        // 데이터 확인",
											"        for(i in recordset){",
											"            pm.expect(recordset[i].album_id).to.match(/\\w{15}/);",
											"        }",
											"    }else if(query[\"start_num\"] == 0){",
											"        // total 숫자 확인",
											"        pm.expect(jsonData.result.total_count).to.match(/\\d/);",
											"        // recordset null 확인",
											"        pm.expect(recordset).to.null;",
											"    }else{",
											"        let request = pm.request;",
											"        // 전체 조회를 위해 파라미터 값 수정",
											"        request.url.query[\"reference\"][\"start_num\"][\"value\"] = \"-1\";",
											"        request.url.query[\"reference\"][\"paging_type\"][\"value\"] = \"\";",
											"",
											"        pm.expect(recordset).to.not.empty;",
											"        pm.sendRequest(request, function (err, response) {",
											"            let total = response.json().result.recordset;",
											"        ",
											"            // 큐 sorting",
											"            if(query[\"start_num\"]<0){   // 시계 방향 회전",
											"                for(let i=0;i>query[\"start_num\"];i--){",
											"                    total.unshift(total.pop());",
											"                }",
											"            }else{   // 반시계 방향 회전",
											"                for(let i=1;i<query[\"start_num\"];i++){",
											"                    total.push(total.shift());",
											"                }",
											"            }",
											"",
											"            // 데이터 확인",
											"            for(let i in recordset){",
											"                // 정보 확인",
											"                pm.expect(recordset[i].album_id).to.match(/\\w{15}/);",
											"                // 순서 확인",
											"                pm.expect(recordset[i].album_id).to.eql(total[0].album_id);",
											"                total.push(total.shift());",
											"            }",
											"        });",
											"    }",
											"}); ",
											"",
											"// 4) 카테고리 타입 확인",
											"pm.test(\"4) 카테고리 타입 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"// 5) 망타입 확인",
											"pm.test(\"5) 망타입 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    var recordset = jsonData.result.recordset;",
											"    ",
											"    if(query[\"net_typ\"] == \"01\" || query[\"net_typ\"] == \"02\"){",
											"        for(i in recordset){",
											"            pm.expect(recordset[i].is_fh).to.oneOf([\"Y\",\"N\"]);",
											"        }",
											"    }else{",
											"        for(i in recordset){",
											"            pm.expect(recordset[i].is_fh).to.eql(\"N\");",
											"        }",
											"    }",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Host",
										"value": "programming.fleta.com",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://{{mims}}/smartux/getSUXMAlbumList?sa_id=T61060140414&stb_mac=8c6d.5044.45dd&app_type=SMA&start_num=-1&req_count=2&paging_type=&schedule_code=4&net_typ=01&category_gb=I20&app_name=&ui_version=&pre_page=&cur_page=&dev_info=&os_info=&nw_info=&dev_model=&carrier_type=",
									"protocol": "http",
									"host": [
										"{{mims}}"
									],
									"path": [
										"smartux",
										"getSUXMAlbumList"
									],
									"query": [
										{
											"key": "sa_id",
											"value": "T61060140414"
										},
										{
											"key": "stb_mac",
											"value": "8c6d.5044.45dd"
										},
										{
											"key": "app_type",
											"value": "SMA"
										},
										{
											"key": "start_num",
											"value": "-1"
										},
										{
											"key": "req_count",
											"value": "2"
										},
										{
											"key": "paging_type",
											"value": ""
										},
										{
											"key": "schedule_code",
											"value": "4"
										},
										{
											"key": "net_typ",
											"value": "01"
										},
										{
											"key": "category_gb",
											"value": "I20"
										},
										{
											"key": "app_name",
											"value": ""
										},
										{
											"key": "ui_version",
											"value": ""
										},
										{
											"key": "pre_page",
											"value": ""
										},
										{
											"key": "cur_page",
											"value": ""
										},
										{
											"key": "dev_info",
											"value": ""
										},
										{
											"key": "os_info",
											"value": ""
										},
										{
											"key": "nw_info",
											"value": ""
										},
										{
											"key": "dev_model",
											"value": ""
										},
										{
											"key": "carrier_type",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "/smartux/getSUXMAlbumList_NTC15_일반 가입자_UX_-1,X,N_02_I30 Copy 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// 공통",
											"// WAS 정상응답 체크 (200여부)",
											"pm.test(\"[공통]WAS 정상응답 체크 (200여부)\", function () {",
											"    pm.response.to.have.status(200);   ",
											"});",
											"",
											"// 응답속도 체크(0.5초미만) 여부",
											"pm.test(\"[공통]응답속도 체크(0.5초미만)\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(500);",
											"});",
											"",
											"// 1) 가입자(일반/검수) 구분에 따른 응답 확인",
											"pm.test(\"1) 가입자(일반/검수) 구분에 따른 응답 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"// 2) 어플타입에 따른 응답 구분",
											"pm.test(\"2) 어플타입에 따른 응답 구분\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"// 3) 페이징 확인",
											"var query = {};",
											"pm.request.url.query.all().forEach((param) => { query[param.key] = param.value});",
											"pm.test(\"3) 페이징 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    var recordset = jsonData.result.recordset;",
											"    var total_count = jsonData.result.total_count;",
											"    ",
											"    if(query[\"start_num\"] == -1 && query[\"paging_type\"] != \"N\"){",
											"        // total 숫자 확인",
											"        pm.expect(recordset.length).to.eql(parseInt(total_count));",
											"        // total 개수 확인",
											"        pm.expect(recordset.length).to.eql(parseInt(total_count));",
											"        // 데이터 확인",
											"        for(i in recordset){",
											"            pm.expect(recordset[i].album_id).to.match(/\\w{15}/);",
											"        }",
											"    }else if(query[\"start_num\"] == 0){",
											"        // total 숫자 확인",
											"        pm.expect(jsonData.result.total_count).to.match(/\\d/);",
											"        // recordset null 확인",
											"        pm.expect(recordset).to.null;",
											"    }else{",
											"        let request = pm.request;",
											"        // 전체 조회를 위해 파라미터 값 수정",
											"        request.url.query[\"reference\"][\"start_num\"][\"value\"] = \"-1\";",
											"        request.url.query[\"reference\"][\"paging_type\"][\"value\"] = \"\";",
											"",
											"        pm.expect(recordset).to.not.empty;",
											"        pm.sendRequest(request, function (err, response) {",
											"            let total = response.json().result.recordset;",
											"        ",
											"            // 큐 sorting",
											"            if(query[\"start_num\"]<0){   // 시계 방향 회전",
											"                for(let i=0;i>query[\"start_num\"];i--){",
											"                    total.unshift(total.pop());",
											"                }",
											"            }else{   // 반시계 방향 회전",
											"                for(let i=1;i<query[\"start_num\"];i++){",
											"                    total.push(total.shift());",
											"                }",
											"            }",
											"",
											"            // 데이터 확인",
											"            for(let i in recordset){",
											"                // 정보 확인",
											"                pm.expect(recordset[i].album_id).to.match(/\\w{15}/);",
											"                // 순서 확인",
											"                pm.expect(recordset[i].album_id).to.eql(total[0].album_id);",
											"                total.push(total.shift());",
											"            }",
											"        });",
											"    }",
											"}); ",
											"",
											"// 4) 카테고리 타입 확인",
											"pm.test(\"4) 카테고리 타입 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"// 5) 망타입 확인",
											"pm.test(\"5) 망타입 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    var recordset = jsonData.result.recordset;",
											"    ",
											"    if(query[\"net_typ\"] == \"01\" || query[\"net_typ\"] == \"02\"){",
											"        for(i in recordset){",
											"            pm.expect(recordset[i].is_fh).to.oneOf([\"Y\",\"N\"]);",
											"        }",
											"    }else{",
											"        for(i in recordset){",
											"            pm.expect(recordset[i].is_fh).to.eql(\"N\");",
											"        }",
											"    }",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Host",
										"value": "programming.fleta.com",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://{{mims}}/smartux/getSUXMAlbumList?sa_id=T61060140414&stb_mac=8c6d.5044.45dd&app_type=UX&start_num=-1&req_count=2&paging_type=N&schedule_code=473&net_typ=02&category_gb=I30&app_name=&ui_version=&pre_page=&cur_page=&dev_info=&os_info=&nw_info=&dev_model=&carrier_type=",
									"protocol": "http",
									"host": [
										"{{mims}}"
									],
									"path": [
										"smartux",
										"getSUXMAlbumList"
									],
									"query": [
										{
											"key": "sa_id",
											"value": "T61060140414"
										},
										{
											"key": "stb_mac",
											"value": "8c6d.5044.45dd"
										},
										{
											"key": "app_type",
											"value": "UX"
										},
										{
											"key": "start_num",
											"value": "-1"
										},
										{
											"key": "req_count",
											"value": "2"
										},
										{
											"key": "paging_type",
											"value": "N"
										},
										{
											"key": "schedule_code",
											"value": "473"
										},
										{
											"key": "net_typ",
											"value": "02"
										},
										{
											"key": "category_gb",
											"value": "I30"
										},
										{
											"key": "app_name",
											"value": ""
										},
										{
											"key": "ui_version",
											"value": ""
										},
										{
											"key": "pre_page",
											"value": ""
										},
										{
											"key": "cur_page",
											"value": ""
										},
										{
											"key": "dev_info",
											"value": ""
										},
										{
											"key": "os_info",
											"value": ""
										},
										{
											"key": "nw_info",
											"value": ""
										},
										{
											"key": "dev_model",
											"value": ""
										},
										{
											"key": "carrier_type",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "/smartux/getSUXMAlbumList_NTC37_일반 가입자_SMA_-1,X,null_01_I20 Copy 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// 공통",
											"// WAS 정상응답 체크 (200여부)",
											"pm.test(\"[공통]WAS 정상응답 체크 (200여부)\", function () {",
											"    pm.response.to.have.status(200);   ",
											"});",
											"",
											"// 응답속도 체크(0.5초미만) 여부",
											"pm.test(\"[공통]응답속도 체크(0.5초미만)\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(500);",
											"});",
											"",
											"// 1) 가입자(일반/검수) 구분에 따른 응답 확인",
											"pm.test(\"1) 가입자(일반/검수) 구분에 따른 응답 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"// 2) 어플타입에 따른 응답 구분",
											"pm.test(\"2) 어플타입에 따른 응답 구분\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"// 3) 페이징 확인",
											"var query = {};",
											"pm.request.url.query.all().forEach((param) => { query[param.key] = param.value});",
											"pm.test(\"3) 페이징 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    var recordset = jsonData.result.recordset;",
											"    var total_count = jsonData.result.total_count;",
											"    ",
											"    if(query[\"start_num\"] == -1 && query[\"paging_type\"] != \"N\"){",
											"        // total 숫자 확인",
											"        pm.expect(recordset.length).to.eql(parseInt(total_count));",
											"        // total 개수 확인",
											"        pm.expect(recordset.length).to.eql(parseInt(total_count));",
											"        // 데이터 확인",
											"        for(i in recordset){",
											"            pm.expect(recordset[i].album_id).to.match(/\\w{15}/);",
											"        }",
											"    }else if(query[\"start_num\"] == 0){",
											"        // total 숫자 확인",
											"        pm.expect(jsonData.result.total_count).to.match(/\\d/);",
											"        // recordset null 확인",
											"        pm.expect(recordset).to.null;",
											"    }else{",
											"        let request = pm.request;",
											"        // 전체 조회를 위해 파라미터 값 수정",
											"        request.url.query[\"reference\"][\"start_num\"][\"value\"] = \"-1\";",
											"        request.url.query[\"reference\"][\"paging_type\"][\"value\"] = \"\";",
											"",
											"        pm.expect(recordset).to.not.empty;",
											"        pm.sendRequest(request, function (err, response) {",
											"            let total = response.json().result.recordset;",
											"        ",
											"            // 큐 sorting",
											"            if(query[\"start_num\"]<0){   // 시계 방향 회전",
											"                for(let i=0;i>query[\"start_num\"];i--){",
											"                    total.unshift(total.pop());",
											"                }",
											"            }else{   // 반시계 방향 회전",
											"                for(let i=1;i<query[\"start_num\"];i++){",
											"                    total.push(total.shift());",
											"                }",
											"            }",
											"",
											"            // 데이터 확인",
											"            for(let i in recordset){",
											"                // 정보 확인",
											"                pm.expect(recordset[i].album_id).to.match(/\\w{15}/);",
											"                // 순서 확인",
											"                pm.expect(recordset[i].album_id).to.eql(total[0].album_id);",
											"                total.push(total.shift());",
											"            }",
											"        });",
											"    }",
											"}); ",
											"",
											"// 4) 카테고리 타입 확인",
											"pm.test(\"4) 카테고리 타입 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"// 5) 망타입 확인",
											"pm.test(\"5) 망타입 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    var recordset = jsonData.result.recordset;",
											"    ",
											"    if(query[\"net_typ\"] == \"01\" || query[\"net_typ\"] == \"02\"){",
											"        for(i in recordset){",
											"            pm.expect(recordset[i].is_fh).to.oneOf([\"Y\",\"N\"]);",
											"        }",
											"    }else{",
											"        for(i in recordset){",
											"            pm.expect(recordset[i].is_fh).to.eql(\"N\");",
											"        }",
											"    }",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Host",
										"value": "programming.fleta.com",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://{{mims}}/smartux/getSUXMAlbumList?sa_id=T61060140414&stb_mac=8c6d.5044.45dd&app_type=SMA&start_num=-1&req_count=2&paging_type=&schedule_code=4&net_typ=01&category_gb=I20&app_name=&ui_version=&pre_page=&cur_page=&dev_info=&os_info=&nw_info=&dev_model=&carrier_type=",
									"protocol": "http",
									"host": [
										"{{mims}}"
									],
									"path": [
										"smartux",
										"getSUXMAlbumList"
									],
									"query": [
										{
											"key": "sa_id",
											"value": "T61060140414"
										},
										{
											"key": "stb_mac",
											"value": "8c6d.5044.45dd"
										},
										{
											"key": "app_type",
											"value": "SMA"
										},
										{
											"key": "start_num",
											"value": "-1"
										},
										{
											"key": "req_count",
											"value": "2"
										},
										{
											"key": "paging_type",
											"value": ""
										},
										{
											"key": "schedule_code",
											"value": "4"
										},
										{
											"key": "net_typ",
											"value": "01"
										},
										{
											"key": "category_gb",
											"value": "I20"
										},
										{
											"key": "app_name",
											"value": ""
										},
										{
											"key": "ui_version",
											"value": ""
										},
										{
											"key": "pre_page",
											"value": ""
										},
										{
											"key": "cur_page",
											"value": ""
										},
										{
											"key": "dev_info",
											"value": ""
										},
										{
											"key": "os_info",
											"value": ""
										},
										{
											"key": "nw_info",
											"value": ""
										},
										{
											"key": "dev_model",
											"value": ""
										},
										{
											"key": "carrier_type",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "/smartux/getSUXMAlbumList_NTC43_일반 가입자_SMA_-1,X,null_31_I20 Copy 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// 공통",
											"// WAS 정상응답 체크 (200여부)",
											"pm.test(\"[공통]WAS 정상응답 체크 (200여부)\", function () {",
											"    pm.response.to.have.status(200);   ",
											"});",
											"",
											"// 응답속도 체크(0.5초미만) 여부",
											"pm.test(\"[공통]응답속도 체크(0.5초미만)\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(500);",
											"});",
											"",
											"// 1) 가입자(일반/검수) 구분에 따른 응답 확인",
											"pm.test(\"1) 가입자(일반/검수) 구분에 따른 응답 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"// 2) 어플타입에 따른 응답 구분",
											"pm.test(\"2) 어플타입에 따른 응답 구분\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"// 3) 페이징 확인",
											"var query = {};",
											"pm.request.url.query.all().forEach((param) => { query[param.key] = param.value});",
											"pm.test(\"3) 페이징 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    var recordset = jsonData.result.recordset;",
											"    var total_count = jsonData.result.total_count;",
											"    ",
											"    if(query[\"start_num\"] == -1 && query[\"paging_type\"] != \"N\"){",
											"        // total 숫자 확인",
											"        pm.expect(recordset.length).to.eql(parseInt(total_count));",
											"        // total 개수 확인",
											"        pm.expect(recordset.length).to.eql(parseInt(total_count));",
											"        // 데이터 확인",
											"        for(i in recordset){",
											"            pm.expect(recordset[i].album_id).to.match(/\\w{15}/);",
											"        }",
											"    }else if(query[\"start_num\"] == 0){",
											"        // total 숫자 확인",
											"        pm.expect(jsonData.result.total_count).to.match(/\\d/);",
											"        // recordset null 확인",
											"        pm.expect(recordset).to.null;",
											"    }else{",
											"        let request = pm.request;",
											"        // 전체 조회를 위해 파라미터 값 수정",
											"        request.url.query[\"reference\"][\"start_num\"][\"value\"] = \"-1\";",
											"        request.url.query[\"reference\"][\"paging_type\"][\"value\"] = \"\";",
											"",
											"        pm.expect(recordset).to.not.empty;",
											"        pm.sendRequest(request, function (err, response) {",
											"            let total = response.json().result.recordset;",
											"        ",
											"            // 큐 sorting",
											"            if(query[\"start_num\"]<0){   // 시계 방향 회전",
											"                for(let i=0;i>query[\"start_num\"];i--){",
											"                    total.unshift(total.pop());",
											"                }",
											"            }else{   // 반시계 방향 회전",
											"                for(let i=1;i<query[\"start_num\"];i++){",
											"                    total.push(total.shift());",
											"                }",
											"            }",
											"",
											"            // 데이터 확인",
											"            for(let i in recordset){",
											"                // 정보 확인",
											"                pm.expect(recordset[i].album_id).to.match(/\\w{15}/);",
											"                // 순서 확인",
											"                pm.expect(recordset[i].album_id).to.eql(total[0].album_id);",
											"                total.push(total.shift());",
											"            }",
											"        });",
											"    }",
											"}); ",
											"",
											"// 4) 카테고리 타입 확인",
											"pm.test(\"4) 카테고리 타입 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.result.flag).to.eql(\"0000\");",
											"});",
											"",
											"// 5) 망타입 확인",
											"pm.test(\"5) 망타입 확인\", function () {",
											"    var jsonData = pm.response.json();",
											"    var recordset = jsonData.result.recordset;",
											"    ",
											"    if(query[\"net_typ\"] == \"01\" || query[\"net_typ\"] == \"02\"){",
											"        for(i in recordset){",
											"            pm.expect(recordset[i].is_fh).to.oneOf([\"Y\",\"N\"]);",
											"        }",
											"    }else{",
											"        for(i in recordset){",
											"            pm.expect(recordset[i].is_fh).to.eql(\"N\");",
											"        }",
											"    }",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Host",
										"value": "programming.fleta.com",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "http://{{mims}}/smartux/getSUXMAlbumList?sa_id=T61060140414&stb_mac=8c6d.5044.45dd&app_type=SMA&start_num=-1&req_count=2&paging_type=&schedule_code=4&net_typ=31&category_gb=I20&app_name=&ui_version=&pre_page=&cur_page=&dev_info=&os_info=&nw_info=&dev_model=&carrier_type=",
									"protocol": "http",
									"host": [
										"{{mims}}"
									],
									"path": [
										"smartux",
										"getSUXMAlbumList"
									],
									"query": [
										{
											"key": "sa_id",
											"value": "T61060140414"
										},
										{
											"key": "stb_mac",
											"value": "8c6d.5044.45dd"
										},
										{
											"key": "app_type",
											"value": "SMA"
										},
										{
											"key": "start_num",
											"value": "-1"
										},
										{
											"key": "req_count",
											"value": "2"
										},
										{
											"key": "paging_type",
											"value": ""
										},
										{
											"key": "schedule_code",
											"value": "4"
										},
										{
											"key": "net_typ",
											"value": "31"
										},
										{
											"key": "category_gb",
											"value": "I20"
										},
										{
											"key": "app_name",
											"value": ""
										},
										{
											"key": "ui_version",
											"value": ""
										},
										{
											"key": "pre_page",
											"value": ""
										},
										{
											"key": "cur_page",
											"value": ""
										},
										{
											"key": "dev_info",
											"value": ""
										},
										{
											"key": "os_info",
											"value": ""
										},
										{
											"key": "nw_info",
											"value": ""
										},
										{
											"key": "dev_model",
											"value": ""
										},
										{
											"key": "carrier_type",
											"value": ""
										}
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"// 공통",
									"",
									"// WAS 정상응답 체크 (200여부)",
									"pm.test(\"[공통]WAS 정상응답 체크 (200여부)\", function () {",
									"    pm.response.to.have.status(200);   ",
									"});",
									"",
									"// 응답속도 체크(0.5초미만) 여부",
									"pm.test(\"[공통]응답속도 체크(0.5초미만)\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(500);",
									"});"
								]
							}
						}
					]
				}
			]
		}
	]
}